Complexity metrics,Wed, 17 Apr 2019 15:34:39 EDT,
Method,ev(G),iv(G),v(G)
"null.compare(ByteOrderMark,ByteOrderMark)",3,1,3
null.matches(String),1,1,1
"org.apache.commons.io.ByteOrderMark.ByteOrderMark(String,int...)",3,2,5
org.apache.commons.io.ByteOrderMark.equals(Object),5,2,5
org.apache.commons.io.ByteOrderMark.get(int),1,1,1
org.apache.commons.io.ByteOrderMark.getBytes(),1,1,2
org.apache.commons.io.ByteOrderMark.getCharsetName(),1,1,1
org.apache.commons.io.ByteOrderMark.hashCode(),1,1,2
org.apache.commons.io.ByteOrderMark.length(),1,1,1
org.apache.commons.io.ByteOrderMark.toString(),1,3,3
org.apache.commons.io.ByteOrderMarkTestCase.charsetName(),1,1,1
org.apache.commons.io.ByteOrderMarkTestCase.constantCharsetNames(),1,1,1
org.apache.commons.io.ByteOrderMarkTestCase.errors(),1,1,5
org.apache.commons.io.ByteOrderMarkTestCase.get(),1,1,1
org.apache.commons.io.ByteOrderMarkTestCase.getBytes(),1,1,1
org.apache.commons.io.ByteOrderMarkTestCase.testEquals(),1,1,1
org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(),1,1,1
org.apache.commons.io.ByteOrderMarkTestCase.testLength(),1,1,1
org.apache.commons.io.ByteOrderMarkTestCase.testToString(),1,1,1
org.apache.commons.io.ByteOrderUtils.ByteOrderUtils(),1,1,1
org.apache.commons.io.ByteOrderUtils.parseByteOrder(String),3,3,5
org.apache.commons.io.ByteOrderUtilsTest.parseByteOrder(String),1,1,1
org.apache.commons.io.ByteOrderUtilsTest.testParseBig(),1,1,1
org.apache.commons.io.ByteOrderUtilsTest.testParseLittle(),1,1,1
org.apache.commons.io.Charsets.requiredCharsets(),1,1,1
org.apache.commons.io.Charsets.toCharset(Charset),1,2,2
org.apache.commons.io.Charsets.toCharset(String),1,2,2
org.apache.commons.io.CharsetsTestCase.testIso8859_1(),1,1,1
org.apache.commons.io.CharsetsTestCase.testRequiredCharsets(),1,1,1
org.apache.commons.io.CharsetsTestCase.testToCharset(),1,1,1
org.apache.commons.io.CharsetsTestCase.testUsAscii(),1,1,1
org.apache.commons.io.CharsetsTestCase.testUtf16(),1,1,1
org.apache.commons.io.CharsetsTestCase.testUtf16Be(),1,1,1
org.apache.commons.io.CharsetsTestCase.testUtf16Le(),1,1,1
org.apache.commons.io.CharsetsTestCase.testUtf8(),1,1,1
org.apache.commons.io.CopyUtils.CopyUtils(),1,1,1
"org.apache.commons.io.CopyUtils.copy(InputStream,OutputStream)",1,2,2
"org.apache.commons.io.CopyUtils.copy(InputStream,Writer)",1,1,1
"org.apache.commons.io.CopyUtils.copy(InputStream,Writer,String)",1,1,1
"org.apache.commons.io.CopyUtils.copy(Reader,OutputStream)",1,1,1
"org.apache.commons.io.CopyUtils.copy(Reader,OutputStream,String)",1,1,1
"org.apache.commons.io.CopyUtils.copy(Reader,Writer)",1,2,2
"org.apache.commons.io.CopyUtils.copy(String,OutputStream)",1,1,1
"org.apache.commons.io.CopyUtils.copy(String,OutputStream,String)",1,1,1
"org.apache.commons.io.CopyUtils.copy(String,Writer)",1,1,1
"org.apache.commons.io.CopyUtils.copy(byte[],OutputStream)",1,1,1
"org.apache.commons.io.CopyUtils.copy(byte[],Writer)",1,1,1
"org.apache.commons.io.CopyUtils.copy(byte[],Writer,String)",1,1,1
org.apache.commons.io.CopyUtilsTest.copy_byteArrayToOutputStream(),1,1,1
org.apache.commons.io.CopyUtilsTest.copy_byteArrayToWriter(),1,1,1
org.apache.commons.io.CopyUtilsTest.copy_inputStreamToWriter(),1,1,1
org.apache.commons.io.CopyUtilsTest.copy_inputStreamToWriterWithEncoding(),1,1,1
org.apache.commons.io.CopyUtilsTest.copy_readerToWriter(),1,1,1
org.apache.commons.io.CopyUtilsTest.copy_stringToOutputStream(),1,1,1
org.apache.commons.io.CopyUtilsTest.copy_stringToWriter(),1,1,1
org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding(),1,1,1
org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(),1,1,1
org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(),1,1,1
org.apache.commons.io.CopyUtilsTest.testCtor(),1,1,1
"org.apache.commons.io.DemuxTestCase.ReaderThread.ReaderThread(String,InputStream,DemuxInputStream)",1,1,1
org.apache.commons.io.DemuxTestCase.ReaderThread.getData(),1,1,1
org.apache.commons.io.DemuxTestCase.ReaderThread.run(),1,3,3
"org.apache.commons.io.DemuxTestCase.WriterThread.WriterThread(String,String,OutputStream,DemuxOutputStream)",1,1,1
org.apache.commons.io.DemuxTestCase.WriterThread.run(),1,3,3
org.apache.commons.io.DemuxTestCase.doJoin(),1,2,2
org.apache.commons.io.DemuxTestCase.doStart(),1,2,2
org.apache.commons.io.DemuxTestCase.getInput(String),1,1,1
org.apache.commons.io.DemuxTestCase.getOutput(String),1,1,1
"org.apache.commons.io.DemuxTestCase.startReader(String,String,DemuxInputStream)",1,1,1
"org.apache.commons.io.DemuxTestCase.startWriter(String,String,DemuxOutputStream)",1,1,1
org.apache.commons.io.DemuxTestCase.testInputStream(),1,1,1
org.apache.commons.io.DemuxTestCase.testOutputStream(),1,1,1
"org.apache.commons.io.DirectoryWalker.CancelException.CancelException(File,int)",1,1,1
"org.apache.commons.io.DirectoryWalker.CancelException.CancelException(String,File,int)",1,1,1
org.apache.commons.io.DirectoryWalker.CancelException.getDepth(),1,1,1
org.apache.commons.io.DirectoryWalker.CancelException.getFile(),1,1,1
org.apache.commons.io.DirectoryWalker.DirectoryWalker(),1,1,1
"org.apache.commons.io.DirectoryWalker.DirectoryWalker(FileFilter,int)",1,1,1
"org.apache.commons.io.DirectoryWalker.DirectoryWalker(IOFileFilter,IOFileFilter,int)",1,2,5
"org.apache.commons.io.DirectoryWalker.checkIfCancelled(File,int,Collection<T>)",2,1,2
"org.apache.commons.io.DirectoryWalker.filterDirectoryContents(File,int,File[])",1,1,1
"org.apache.commons.io.DirectoryWalker.handleCancelled(File,Collection<T>,CancelException)",1,1,1
"org.apache.commons.io.DirectoryWalker.handleDirectory(File,int,Collection<T>)",1,1,1
"org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(File,int,Collection<T>)",1,1,1
"org.apache.commons.io.DirectoryWalker.handleDirectoryStart(File,int,Collection<T>)",1,1,1
org.apache.commons.io.DirectoryWalker.handleEnd(Collection<T>),1,1,1
"org.apache.commons.io.DirectoryWalker.handleFile(File,int,Collection<T>)",1,1,1
"org.apache.commons.io.DirectoryWalker.handleIsCancelled(File,int,Collection<T>)",1,1,1
"org.apache.commons.io.DirectoryWalker.handleRestricted(File,int,Collection<T>)",1,1,1
"org.apache.commons.io.DirectoryWalker.handleStart(File,Collection<T>)",1,1,1
"org.apache.commons.io.DirectoryWalker.walk(File,Collection<T>)",2,2,3
"org.apache.commons.io.DirectoryWalker.walk(File,int,Collection<T>)",1,7,8
"org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.TestCancelWalker(String,boolean)",1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.find(File),1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleCancelled(File,Collection<File>,CancelException)",1,2,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleDirectoryEnd(File,int,Collection<File>)",2,1,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleFile(File,int,Collection<File>)",2,1,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.TestFalseFileFinder(FileFilter,int)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.handleDirectory(File,int,Collection<File>)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(FileFilter,int)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(IOFileFilter,IOFileFilter,int)",1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(File),1,2,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.handleDirectoryEnd(File,int,Collection<File>)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.handleFile(File,int,Collection<File>)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.TestFileFinderString(FileFilter,int)",1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.find(File),1,2,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.handleFile(File,int,Collection<String>)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(String,boolean)",1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.find(File),1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleCancelled(File,Collection<File>,CancelException)",1,2,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleDirectoryEnd(File,int,Collection<File>)",1,1,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleFile(File,int,Collection<File>)",1,1,2
"org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleIsCancelled(File,int,Collection<File>)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(String,File[],Collection<File>)",1,2,2
"org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(String,File[],Collection<String>)",1,2,2
org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter(File[]),1,2,2
org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(Collection<File>),1,3,3
org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(Collection<File>),1,3,3
org.apache.commons.io.DirectoryWalkerTestCase.testCancel(),1,6,6
org.apache.commons.io.DirectoryWalkerTestCase.testFilter(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(),1,1,2
org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(),1,6,6
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.TestCancelWalker(String,boolean)",1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.find(File),1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleCancelled(File,Collection,CancelException)",1,2,2
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleDirectoryEnd(File,int,Collection)",2,1,2
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleFile(File,int,Collection)",2,1,2
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.TestFalseFileFinder(FileFilter,int)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.handleDirectory(File,int,Collection)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(FileFilter,int)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(IOFileFilter,IOFileFilter,int)",1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(File),1,2,2
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.handleDirectoryEnd(File,int,Collection)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.handleFile(File,int,Collection)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(String,boolean)",1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.find(File),1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleCancelled(File,Collection,CancelException)",1,2,2
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleDirectoryEnd(File,int,Collection)",1,1,2
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleFile(File,int,Collection)",1,1,2
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleIsCancelled(File,int,Collection)",1,1,1
"org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(String,File[],Collection)",1,2,2
org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter(File[]),1,2,2
org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(Collection<File>),1,3,3
org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(Collection<File>),1,3,3
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(),1,3,3
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(),1,1,1
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(),1,1,2
org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(),1,3,3
org.apache.commons.io.EndianUtils.EndianUtils(),1,1,1
org.apache.commons.io.EndianUtils.read(InputStream),2,1,2
org.apache.commons.io.EndianUtils.readSwappedDouble(InputStream),1,1,1
"org.apache.commons.io.EndianUtils.readSwappedDouble(byte[],int)",1,1,1
org.apache.commons.io.EndianUtils.readSwappedFloat(InputStream),1,1,1
"org.apache.commons.io.EndianUtils.readSwappedFloat(byte[],int)",1,1,1
org.apache.commons.io.EndianUtils.readSwappedInteger(InputStream),1,1,1
"org.apache.commons.io.EndianUtils.readSwappedInteger(byte[],int)",1,1,1
org.apache.commons.io.EndianUtils.readSwappedLong(InputStream),1,2,2
"org.apache.commons.io.EndianUtils.readSwappedLong(byte[],int)",1,1,1
org.apache.commons.io.EndianUtils.readSwappedShort(InputStream),1,1,1
"org.apache.commons.io.EndianUtils.readSwappedShort(byte[],int)",1,1,1
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(InputStream),1,1,1
"org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(byte[],int)",1,1,1
org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(InputStream),1,1,1
"org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(byte[],int)",1,1,1
org.apache.commons.io.EndianUtils.swapDouble(double),1,1,1
org.apache.commons.io.EndianUtils.swapFloat(float),1,1,1
org.apache.commons.io.EndianUtils.swapInteger(int),1,1,1
org.apache.commons.io.EndianUtils.swapLong(long),1,1,1
org.apache.commons.io.EndianUtils.swapShort(short),1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedDouble(OutputStream,double)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedDouble(byte[],int,double)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedFloat(OutputStream,float)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedFloat(byte[],int,float)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedInteger(OutputStream,int)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedInteger(byte[],int,int)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedLong(OutputStream,long)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedLong(byte[],int,long)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedShort(OutputStream,short)",1,1,1
"org.apache.commons.io.EndianUtils.writeSwappedShort(byte[],int,short)",1,1,1
org.apache.commons.io.EndianUtilsTest.testCtor(),1,1,1
org.apache.commons.io.EndianUtilsTest.testEOFException(),1,1,2
org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble(),1,1,1
org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(),1,1,1
org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger(),1,1,1
org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(),1,1,1
org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(),1,1,1
org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(),1,1,1
org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(),1,1,1
org.apache.commons.io.EndianUtilsTest.testSwapDouble(),1,1,1
org.apache.commons.io.EndianUtilsTest.testSwapFloat(),1,1,1
org.apache.commons.io.EndianUtilsTest.testSwapInteger(),1,1,1
org.apache.commons.io.EndianUtilsTest.testSwapLong(),1,1,1
org.apache.commons.io.EndianUtilsTest.testSwapShort(),1,1,1
org.apache.commons.io.EndianUtilsTest.testSymmetry(),1,1,1
org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(),1,2,2
org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(),1,1,1
org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(),1,1,1
org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(),1,1,1
org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(),1,1,1
org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(),1,1,1
org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(),1,1,1
org.apache.commons.io.FileCleaner.exitWhenFinished(),1,1,1
org.apache.commons.io.FileCleaner.getInstance(),1,1,1
org.apache.commons.io.FileCleaner.getTrackCount(),1,1,1
"org.apache.commons.io.FileCleaner.track(File,Object)",1,1,1
"org.apache.commons.io.FileCleaner.track(File,Object,FileDeleteStrategy)",1,1,1
"org.apache.commons.io.FileCleaner.track(String,Object)",1,1,1
"org.apache.commons.io.FileCleaner.track(String,Object,FileDeleteStrategy)",1,1,1
org.apache.commons.io.FileCleanerTestCase.newInstance(),1,1,1
org.apache.commons.io.FileCleaningTracker.Reaper.Reaper(),1,1,1
org.apache.commons.io.FileCleaningTracker.Reaper.run(),2,4,5
"org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(String,FileDeleteStrategy,Object,ReferenceQueue<? super Object>)",1,1,2
org.apache.commons.io.FileCleaningTracker.Tracker.delete(),1,1,1
org.apache.commons.io.FileCleaningTracker.Tracker.getPath(),1,1,1
"org.apache.commons.io.FileCleaningTracker.addTracker(String,Object,FileDeleteStrategy)",2,2,3
org.apache.commons.io.FileCleaningTracker.exitWhenFinished(),1,2,2
org.apache.commons.io.FileCleaningTracker.getDeleteFailures(),1,1,1
org.apache.commons.io.FileCleaningTracker.getTrackCount(),1,1,1
"org.apache.commons.io.FileCleaningTracker.track(File,Object)",1,1,1
"org.apache.commons.io.FileCleaningTracker.track(File,Object,FileDeleteStrategy)",2,1,2
"org.apache.commons.io.FileCleaningTracker.track(String,Object)",1,1,1
"org.apache.commons.io.FileCleaningTracker.track(String,Object,FileDeleteStrategy)",2,1,2
org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.newInstance(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(File),1,3,4
org.apache.commons.io.FileCleaningTrackerTestCase.setUp(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(),2,2,2
org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(),1,2,2
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(),2,1,2
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(),1,3,3
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(),1,1,2
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(),1,1,1
org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(),1,1,5
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(),2,4,6
org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(String),1,1,1
org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.ForceFileDeleteStrategy(),1,1,1
org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.doDelete(File),1,1,1
org.apache.commons.io.FileDeleteStrategy.delete(File),2,2,3
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(File),2,2,4
org.apache.commons.io.FileDeleteStrategy.doDelete(File),1,1,1
org.apache.commons.io.FileDeleteStrategy.toString(),1,1,1
org.apache.commons.io.FileDeleteStrategyTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(),2,1,2
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(),2,1,3
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(),1,1,2
org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(),2,1,2
org.apache.commons.io.FileDeleteStrategyTestCase.testToString(),1,1,1
org.apache.commons.io.FileExistsException.FileExistsException(),1,1,1
org.apache.commons.io.FileExistsException.FileExistsException(File),1,1,1
org.apache.commons.io.FileExistsException.FileExistsException(String),1,1,1
org.apache.commons.io.FileSystemUtils.FileSystemUtils(),1,1,1
org.apache.commons.io.FileSystemUtils.freeSpace(String),1,1,1
org.apache.commons.io.FileSystemUtils.freeSpaceKb(),1,1,1
org.apache.commons.io.FileSystemUtils.freeSpaceKb(String),1,1,1
"org.apache.commons.io.FileSystemUtils.freeSpaceKb(String,long)",1,1,1
org.apache.commons.io.FileSystemUtils.freeSpaceKb(long),1,1,1
"org.apache.commons.io.FileSystemUtils.freeSpaceOS(String,int,boolean,long)",7,6,8
"org.apache.commons.io.FileSystemUtils.freeSpaceUnix(String,boolean,boolean,long)",5,4,9
"org.apache.commons.io.FileSystemUtils.freeSpaceWindows(String,long)",4,4,6
org.apache.commons.io.FileSystemUtils.openProcess(String[]),1,1,1
"org.apache.commons.io.FileSystemUtils.parseBytes(String,String)",2,1,3
"org.apache.commons.io.FileSystemUtils.parseDir(String,String)",6,8,11
"org.apache.commons.io.FileSystemUtils.performCommand(String[],int,long)",3,9,9
"org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(int,String)",1,1,1
"org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(int,String,String)",1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.openProcess(String[]),1,2,2
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError(),1,1,3
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath(),1,1,3
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other(),1,1,3
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(),1,1,2
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath(),1,1,5
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse(),1,1,5
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1(),1,1,5
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2(),1,1,5
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3(),1,1,5
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4(),1,1,5
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(),1,1,2
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(),1,1,1
org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(),1,7,9
org.apache.commons.io.FileUtils.FileUtils(),1,1,1
org.apache.commons.io.FileUtils.byteCountToDisplaySize(BigInteger),1,7,7
org.apache.commons.io.FileUtils.byteCountToDisplaySize(long),1,1,1
org.apache.commons.io.FileUtils.checkDirectory(File),3,1,3
"org.apache.commons.io.FileUtils.checkFileRequirements(File,File)",4,1,4
"org.apache.commons.io.FileUtils.checksum(File,Checksum)",2,1,2
org.apache.commons.io.FileUtils.checksumCRC32(File),1,1,1
org.apache.commons.io.FileUtils.cleanDirectory(File),2,2,4
org.apache.commons.io.FileUtils.cleanDirectoryOnExit(File),2,2,4
"org.apache.commons.io.FileUtils.contentEquals(File,File)",6,2,7
"org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(File,File,String)",5,4,8
org.apache.commons.io.FileUtils.convertFileCollectionToFileArray(Collection<File>),1,1,1
"org.apache.commons.io.FileUtils.copyDirectory(File,File)",1,1,1
"org.apache.commons.io.FileUtils.copyDirectory(File,File,FileFilter)",1,1,1
"org.apache.commons.io.FileUtils.copyDirectory(File,File,FileFilter,boolean)",3,5,8
"org.apache.commons.io.FileUtils.copyDirectory(File,File,boolean)",1,1,1
"org.apache.commons.io.FileUtils.copyDirectoryToDirectory(File,File)",5,3,7
"org.apache.commons.io.FileUtils.copyFile(File,File)",1,1,1
"org.apache.commons.io.FileUtils.copyFile(File,File,boolean)",6,4,8
"org.apache.commons.io.FileUtils.copyFile(File,OutputStream)",1,1,1
"org.apache.commons.io.FileUtils.copyFileToDirectory(File,File)",1,1,1
"org.apache.commons.io.FileUtils.copyFileToDirectory(File,File,boolean)",3,2,4
"org.apache.commons.io.FileUtils.copyInputStreamToFile(InputStream,File)",1,1,1
"org.apache.commons.io.FileUtils.copyToDirectory(File,File)",4,3,4
"org.apache.commons.io.FileUtils.copyToDirectory(Iterable<File>,File)",2,2,3
"org.apache.commons.io.FileUtils.copyToFile(InputStream,File)",1,1,1
"org.apache.commons.io.FileUtils.copyURLToFile(URL,File)",1,1,1
"org.apache.commons.io.FileUtils.copyURLToFile(URL,File,int,int)",1,1,1
org.apache.commons.io.FileUtils.decodeUrl(String),4,8,9
org.apache.commons.io.FileUtils.deleteDirectory(File),3,2,4
org.apache.commons.io.FileUtils.deleteDirectoryOnExit(File),2,2,3
org.apache.commons.io.FileUtils.deleteQuietly(File),2,2,5
"org.apache.commons.io.FileUtils.directoryContains(File,File)",5,2,6
"org.apache.commons.io.FileUtils.doCopyDirectory(File,File,FileFilter,boolean,List<String>)",6,9,13
"org.apache.commons.io.FileUtils.doCopyFile(File,File,boolean)",5,4,8
org.apache.commons.io.FileUtils.forceDelete(File),4,2,4
org.apache.commons.io.FileUtils.forceDeleteOnExit(File),1,2,2
org.apache.commons.io.FileUtils.forceMkdir(File),5,3,5
org.apache.commons.io.FileUtils.forceMkdirParent(File),2,1,2
"org.apache.commons.io.FileUtils.getFile(File,String...)",3,1,4
org.apache.commons.io.FileUtils.getFile(String...),2,1,4
org.apache.commons.io.FileUtils.getTempDirectory(),1,1,1
org.apache.commons.io.FileUtils.getTempDirectoryPath(),1,1,1
org.apache.commons.io.FileUtils.getUserDirectory(),1,1,1
org.apache.commons.io.FileUtils.getUserDirectoryPath(),1,1,1
"org.apache.commons.io.FileUtils.innerListFiles(Collection<File>,File,IOFileFilter,boolean)",1,5,5
"org.apache.commons.io.FileUtils.isFileNewer(File,Date)",2,1,2
"org.apache.commons.io.FileUtils.isFileNewer(File,File)",3,1,3
"org.apache.commons.io.FileUtils.isFileNewer(File,long)",3,1,3
"org.apache.commons.io.FileUtils.isFileOlder(File,Date)",2,1,2
"org.apache.commons.io.FileUtils.isFileOlder(File,File)",3,1,3
"org.apache.commons.io.FileUtils.isFileOlder(File,long)",3,1,3
org.apache.commons.io.FileUtils.isSymlink(File),2,1,2
"org.apache.commons.io.FileUtils.iterateFiles(File,IOFileFilter,IOFileFilter)",1,1,1
"org.apache.commons.io.FileUtils.iterateFiles(File,String[],boolean)",1,1,1
"org.apache.commons.io.FileUtils.iterateFilesAndDirs(File,IOFileFilter,IOFileFilter)",1,1,1
org.apache.commons.io.FileUtils.lineIterator(File),1,1,1
"org.apache.commons.io.FileUtils.lineIterator(File,String)",1,4,4
"org.apache.commons.io.FileUtils.listFiles(File,IOFileFilter,IOFileFilter)",1,1,1
"org.apache.commons.io.FileUtils.listFiles(File,String[],boolean)",1,2,3
"org.apache.commons.io.FileUtils.listFilesAndDirs(File,IOFileFilter,IOFileFilter)",1,2,2
"org.apache.commons.io.FileUtils.moveDirectory(File,File)",9,2,9
"org.apache.commons.io.FileUtils.moveDirectoryToDirectory(File,File,boolean)",5,3,7
"org.apache.commons.io.FileUtils.moveFile(File,File)",9,3,9
"org.apache.commons.io.FileUtils.moveFileToDirectory(File,File,boolean)",5,3,7
"org.apache.commons.io.FileUtils.moveToDirectory(File,File,boolean)",4,2,5
org.apache.commons.io.FileUtils.openInputStream(File),4,2,4
org.apache.commons.io.FileUtils.openOutputStream(File),1,1,1
"org.apache.commons.io.FileUtils.openOutputStream(File,boolean)",6,4,7
org.apache.commons.io.FileUtils.readFileToByteArray(File),1,2,2
org.apache.commons.io.FileUtils.readFileToString(File),1,1,1
"org.apache.commons.io.FileUtils.readFileToString(File,Charset)",1,1,1
"org.apache.commons.io.FileUtils.readFileToString(File,String)",1,1,1
org.apache.commons.io.FileUtils.readLines(File),1,1,1
"org.apache.commons.io.FileUtils.readLines(File,Charset)",1,1,1
"org.apache.commons.io.FileUtils.readLines(File,String)",1,1,1
org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(IOFileFilter),1,2,2
org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(IOFileFilter),1,1,1
org.apache.commons.io.FileUtils.sizeOf(File),3,2,3
org.apache.commons.io.FileUtils.sizeOf0(File),2,2,2
org.apache.commons.io.FileUtils.sizeOfAsBigInteger(File),3,2,3
org.apache.commons.io.FileUtils.sizeOfBig0(File),2,2,2
org.apache.commons.io.FileUtils.sizeOfDirectory(File),1,1,1
org.apache.commons.io.FileUtils.sizeOfDirectory0(File),5,3,6
org.apache.commons.io.FileUtils.sizeOfDirectoryAsBigInteger(File),1,1,1
org.apache.commons.io.FileUtils.sizeOfDirectoryBig0(File),2,3,5
org.apache.commons.io.FileUtils.toFile(URL),2,3,3
org.apache.commons.io.FileUtils.toFiles(URL[]),5,3,6
org.apache.commons.io.FileUtils.toSuffixes(String[]),1,1,2
org.apache.commons.io.FileUtils.toURLs(File[]),1,2,2
org.apache.commons.io.FileUtils.touch(File),2,2,3
"org.apache.commons.io.FileUtils.validateListFilesParameters(File,IOFileFilter)",3,1,3
org.apache.commons.io.FileUtils.verifiedListFiles(File),4,1,4
"org.apache.commons.io.FileUtils.waitFor(File,int)",3,3,6
"org.apache.commons.io.FileUtils.write(File,CharSequence)",1,1,1
"org.apache.commons.io.FileUtils.write(File,CharSequence,Charset)",1,1,1
"org.apache.commons.io.FileUtils.write(File,CharSequence,Charset,boolean)",1,2,2
"org.apache.commons.io.FileUtils.write(File,CharSequence,String)",1,1,1
"org.apache.commons.io.FileUtils.write(File,CharSequence,String,boolean)",1,1,1
"org.apache.commons.io.FileUtils.write(File,CharSequence,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeByteArrayToFile(File,byte[])",1,1,1
"org.apache.commons.io.FileUtils.writeByteArrayToFile(File,byte[],boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeByteArrayToFile(File,byte[],int,int)",1,1,1
"org.apache.commons.io.FileUtils.writeByteArrayToFile(File,byte[],int,int,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,Collection<?>)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,Collection<?>,String)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,Collection<?>,String,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,Collection<?>,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,String,Collection<?>)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,String,Collection<?>,String)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,String,Collection<?>,String,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeLines(File,String,Collection<?>,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String)",1,1,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String,Charset)",1,1,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String,Charset,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String,String)",1,1,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String,String,boolean)",1,1,1
"org.apache.commons.io.FileUtils.writeStringToFile(File,String,boolean)",1,1,1
"org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(File,int,boolean)",1,2,3
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp(),1,1,1
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty(),1,1,1
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(),1,1,1
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular(),1,1,1
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(),2,3,4
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(),2,3,4
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setUp(),1,1,1
"org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(File,File)",1,1,1
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(),2,1,2
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(),2,1,2
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(),2,1,2
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(),2,1,2
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesBrokenSymlinkFile(),2,1,2
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(),2,1,2
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(),2,1,2
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(),2,1,2
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist(),1,1,2
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testIO466(),1,1,1
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile(),1,1,2
org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment(),1,1,2
org.apache.commons.io.FileUtilsFileNewerTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.FileUtilsFileNewerTestCase.setUp(),3,1,3
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(),2,1,2
"org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(String,File,long,boolean)",1,1,1
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(),2,1,2
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate(),1,1,1
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile(),1,1,1
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference(),1,1,1
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(Collection<File>),1,2,2
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(Iterator<File>),1,2,2
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(),1,1,1
org.apache.commons.io.FileUtilsListFilesTestCase.setUp(),1,1,1
org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(),1,1,1
org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(),1,1,2
org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(),1,1,1
org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.ListDirectoryWalker(),1,1,1
"org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.handleDirectoryStart(File,int,Collection<File>)",1,2,2
"org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.handleFile(File,int,Collection<File>)",1,1,1
org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(File),1,1,1
org.apache.commons.io.FileUtilsTestCase.ShorterFile.ShorterFile(String),1,1,1
org.apache.commons.io.FileUtilsTestCase.ShorterFile.length(),1,1,1
org.apache.commons.io.FileUtilsTestCase.createCircularSymLink(File),1,2,3
"org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(File,File,File)",1,1,1
org.apache.commons.io.FileUtilsTestCase.getName(),1,1,1
org.apache.commons.io.FileUtilsTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(boolean),1,3,3
org.apache.commons.io.FileUtilsTestCase.setUp(),5,1,5
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeBigInteger(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySizeLong(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testChecksum(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testChecksumDouble(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testCompareSizeOf(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testContentEquals(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(),1,1,8
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(),3,1,3
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(),3,1,3
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(),3,1,3
org.apache.commons.io.FileUtilsTestCase.testCopyFile1(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(),1,2,3
org.apache.commons.io.FileUtilsTestCase.testCopyFile2(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyFileLarge(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithDirectory(),1,3,3
org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithFile(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithFileSourceDoesNotExist(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithFileSourceIsNull(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterable(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceDoesNotExist(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyToDirectoryWithIterableSourceIsNull(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyToSelf(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testDecodeUrl(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testDeleteDirectoryWithNonDirectory(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testFileUtils(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testForceMkdir(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testForceMkdirParent(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testGetFile(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(),1,1,3
org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testIO276(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testIO300(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testIncorrectOutputSize(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(),6,5,18
org.apache.commons.io.FileUtilsTestCase.testIterateFiles(),3,5,7
org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(),2,2,3
org.apache.commons.io.FileUtilsTestCase.testListFiles(),3,5,7
org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(),3,1,7
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors(),2,1,7
org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(),3,1,7
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors(),3,1,8
org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(),2,1,2
org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(),1,1,4
org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testReadLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testSizeOf(),1,1,3
org.apache.commons.io.FileUtilsTestCase.testSizeOfAsBigInteger(),1,1,3
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(),1,1,3
org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectoryAsBigInteger(),2,1,4
org.apache.commons.io.FileUtilsTestCase.testToFile1(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFile2(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFile3(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFile4(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFile5(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFiles1(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFiles2(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFiles3(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFiles3a(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToFiles4(),1,1,2
org.apache.commons.io.FileUtilsTestCase.testToURLs1(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testToURLs3a(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testTouch(),1,2,2
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile3(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(),1,1,1
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(),1,1,1
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory(),1,1,2
org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists(),1,1,2
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(),1,1,1
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(),1,1,2
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile(),1,1,1
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile(),1,1,1
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(),1,1,1
org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(),1,1,2
org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(),1,1,1
org.apache.commons.io.FileUtilsWaitForTestCase.testWaitForInterrupted(),1,1,1
org.apache.commons.io.FilenameUtils.FilenameUtils(),1,1,1
"org.apache.commons.io.FilenameUtils.concat(String,String)",6,4,6
"org.apache.commons.io.FilenameUtils.directoryContains(String,String)",4,1,4
"org.apache.commons.io.FilenameUtils.doGetFullPath(String,boolean)",6,4,8
"org.apache.commons.io.FilenameUtils.doGetPath(String,int)",4,3,6
"org.apache.commons.io.FilenameUtils.doNormalize(String,char,boolean)",12,9,31
"org.apache.commons.io.FilenameUtils.equals(String,String)",1,1,1
"org.apache.commons.io.FilenameUtils.equals(String,String,boolean,IOCase)",4,2,8
"org.apache.commons.io.FilenameUtils.equalsNormalized(String,String)",1,1,1
"org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(String,String)",1,1,1
"org.apache.commons.io.FilenameUtils.equalsOnSystem(String,String)",1,1,1
org.apache.commons.io.FilenameUtils.failIfNullBytePresent(String),3,2,3
org.apache.commons.io.FilenameUtils.getBaseName(String),1,1,1
org.apache.commons.io.FilenameUtils.getExtension(String),3,2,3
org.apache.commons.io.FilenameUtils.getFullPath(String),1,1,1
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(String),1,1,1
org.apache.commons.io.FilenameUtils.getName(String),2,1,2
org.apache.commons.io.FilenameUtils.getPath(String),1,1,1
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(String),1,1,1
org.apache.commons.io.FilenameUtils.getPrefix(String),4,2,4
org.apache.commons.io.FilenameUtils.getPrefixLength(String),14,8,27
org.apache.commons.io.FilenameUtils.indexOfExtension(String),2,1,3
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(String),2,1,2
"org.apache.commons.io.FilenameUtils.isExtension(String,Collection<String>)",5,4,6
"org.apache.commons.io.FilenameUtils.isExtension(String,String)",3,3,4
"org.apache.commons.io.FilenameUtils.isExtension(String,String[])",5,3,6
org.apache.commons.io.FilenameUtils.isSeparator(char),1,1,2
org.apache.commons.io.FilenameUtils.isSystemWindows(),1,1,1
org.apache.commons.io.FilenameUtils.normalize(String),1,1,1
"org.apache.commons.io.FilenameUtils.normalize(String,boolean)",1,1,2
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(String),1,1,1
"org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(String,boolean)",1,1,2
org.apache.commons.io.FilenameUtils.removeExtension(String),3,2,3
org.apache.commons.io.FilenameUtils.separatorsToSystem(String),3,2,3
org.apache.commons.io.FilenameUtils.separatorsToUnix(String),2,2,3
org.apache.commons.io.FilenameUtils.separatorsToWindows(String),2,2,3
org.apache.commons.io.FilenameUtils.splitOnTokens(String),2,8,10
"org.apache.commons.io.FilenameUtils.wildcardMatch(String,String)",1,1,1
"org.apache.commons.io.FilenameUtils.wildcardMatch(String,String,IOCase)",12,10,19
"org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(String,String)",1,1,1
org.apache.commons.io.FilenameUtilsTestCase.setUp(),5,1,5
org.apache.commons.io.FilenameUtilsTestCase.testConcat(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testEquals(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128(),1,1,4
org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName_with_nullByte(),1,1,2
org.apache.commons.io.FilenameUtilsTestCase.testGetExtension(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetName(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetPath(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator_with_null_byte(),1,1,2
org.apache.commons.io.FilenameUtilsTestCase.testGetPath_with_nullbyte(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix_with_nullbyte(),1,1,2
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testInjectionFailure(),1,1,2
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testIsExtension_injection(),1,1,2
org.apache.commons.io.FilenameUtilsTestCase.testNormalize(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testNormalize_with_nullbytes(),1,1,3
org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(),1,2,2
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(),1,1,1
org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(),1,1,1
"org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(String,String,boolean)",1,1,1
org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence(),1,3,3
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(),1,1,1
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2(),1,1,1
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(),1,1,1
org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(),1,1,1
org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(),1,1,1
org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246(),1,1,1
org.apache.commons.io.HexDump.HexDump(),1,1,1
"org.apache.commons.io.HexDump.dump(StringBuilder,byte)",1,2,2
"org.apache.commons.io.HexDump.dump(StringBuilder,long)",1,2,2
"org.apache.commons.io.HexDump.dump(byte[],long,OutputStream,int)",3,6,11
org.apache.commons.io.HexDumpTest.testDump(),1,19,23
org.apache.commons.io.HexDumpTest.toAscii(int),1,1,3
org.apache.commons.io.HexDumpTest.toHex(int),1,1,1
"org.apache.commons.io.IOCase.IOCase(String,boolean)",1,1,1
"org.apache.commons.io.IOCase.checkCompareTo(String,String)",2,2,4
"org.apache.commons.io.IOCase.checkEndsWith(String,String)",1,1,1
"org.apache.commons.io.IOCase.checkEquals(String,String)",2,2,4
"org.apache.commons.io.IOCase.checkIndexOf(String,int,String)",4,3,4
"org.apache.commons.io.IOCase.checkRegionMatches(String,int,String)",1,1,1
"org.apache.commons.io.IOCase.checkStartsWith(String,String)",1,1,1
org.apache.commons.io.IOCase.forName(String),3,2,3
org.apache.commons.io.IOCase.getName(),1,1,1
org.apache.commons.io.IOCase.isCaseSensitive(),1,1,1
org.apache.commons.io.IOCase.readResolve(),1,1,1
org.apache.commons.io.IOCase.toString(),1,1,1
org.apache.commons.io.IOCaseTestCase.serialize(IOCase),1,1,1
org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(),1,1,4
org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(),1,1,4
org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(),1,1,4
org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(),1,1,2
org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(),1,1,4
org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(),1,1,7
org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(),1,1,4
org.apache.commons.io.IOCaseTestCase.test_forName(),1,1,3
org.apache.commons.io.IOCaseTestCase.test_getName(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_serialization(),1,1,1
org.apache.commons.io.IOCaseTestCase.test_toString(),1,1,1
"org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(String,Throwable)",1,1,1
org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(Throwable),1,1,1
org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable(),1,1,1
org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable(),1,1,1
"org.apache.commons.io.IOExceptionWithCauseTestCase.validate(Throwable,Throwable,String)",1,1,1
org.apache.commons.io.IOUtils.IOUtils(),1,1,1
org.apache.commons.io.IOUtils.buffer(InputStream),2,1,3
"org.apache.commons.io.IOUtils.buffer(InputStream,int)",2,1,3
org.apache.commons.io.IOUtils.buffer(OutputStream),2,1,3
"org.apache.commons.io.IOUtils.buffer(OutputStream,int)",2,1,3
org.apache.commons.io.IOUtils.buffer(Reader),1,1,2
"org.apache.commons.io.IOUtils.buffer(Reader,int)",1,1,2
org.apache.commons.io.IOUtils.buffer(Writer),1,1,2
"org.apache.commons.io.IOUtils.buffer(Writer,int)",1,1,2
org.apache.commons.io.IOUtils.close(URLConnection),1,2,2
org.apache.commons.io.IOUtils.closeQuietly(Closeable),1,2,3
org.apache.commons.io.IOUtils.closeQuietly(Closeable...),2,2,3
org.apache.commons.io.IOUtils.closeQuietly(InputStream),1,1,1
org.apache.commons.io.IOUtils.closeQuietly(OutputStream),1,1,1
org.apache.commons.io.IOUtils.closeQuietly(Reader),1,1,1
org.apache.commons.io.IOUtils.closeQuietly(Selector),1,2,3
org.apache.commons.io.IOUtils.closeQuietly(ServerSocket),1,2,3
org.apache.commons.io.IOUtils.closeQuietly(Socket),1,2,3
org.apache.commons.io.IOUtils.closeQuietly(Writer),1,1,1
"org.apache.commons.io.IOUtils.contentEquals(InputStream,InputStream)",4,2,6
"org.apache.commons.io.IOUtils.contentEquals(Reader,Reader)",4,2,4
"org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(Reader,Reader)",2,5,7
"org.apache.commons.io.IOUtils.copy(InputStream,OutputStream)",2,1,2
"org.apache.commons.io.IOUtils.copy(InputStream,OutputStream,int)",1,1,1
"org.apache.commons.io.IOUtils.copy(InputStream,Writer)",1,1,1
"org.apache.commons.io.IOUtils.copy(InputStream,Writer,Charset)",1,1,1
"org.apache.commons.io.IOUtils.copy(InputStream,Writer,String)",1,1,1
"org.apache.commons.io.IOUtils.copy(Reader,OutputStream)",1,1,1
"org.apache.commons.io.IOUtils.copy(Reader,OutputStream,Charset)",1,1,1
"org.apache.commons.io.IOUtils.copy(Reader,OutputStream,String)",1,1,1
"org.apache.commons.io.IOUtils.copy(Reader,Writer)",2,1,2
"org.apache.commons.io.IOUtils.copyLarge(InputStream,OutputStream)",1,1,1
"org.apache.commons.io.IOUtils.copyLarge(InputStream,OutputStream,byte[])",1,2,2
"org.apache.commons.io.IOUtils.copyLarge(InputStream,OutputStream,long,long)",1,1,1
"org.apache.commons.io.IOUtils.copyLarge(InputStream,OutputStream,long,long,byte[])",2,5,8
"org.apache.commons.io.IOUtils.copyLarge(Reader,Writer)",1,1,1
"org.apache.commons.io.IOUtils.copyLarge(Reader,Writer,char[])",1,2,2
"org.apache.commons.io.IOUtils.copyLarge(Reader,Writer,long,long)",1,1,1
"org.apache.commons.io.IOUtils.copyLarge(Reader,Writer,long,long,char[])",2,5,8
"org.apache.commons.io.IOUtils.lineIterator(InputStream,Charset)",1,1,1
"org.apache.commons.io.IOUtils.lineIterator(InputStream,String)",1,1,1
org.apache.commons.io.IOUtils.lineIterator(Reader),1,1,1
"org.apache.commons.io.IOUtils.read(InputStream,byte[])",1,1,1
"org.apache.commons.io.IOUtils.read(InputStream,byte[],int,int)",4,2,4
"org.apache.commons.io.IOUtils.read(ReadableByteChannel,ByteBuffer)",3,2,3
"org.apache.commons.io.IOUtils.read(Reader,char[])",1,1,1
"org.apache.commons.io.IOUtils.read(Reader,char[],int,int)",4,2,4
"org.apache.commons.io.IOUtils.readFully(InputStream,byte[])",1,1,1
"org.apache.commons.io.IOUtils.readFully(InputStream,byte[],int,int)",2,1,2
"org.apache.commons.io.IOUtils.readFully(InputStream,int)",1,1,1
"org.apache.commons.io.IOUtils.readFully(ReadableByteChannel,ByteBuffer)",2,1,2
"org.apache.commons.io.IOUtils.readFully(Reader,char[])",1,1,1
"org.apache.commons.io.IOUtils.readFully(Reader,char[],int,int)",2,1,2
org.apache.commons.io.IOUtils.readLines(InputStream),1,1,1
"org.apache.commons.io.IOUtils.readLines(InputStream,Charset)",1,1,1
"org.apache.commons.io.IOUtils.readLines(InputStream,String)",1,1,1
org.apache.commons.io.IOUtils.readLines(Reader),1,2,2
org.apache.commons.io.IOUtils.resourceToByteArray(String),1,1,1
"org.apache.commons.io.IOUtils.resourceToByteArray(String,ClassLoader)",1,1,1
"org.apache.commons.io.IOUtils.resourceToString(String,Charset)",1,1,1
"org.apache.commons.io.IOUtils.resourceToString(String,Charset,ClassLoader)",1,1,1
org.apache.commons.io.IOUtils.resourceToURL(String),1,1,1
"org.apache.commons.io.IOUtils.resourceToURL(String,ClassLoader)",2,2,3
"org.apache.commons.io.IOUtils.skip(InputStream,long)",4,2,5
"org.apache.commons.io.IOUtils.skip(ReadableByteChannel,long)",4,2,4
"org.apache.commons.io.IOUtils.skip(Reader,long)",4,2,5
"org.apache.commons.io.IOUtils.skipFully(InputStream,long)",3,1,3
"org.apache.commons.io.IOUtils.skipFully(ReadableByteChannel,long)",3,1,3
"org.apache.commons.io.IOUtils.skipFully(Reader,long)",2,1,2
org.apache.commons.io.IOUtils.toBufferedInputStream(InputStream),1,1,1
"org.apache.commons.io.IOUtils.toBufferedInputStream(InputStream,int)",1,1,1
org.apache.commons.io.IOUtils.toBufferedReader(Reader),1,1,2
"org.apache.commons.io.IOUtils.toBufferedReader(Reader,int)",1,1,2
org.apache.commons.io.IOUtils.toByteArray(InputStream),1,1,1
"org.apache.commons.io.IOUtils.toByteArray(InputStream,int)",4,2,6
"org.apache.commons.io.IOUtils.toByteArray(InputStream,long)",2,1,2
org.apache.commons.io.IOUtils.toByteArray(Reader),1,1,1
"org.apache.commons.io.IOUtils.toByteArray(Reader,Charset)",1,1,1
"org.apache.commons.io.IOUtils.toByteArray(Reader,String)",1,1,1
org.apache.commons.io.IOUtils.toByteArray(String),1,1,1
org.apache.commons.io.IOUtils.toByteArray(URI),1,1,1
org.apache.commons.io.IOUtils.toByteArray(URL),1,1,1
org.apache.commons.io.IOUtils.toByteArray(URLConnection),1,1,1
org.apache.commons.io.IOUtils.toCharArray(InputStream),1,1,1
"org.apache.commons.io.IOUtils.toCharArray(InputStream,Charset)",1,1,1
"org.apache.commons.io.IOUtils.toCharArray(InputStream,String)",1,1,1
org.apache.commons.io.IOUtils.toCharArray(Reader),1,1,1
org.apache.commons.io.IOUtils.toInputStream(CharSequence),1,1,1
"org.apache.commons.io.IOUtils.toInputStream(CharSequence,Charset)",1,1,1
"org.apache.commons.io.IOUtils.toInputStream(CharSequence,String)",1,1,1
org.apache.commons.io.IOUtils.toInputStream(String),1,1,1
"org.apache.commons.io.IOUtils.toInputStream(String,Charset)",1,1,1
"org.apache.commons.io.IOUtils.toInputStream(String,String)",1,1,1
org.apache.commons.io.IOUtils.toString(InputStream),1,1,1
"org.apache.commons.io.IOUtils.toString(InputStream,Charset)",1,1,1
"org.apache.commons.io.IOUtils.toString(InputStream,String)",1,1,1
org.apache.commons.io.IOUtils.toString(Reader),1,1,1
org.apache.commons.io.IOUtils.toString(URI),1,1,1
"org.apache.commons.io.IOUtils.toString(URI,Charset)",1,1,1
"org.apache.commons.io.IOUtils.toString(URI,String)",1,1,1
org.apache.commons.io.IOUtils.toString(URL),1,1,1
"org.apache.commons.io.IOUtils.toString(URL,Charset)",1,1,1
"org.apache.commons.io.IOUtils.toString(URL,String)",1,1,1
org.apache.commons.io.IOUtils.toString(byte[]),1,1,1
"org.apache.commons.io.IOUtils.toString(byte[],String)",1,1,1
"org.apache.commons.io.IOUtils.write(CharSequence,OutputStream)",1,1,1
"org.apache.commons.io.IOUtils.write(CharSequence,OutputStream,Charset)",1,2,2
"org.apache.commons.io.IOUtils.write(CharSequence,OutputStream,String)",1,1,1
"org.apache.commons.io.IOUtils.write(CharSequence,Writer)",1,2,2
"org.apache.commons.io.IOUtils.write(String,OutputStream)",1,1,1
"org.apache.commons.io.IOUtils.write(String,OutputStream,Charset)",1,2,2
"org.apache.commons.io.IOUtils.write(String,OutputStream,String)",1,1,1
"org.apache.commons.io.IOUtils.write(String,Writer)",1,2,2
"org.apache.commons.io.IOUtils.write(StringBuffer,OutputStream)",1,1,1
"org.apache.commons.io.IOUtils.write(StringBuffer,OutputStream,String)",1,2,2
"org.apache.commons.io.IOUtils.write(StringBuffer,Writer)",1,2,2
"org.apache.commons.io.IOUtils.write(byte[],OutputStream)",1,2,2
"org.apache.commons.io.IOUtils.write(byte[],Writer)",1,1,1
"org.apache.commons.io.IOUtils.write(byte[],Writer,Charset)",1,2,2
"org.apache.commons.io.IOUtils.write(byte[],Writer,String)",1,1,1
"org.apache.commons.io.IOUtils.write(char[],OutputStream)",1,1,1
"org.apache.commons.io.IOUtils.write(char[],OutputStream,Charset)",1,2,2
"org.apache.commons.io.IOUtils.write(char[],OutputStream,String)",1,1,1
"org.apache.commons.io.IOUtils.write(char[],Writer)",1,2,2
"org.apache.commons.io.IOUtils.writeChunked(byte[],OutputStream)",1,3,3
"org.apache.commons.io.IOUtils.writeChunked(char[],Writer)",1,3,3
"org.apache.commons.io.IOUtils.writeLines(Collection<?>,String,OutputStream)",1,1,1
"org.apache.commons.io.IOUtils.writeLines(Collection<?>,String,OutputStream,Charset)",2,3,5
"org.apache.commons.io.IOUtils.writeLines(Collection<?>,String,OutputStream,String)",1,1,1
"org.apache.commons.io.IOUtils.writeLines(Collection<?>,String,Writer)",2,3,5
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStreamWithBufferSize(int),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn(),1,1,1
org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut(),1,1,1
"org.apache.commons.io.IOUtilsTestCase.assertEqualContent(byte[],byte[])",1,1,1
org.apache.commons.io.IOUtilsTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.IOUtilsTestCase.setUp(),2,2,5
org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testAsBufferedInputStreamWithBufferSize(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testAsBufferedNull(),1,1,5
org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testAsBufferedOutputStreamWithBufferSize(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testAsBufferedReader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testAsBufferedReaderWithBufferSize(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriter(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testAsBufferedWriterWithBufferSize(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_AllCloseableIOException(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_CloseableIOException(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_Selector(),1,1,2
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorIOException(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorNull(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SelectorTwice(),1,1,2
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocket(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_ServerSocketIOException(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_Socket(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCloseQuietly_SocketIOException(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testConstants(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testContentEquals_InputStream_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testContentEquals_Reader_Reader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharExtraLength(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharFullLength(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharNoSkip(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkip(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_CharSkipInvalid(),1,1,2
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_ExtraLength(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_FullLength(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_NoSkip(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_Skip(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipInvalid(),1,1,2
org.apache.commons.io.IOUtilsTestCase.testCopyLarge_SkipWithInvalidOffset(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_OutputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopy_ByteArray_Writer(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testCopy_String_Writer(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_ByteArray(),1,1,3
org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream_Offset(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testReadFully_InputStream__ReturnByteArray(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testReadFully_ReadableByteChannel(),1,1,2
org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader(),1,1,3
org.apache.commons.io.IOUtilsTestCase.testReadFully_Reader_Offset(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testRead_ReadableByteChannel(),1,1,2
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_ExistingResourceAtRootPackage(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_ExistingResourceAtSubPackage(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_NonExistingResource(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_NonExistingResource_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_Null(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testResourceToByteArray_Null_WithClassLoader(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testResourceToString_ExistingResourceAtRootPackage(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_ExistingResourceAtRootPackage_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_ExistingResourceAtSubPackage(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_ExistingResourceAtSubPackage_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_NonExistingResource(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_NonExistingResource_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_NullCharset(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_NullCharset_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToString_NullResource(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testResourceToString_NullResource_WithClassLoader(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_ExistingResourceAtRootPackage(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_ExistingResourceAtSubPackage(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_NonExistingResource(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_NonExistingResource_WithClassLoader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_Null(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testResourceToURL_Null_WithClassLoader(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testSkipFully_InputStream(),1,1,3
org.apache.commons.io.IOUtilsTestCase.testSkipFully_ReadableByteChannel(),1,1,3
org.apache.commons.io.IOUtilsTestCase.testSkipFully_Reader(),1,1,3
org.apache.commons.io.IOUtilsTestCase.testSkip_FileReader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testSkip_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testSkip_ReadableByteChannel(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStreamWithBufferSize_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToBufferedInputStream_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_NegativeSize(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_Size(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeIllegal(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeLong(),1,2,2
org.apache.commons.io.IOUtilsTestCase.testToByteArray_InputStream_SizeZero(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_Reader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_String(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_URI(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_URL(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToByteArray_URLConnection(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToCharArray_InputStream_CharsetName(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToCharArray_Reader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToInputStream_CharSequence(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToInputStream_String(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_ByteArray(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_InputStream(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_Reader(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URI(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URI(String),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetName(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URI_CharsetNameNull(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URL(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URL(String),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetName(),1,1,1
org.apache.commons.io.IOUtilsTestCase.testToString_URL_CharsetNameNull(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream(),1,1,2
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(),1,1,1
org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(),1,1,2
org.apache.commons.io.LineIterator.LineIterator(Reader),2,1,3
org.apache.commons.io.LineIterator.close(),1,2,2
org.apache.commons.io.LineIterator.closeQuietly(LineIterator),1,2,3
org.apache.commons.io.LineIterator.hasNext(),6,7,8
org.apache.commons.io.LineIterator.isValidLine(String),1,1,1
org.apache.commons.io.LineIterator.next(),1,1,1
org.apache.commons.io.LineIterator.nextLine(),2,1,2
org.apache.commons.io.LineIterator.remove(),1,1,1
"org.apache.commons.io.LineIteratorTestCase.assertLines(List<String>,LineIterator)",1,2,2
"org.apache.commons.io.LineIteratorTestCase.createLinesFile(File,String,int)",1,1,1
"org.apache.commons.io.LineIteratorTestCase.createLinesFile(File,int)",1,1,1
org.apache.commons.io.LineIteratorTestCase.createStringLines(int),1,2,2
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(int),1,2,5
org.apache.commons.io.LineIteratorTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.LineIteratorTestCase.setUp(),1,2,2
org.apache.commons.io.LineIteratorTestCase.testCloseEarly(),1,1,5
org.apache.commons.io.LineIteratorTestCase.testConstructor(),1,1,2
"org.apache.commons.io.LineIteratorTestCase.testFiltering(List<String>,Reader)",1,2,6
org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(),1,1,2
org.apache.commons.io.LineIteratorTestCase.testMissingFile(),1,1,2
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testNextOnly(),1,2,2
org.apache.commons.io.LineIteratorTestCase.testNextWithException(),1,1,2
org.apache.commons.io.LineIteratorTestCase.testOneLines(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testThreeLines(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testTwoLines(),1,1,1
org.apache.commons.io.LineIteratorTestCase.testValidEncoding(),1,2,2
org.apache.commons.io.LineIteratorTestCase.testZeroLines(),1,1,1
org.apache.commons.io.SelectorAdapter.close(),1,1,1
org.apache.commons.io.SelectorAdapter.isOpen(),1,1,1
org.apache.commons.io.SelectorAdapter.keys(),1,1,1
org.apache.commons.io.SelectorAdapter.provider(),1,1,1
org.apache.commons.io.SelectorAdapter.select(),1,1,1
org.apache.commons.io.SelectorAdapter.select(long),1,1,1
org.apache.commons.io.SelectorAdapter.selectNow(),1,1,1
org.apache.commons.io.SelectorAdapter.selectedKeys(),1,1,1
org.apache.commons.io.SelectorAdapter.wakeup(),1,1,1
"org.apache.commons.io.TaggedIOException.TaggedIOException(IOException,Serializable)",1,1,1
org.apache.commons.io.TaggedIOException.getCause(),1,1,1
org.apache.commons.io.TaggedIOException.getTag(),1,1,1
"org.apache.commons.io.TaggedIOException.isTaggedWith(Throwable,Object)",1,3,3
"org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(Throwable,Object)",2,2,2
org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(),1,1,1
"org.apache.commons.io.ThreadMonitor.ThreadMonitor(Thread,long)",1,1,1
org.apache.commons.io.ThreadMonitor.run(),1,1,2
org.apache.commons.io.ThreadMonitor.sleep(long),1,2,2
"org.apache.commons.io.ThreadMonitor.start(Thread,long)",1,2,2
org.apache.commons.io.ThreadMonitor.start(long),1,1,1
org.apache.commons.io.ThreadMonitor.stop(Thread),1,2,2
org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout(),1,2,2
org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(),1,3,3
org.apache.commons.io.ThreadMonitorTestCase.testTimeout(),1,1,2
org.apache.commons.io.comparator.AbstractFileComparator.sort(File...),1,2,2
org.apache.commons.io.comparator.AbstractFileComparator.sort(List<File>),1,2,2
org.apache.commons.io.comparator.AbstractFileComparator.toString(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull(),1,1,1
org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(),1,1,1
org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(Comparator<File>...),1,2,2
org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(Iterable<Comparator<File>>),1,3,3
"org.apache.commons.io.comparator.CompositeFileComparator.compare(File,File)",3,2,3
org.apache.commons.io.comparator.CompositeFileComparator.toString(),1,3,3
org.apache.commons.io.comparator.CompositeFileComparatorTest.constructorArray_Null(),1,1,1
org.apache.commons.io.comparator.CompositeFileComparatorTest.constructorIterable_Null(),1,1,1
org.apache.commons.io.comparator.CompositeFileComparatorTest.constructorIterable_order(),1,1,1
org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(),5,1,5
"org.apache.commons.io.comparator.DefaultFileComparator.compare(File,File)",1,1,1
org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(),1,1,1
"org.apache.commons.io.comparator.DirectoryFileComparator.compare(File,File)",1,1,1
org.apache.commons.io.comparator.DirectoryFileComparator.getType(File),2,1,2
org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(),1,1,1
org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortArray(),1,1,1
org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortList(),1,1,1
org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(),1,1,1
org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(IOCase),1,1,2
"org.apache.commons.io.comparator.ExtensionFileComparator.compare(File,File)",1,1,1
org.apache.commons.io.comparator.ExtensionFileComparator.toString(),1,1,1
org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(),1,1,1
org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(),1,1,1
"org.apache.commons.io.comparator.LastModifiedFileComparator.compare(File,File)",3,1,3
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(),4,3,6
org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(),1,1,1
org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(IOCase),1,1,2
"org.apache.commons.io.comparator.NameFileComparator.compare(File,File)",1,1,1
org.apache.commons.io.comparator.NameFileComparator.toString(),1,1,1
org.apache.commons.io.comparator.NameFileComparatorTest.setUp(),1,1,1
org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(),1,1,1
org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(),1,1,1
org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(IOCase),1,1,2
"org.apache.commons.io.comparator.PathFileComparator.compare(File,File)",1,1,1
org.apache.commons.io.comparator.PathFileComparator.toString(),1,1,1
org.apache.commons.io.comparator.PathFileComparatorTest.setUp(),1,1,1
org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(),1,1,1
org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(Comparator<File>),2,1,2
"org.apache.commons.io.comparator.ReverseComparator.compare(File,File)",1,1,1
org.apache.commons.io.comparator.ReverseComparator.toString(),1,1,1
org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(),1,1,1
org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(boolean),1,1,1
"org.apache.commons.io.comparator.SizeFileComparator.compare(File,File)",3,7,9
org.apache.commons.io.comparator.SizeFileComparator.toString(),1,1,1
org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(),4,1,4
org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(),1,1,1
org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(),1,1,1
org.apache.commons.io.filefilter.AbstractFileFilter.accept(File),1,1,1
"org.apache.commons.io.filefilter.AbstractFileFilter.accept(File,String)",1,1,1
org.apache.commons.io.filefilter.AbstractFileFilter.toString(),1,1,1
org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(Date),1,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(Date,boolean)",1,1,1
org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(File),1,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(File,boolean)",1,1,1
org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(long),1,1,1
"org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(long,boolean)",1,1,1
org.apache.commons.io.filefilter.AgeFileFilter.accept(File),1,1,2
org.apache.commons.io.filefilter.AgeFileFilter.toString(),1,1,2
org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(),1,1,1
"org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(IOFileFilter,IOFileFilter)",2,1,3
org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(List<IOFileFilter>),1,1,2
org.apache.commons.io.filefilter.AndFileFilter.accept(File),4,2,4
"org.apache.commons.io.filefilter.AndFileFilter.accept(File,String)",4,2,4
org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(IOFileFilter),1,1,1
org.apache.commons.io.filefilter.AndFileFilter.getFileFilters(),1,1,1
org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(IOFileFilter),1,1,1
org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(List<IOFileFilter>),1,1,1
org.apache.commons.io.filefilter.AndFileFilter.toString(),1,5,5
org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(List<IOFileFilter>),1,2,2
org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(List<IOFileFilter>),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getDefaultWorkingPath(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey(),1,1,1
org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(),1,1,1
org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter(),1,1,1
org.apache.commons.io.filefilter.CanReadFileFilter.accept(File),1,1,1
org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter(),1,1,1
org.apache.commons.io.filefilter.CanWriteFileFilter.accept(File),1,1,1
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(),1,1,1
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(),1,3,3
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(),1,2,2
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(),1,2,2
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters(),1,1,1
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(),1,2,2
org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(FileFilter),2,1,2
org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(FilenameFilter),2,1,2
org.apache.commons.io.filefilter.DelegateFileFilter.accept(File),2,2,2
"org.apache.commons.io.filefilter.DelegateFileFilter.accept(File,String)",2,2,2
org.apache.commons.io.filefilter.DelegateFileFilter.toString(),1,2,2
org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter(),1,1,1
org.apache.commons.io.filefilter.DirectoryFileFilter.accept(File),1,1,1
org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter(),1,1,1
org.apache.commons.io.filefilter.EmptyFileFilter.accept(File),2,2,3
org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter(),1,1,1
org.apache.commons.io.filefilter.FalseFileFilter.accept(File),1,1,1
"org.apache.commons.io.filefilter.FalseFileFilter.accept(File,String)",1,1,1
org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter(),1,1,1
org.apache.commons.io.filefilter.FileFileFilter.accept(File),1,1,1
"org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(IOFileFilter,File,boolean)",1,4,4
org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(),6,3,8
org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(),1,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(),2,1,2
org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(),2,1,2
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(),1,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(),1,1,4
org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(),3,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFiles(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(),1,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(),1,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(),1,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testHidden(),1,2,2
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(),2,1,2
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(),2,1,2
org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(),1,1,7
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(),4,1,4
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(),3,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(),3,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(),4,1,4
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(),1,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testNot(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters(),1,1,3
org.apache.commons.io.filefilter.FileFilterTestCase.testOr(),1,1,2
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(),1,1,4
org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(),1,1,5
org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(),3,1,4
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(),1,1,4
org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(),1,1,5
org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(),1,1,1
org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(),1,1,4
org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils(),1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(Date),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(Date,boolean)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(File),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(File,boolean)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(long,boolean)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.and(IOFileFilter...),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(IOFileFilter,IOFileFilter)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(FileFilter),1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(FilenameFilter),1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter(),1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter(),1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter(),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter,File...)",5,3,6
"org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter,Iterable<File>)",1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.filter(IOFileFilter,Iterable<File>,T)",5,4,6
"org.apache.commons.io.filefilter.FileFilterUtils.filterList(IOFileFilter,File...)",1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.filterList(IOFileFilter,Iterable<File>)",1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.filterSet(IOFileFilter,File...)",1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.filterSet(IOFileFilter,Iterable<File>)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(String,long)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[]),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(byte[],long)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(IOFileFilter),2,2,2
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(IOFileFilter),2,1,2
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(IOFileFilter),2,1,2
org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(IOFileFilter),2,2,2
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(String,IOCase)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(IOFileFilter),1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.or(IOFileFilter...),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(IOFileFilter,IOFileFilter)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(String,IOCase)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(long,boolean)",1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(long,long)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(String,IOCase)",1,1,1
org.apache.commons.io.filefilter.FileFilterUtils.toList(IOFileFilter...),4,2,4
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(),1,1,1
org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter(),1,1,1
org.apache.commons.io.filefilter.HiddenFileFilter.accept(File),1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(File),1,1,1
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(File,String)",1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.isInvoked(),1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.reset(),1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.setInvoked(boolean),1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(File),1,1,1
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(File,String)",1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.isInvoked(),1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.reset(),1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.setInvoked(boolean),1,1,1
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(int,TesterFalseFileFilter[],boolean[])",1,2,2
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(int,IOFileFilter,File,boolean)",1,1,1
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(int,IOFileFilter,File,boolean)",1,1,1
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(int,IOFileFilter,File,boolean)",1,4,4
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(int,TesterTrueFileFilter[],boolean[])",1,2,2
"org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(String,String)",1,1,1
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(TesterFalseFileFilter[]),1,3,3
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(TesterTrueFileFilter[]),1,3,3
org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(String,long)",4,1,4
org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(byte[]),1,1,1
"org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(byte[],long)",4,1,4
org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(File),3,4,6
org.apache.commons.io.filefilter.MagicNumberFileFilter.toString(),1,1,1
org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(List<String>),1,1,1
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(List<String>,IOCase)",2,1,3
org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String,IOCase)",2,1,3
org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String[]),1,1,1
"org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(String[],IOCase)",2,1,3
org.apache.commons.io.filefilter.NameFileFilter.accept(File),3,2,3
"org.apache.commons.io.filefilter.NameFileFilter.accept(File,String)",3,2,3
org.apache.commons.io.filefilter.NameFileFilter.toString(),1,4,4
org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(IOFileFilter),2,1,2
org.apache.commons.io.filefilter.NotFileFilter.accept(File),1,1,1
"org.apache.commons.io.filefilter.NotFileFilter.accept(File,String)",1,1,1
org.apache.commons.io.filefilter.NotFileFilter.toString(),1,1,1
org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(),1,1,1
"org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(IOFileFilter,IOFileFilter)",2,1,3
org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(List<IOFileFilter>),1,1,2
org.apache.commons.io.filefilter.OrFileFilter.accept(File),3,2,3
"org.apache.commons.io.filefilter.OrFileFilter.accept(File,String)",3,2,3
org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(IOFileFilter),1,1,1
org.apache.commons.io.filefilter.OrFileFilter.getFileFilters(),1,1,1
org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(IOFileFilter),1,1,1
org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(List<IOFileFilter>),1,1,1
org.apache.commons.io.filefilter.OrFileFilter.toString(),1,5,5
org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(List<IOFileFilter>),1,2,2
org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(List<IOFileFilter>),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getDefaultWorkingPath(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey(),1,1,1
org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(),1,1,1
org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(List<String>),1,1,1
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(List<String>,IOCase)",2,1,3
org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String,IOCase)",2,1,3
org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String[]),1,1,1
"org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(String[],IOCase)",2,1,3
org.apache.commons.io.filefilter.PrefixFileFilter.accept(File),3,2,3
"org.apache.commons.io.filefilter.PrefixFileFilter.accept(File,String)",3,2,3
org.apache.commons.io.filefilter.PrefixFileFilter.toString(),1,4,4
org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(Pattern),2,1,2
org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(String),2,1,2
"org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(String,IOCase)",2,2,4
"org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(String,int)",2,1,2
"org.apache.commons.io.filefilter.RegexFileFilter.accept(File,String)",1,1,1
"org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(IOFileFilter,File,boolean)",1,4,4
org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(),1,1,5
org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(long),1,1,1
"org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(long,boolean)",2,1,2
org.apache.commons.io.filefilter.SizeFileFilter.accept(File),1,1,2
org.apache.commons.io.filefilter.SizeFileFilter.toString(),1,1,2
org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(List<String>),1,1,1
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(List<String>,IOCase)",2,1,3
org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String,IOCase)",2,1,3
org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String[]),1,1,1
"org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(String[],IOCase)",2,1,3
org.apache.commons.io.filefilter.SuffixFileFilter.accept(File),3,2,3
"org.apache.commons.io.filefilter.SuffixFileFilter.accept(File,String)",3,2,3
org.apache.commons.io.filefilter.SuffixFileFilter.toString(),1,4,4
org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter(),1,1,1
org.apache.commons.io.filefilter.TrueFileFilter.accept(File),1,1,1
"org.apache.commons.io.filefilter.TrueFileFilter.accept(File,String)",1,1,1
org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(List<String>),1,1,1
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(List<String>,IOCase)",2,1,3
org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String),1,1,1
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String,IOCase)",2,1,3
org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String[]),1,1,1
"org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(String[],IOCase)",2,1,3
org.apache.commons.io.filefilter.WildcardFileFilter.accept(File),3,2,3
"org.apache.commons.io.filefilter.WildcardFileFilter.accept(File,String)",3,2,3
org.apache.commons.io.filefilter.WildcardFileFilter.toString(),1,4,4
org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(List<String>),2,1,2
org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(String),2,1,2
org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(String[]),2,1,2
org.apache.commons.io.filefilter.WildcardFilter.accept(File),4,2,4
"org.apache.commons.io.filefilter.WildcardFilter.accept(File,String)",4,3,5
org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(InputStream),1,1,1
org.apache.commons.io.input.AutoCloseInputStream.afterRead(int),1,2,2
org.apache.commons.io.input.AutoCloseInputStream.close(),1,1,1
org.apache.commons.io.input.AutoCloseInputStream.finalize(),1,1,1
org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(),1,1,1
org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(),1,1,1
org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(),1,2,2
org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(),1,3,3
org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(),1,3,3
org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream),1,1,1
"org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream,ByteOrderMark...)",1,1,1
"org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream,boolean)",1,1,1
"org.apache.commons.io.input.BOMInputStream.BOMInputStream(InputStream,boolean,ByteOrderMark...)",2,1,3
org.apache.commons.io.input.BOMInputStream.find(),3,2,3
org.apache.commons.io.input.BOMInputStream.getBOM(),4,6,7
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(),1,2,2
org.apache.commons.io.input.BOMInputStream.hasBOM(),1,1,1
org.apache.commons.io.input.BOMInputStream.hasBOM(ByteOrderMark),2,2,3
org.apache.commons.io.input.BOMInputStream.mark(int),1,1,1
org.apache.commons.io.input.BOMInputStream.matches(ByteOrderMark),3,2,3
org.apache.commons.io.input.BOMInputStream.read(),1,2,2
org.apache.commons.io.input.BOMInputStream.read(byte[]),1,1,1
"org.apache.commons.io.input.BOMInputStream.read(byte[],int,int)",1,2,6
org.apache.commons.io.input.BOMInputStream.readFirstBytes(),1,1,2
org.apache.commons.io.input.BOMInputStream.reset(),1,1,2
org.apache.commons.io.input.BOMInputStream.skip(long),1,2,3
org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.assertCloseCalled(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.close(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.read(),1,1,1
"org.apache.commons.io.input.BOMInputStreamTest.assertData(byte[],byte[],int)",1,2,2
"org.apache.commons.io.input.BOMInputStreamTest.createUtf16BeDataStream(byte[],boolean)",1,2,2
"org.apache.commons.io.input.BOMInputStreamTest.createUtf16LeDataStream(byte[],boolean)",1,2,2
"org.apache.commons.io.input.BOMInputStreamTest.createUtf32BeDataStream(byte[],boolean)",1,2,2
"org.apache.commons.io.input.BOMInputStreamTest.createUtf32LeDataStream(byte[],boolean)",1,2,2
"org.apache.commons.io.input.BOMInputStreamTest.createUtf8DataStream(byte[],boolean)",1,2,2
org.apache.commons.io.input.BOMInputStreamTest.doesSaxSupportCharacterSet(String),2,2,3
org.apache.commons.io.input.BOMInputStreamTest.jvmAndSaxBothSupportCharset(String),1,2,2
org.apache.commons.io.input.BOMInputStreamTest.parseXml(InputStream),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.parseXml(Reader),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(String),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.readFile(BOMInputStream),1,2,2
org.apache.commons.io.input.BOMInputStreamTest.skipReturnValueWithBom(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.skipReturnValueWithoutBom(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testClose(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testNoBoms(),1,1,3
org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Be(),1,1,2
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf16Le(),1,1,2
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Be(),1,1,2
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf32Le(),1,1,2
org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMUtf8(),1,1,2
org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs2(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUcs4(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Be(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf16Le(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Be(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf32Le(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithBOMUtf8(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Be(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testReadXmlWithoutBOMUtf32Le(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(),1,1,1
org.apache.commons.io.input.BOMInputStreamTest.testSupportCode(),1,1,1
org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(InputStream),1,1,1
"org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(InputStream,long)",1,1,1
org.apache.commons.io.input.BoundedInputStream.available(),2,1,3
org.apache.commons.io.input.BoundedInputStream.close(),1,2,2
org.apache.commons.io.input.BoundedInputStream.isPropagateClose(),1,1,1
org.apache.commons.io.input.BoundedInputStream.mark(int),1,1,1
org.apache.commons.io.input.BoundedInputStream.markSupported(),1,1,1
org.apache.commons.io.input.BoundedInputStream.read(),2,1,3
org.apache.commons.io.input.BoundedInputStream.read(byte[]),1,1,1
"org.apache.commons.io.input.BoundedInputStream.read(byte[],int,int)",3,2,5
org.apache.commons.io.input.BoundedInputStream.reset(),1,1,1
org.apache.commons.io.input.BoundedInputStream.setPropagateClose(boolean),1,1,1
org.apache.commons.io.input.BoundedInputStream.skip(long),1,2,2
org.apache.commons.io.input.BoundedInputStream.toString(),1,1,1
"org.apache.commons.io.input.BoundedInputStreamTest.compare(String,byte[],byte[])",1,2,2
org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(),1,1,1
org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(),1,4,4
"org.apache.commons.io.input.BoundedReader.BoundedReader(Reader,int)",1,1,1
org.apache.commons.io.input.BoundedReader.close(),1,1,1
org.apache.commons.io.input.BoundedReader.mark(int),1,1,1
org.apache.commons.io.input.BoundedReader.read(),3,1,4
"org.apache.commons.io.input.BoundedReader.read(char[],int,int)",3,2,4
org.apache.commons.io.input.BoundedReader.reset(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.closeTest(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.markReset(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.markResetFromOffset1(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.markResetMarkMore(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMax(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.readMulti(),1,1,2
org.apache.commons.io.input.BoundedReaderTest.readMultiWithOffset(),1,1,2
org.apache.commons.io.input.BoundedReaderTest.readTillEnd(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.shortReader(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.skipTest(),1,1,1
org.apache.commons.io.input.BoundedReaderTest.testReadBytesEOF(),1,1,1
org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(),1,1,1
org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(IOException),1,1,1
org.apache.commons.io.input.BrokenInputStream.available(),1,1,1
org.apache.commons.io.input.BrokenInputStream.close(),1,1,1
org.apache.commons.io.input.BrokenInputStream.read(),1,1,1
org.apache.commons.io.input.BrokenInputStream.reset(),1,1,1
org.apache.commons.io.input.BrokenInputStream.skip(long),1,1,1
org.apache.commons.io.input.BrokenInputStreamTest.setUp(),1,1,1
org.apache.commons.io.input.BrokenInputStreamTest.testAvailable(),1,2,2
org.apache.commons.io.input.BrokenInputStreamTest.testClose(),1,2,2
org.apache.commons.io.input.BrokenInputStreamTest.testRead(),1,4,4
org.apache.commons.io.input.BrokenInputStreamTest.testReset(),1,2,2
org.apache.commons.io.input.BrokenInputStreamTest.testSkip(),1,2,2
"org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(CharSequence,Charset)",1,1,1
"org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(CharSequence,Charset,int)",2,1,2
"org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(CharSequence,String)",1,1,1
"org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(CharSequence,String,int)",1,1,1
org.apache.commons.io.input.CharSequenceInputStream.available(),1,1,1
org.apache.commons.io.input.CharSequenceInputStream.close(),1,1,1
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(),1,2,2
org.apache.commons.io.input.CharSequenceInputStream.mark(int),1,1,1
org.apache.commons.io.input.CharSequenceInputStream.markSupported(),1,1,1
org.apache.commons.io.input.CharSequenceInputStream.read(),4,4,5
org.apache.commons.io.input.CharSequenceInputStream.read(byte[]),1,1,1
"org.apache.commons.io.input.CharSequenceInputStream.read(byte[],int,int)",8,6,13
org.apache.commons.io.input.CharSequenceInputStream.reset(),3,5,5
org.apache.commons.io.input.CharSequenceInputStream.skip(long),1,3,3
"org.apache.commons.io.input.CharSequenceInputStreamTest.checkAvail(InputStream,int)",1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.getRequiredCharsetNames(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.isAvailabilityTestableForCharset(String),1,4,4
org.apache.commons.io.input.CharSequenceInputStreamTest.isOddBallLegacyCharsetThatDoesNotSupportFrenchCharacters(String),1,4,4
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailable(),1,4,4
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableRead(String),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testAvailableSkip(String),1,1,1
"org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead(String,String)",3,4,4
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_AvailableCharset(),1,3,3
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_RequiredCharset(),1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testBufferedRead_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop(String),1,1,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop_RequiredCharsets(),1,2,2
"org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356(int,int,int,String)",1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF16(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S0_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S1_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D10_S2_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S0_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D13_S1_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_B10_D20_S0_UTF8(),1,1,1
"org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop(String,int)",1,3,3
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF16(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testIO_356_Loop_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_RequiredCharsets(),1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeBufferedRead_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_RequiredCharsets(),1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeSingleByteRead_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(String),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_RequiredCharsets(),1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_USASCII(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero(String),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_EmptyString(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero_RequiredCharsets(),1,2,2
"org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead(String,String)",1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_RequiredCharsets(),1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF16(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testSingleByteRead_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(String),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_RequiredCharsets(),1,2,2
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_USASCII(),1,1,1
org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip_UTF8(),1,1,1
org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(CharSequence),1,1,2
org.apache.commons.io.input.CharSequenceReader.close(),1,1,1
org.apache.commons.io.input.CharSequenceReader.mark(int),1,1,1
org.apache.commons.io.input.CharSequenceReader.markSupported(),1,1,1
org.apache.commons.io.input.CharSequenceReader.read(),2,2,2
"org.apache.commons.io.input.CharSequenceReader.read(char[],int,int)",6,2,8
org.apache.commons.io.input.CharSequenceReader.reset(),1,1,1
org.apache.commons.io.input.CharSequenceReader.skip(long),3,1,3
org.apache.commons.io.input.CharSequenceReader.toString(),1,1,1
"org.apache.commons.io.input.CharSequenceReaderTest.checkArray(char[],char[])",1,2,2
"org.apache.commons.io.input.CharSequenceReaderTest.checkRead(Reader,String)",1,2,2
org.apache.commons.io.input.CharSequenceReaderTest.testClose(),1,1,1
org.apache.commons.io.input.CharSequenceReaderTest.testMark(),1,1,1
org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported(),1,1,1
org.apache.commons.io.input.CharSequenceReaderTest.testRead(),1,1,1
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(),1,1,1
org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(),1,1,1
org.apache.commons.io.input.CharSequenceReaderTest.testSkip(),1,1,1
"org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(ClassLoader,InputStream)",1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(ObjectStreamClass),1,2,2
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(String[]),1,3,3
"org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.Test.Test(int,Object)",1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.Test.equalObject(Object),2,1,2
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.Test.equals(Object),2,2,2
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.Test.hashCode(),1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected(),1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testLong(),1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject1(),1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testObject2(),1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testPrimitiveLong(),1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass(),1,1,1
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClassWithMultipleInterfaces(),1,1,1
org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(InputStream),1,1,1
org.apache.commons.io.input.CloseShieldInputStream.close(),1,1,1
org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(),1,1,1
org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(),1,1,1
org.apache.commons.io.input.ClosedInputStream.read(),1,1,1
org.apache.commons.io.input.ClosedInputStreamTest.testRead(),1,1,1
org.apache.commons.io.input.CountingInputStream.CountingInputStream(InputStream),1,1,1
org.apache.commons.io.input.CountingInputStream.afterRead(int),1,1,2
org.apache.commons.io.input.CountingInputStream.getByteCount(),1,1,1
org.apache.commons.io.input.CountingInputStream.getCount(),2,1,2
org.apache.commons.io.input.CountingInputStream.resetByteCount(),1,1,1
org.apache.commons.io.input.CountingInputStream.resetCount(),2,1,2
org.apache.commons.io.input.CountingInputStream.skip(long),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testCounting(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testEOF1(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testEOF2(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testEOF3(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(),1,1,3
org.apache.commons.io.input.CountingInputStreamTest.testResetting(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testSkipping(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2(),1,1,1
org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(),1,1,1
org.apache.commons.io.input.DemuxInputStream.bindStream(InputStream),1,1,1
org.apache.commons.io.input.DemuxInputStream.close(),1,2,2
org.apache.commons.io.input.DemuxInputStream.read(),2,2,2
org.apache.commons.io.input.InfiniteCircularInputStream.InfiniteCircularInputStream(byte[]),1,1,1
org.apache.commons.io.input.InfiniteCircularInputStream.read(),1,1,1
"org.apache.commons.io.input.InfiniteCircularInputStreamTest.assertStreamOutput(byte[],byte[])",1,1,1
org.apache.commons.io.input.InfiniteCircularInputStreamTest.should_cycle_bytes(),1,1,1
org.apache.commons.io.input.InfiniteCircularInputStreamTest.should_handle_whole_range_of_bytes(),1,1,2
org.apache.commons.io.input.MessageDigestCalculatingInputStream.MessageDigestCalculatingInputStream(InputStream),1,1,1
"org.apache.commons.io.input.MessageDigestCalculatingInputStream.MessageDigestCalculatingInputStream(InputStream,MessageDigest)",1,1,1
"org.apache.commons.io.input.MessageDigestCalculatingInputStream.MessageDigestCalculatingInputStream(InputStream,String)",1,1,1
org.apache.commons.io.input.MessageDigestCalculatingInputStream.MessageDigestMaintainingObserver.MessageDigestMaintainingObserver(MessageDigest),1,1,1
"org.apache.commons.io.input.MessageDigestCalculatingInputStream.MessageDigestMaintainingObserver.data(byte[],int,int)",1,1,1
org.apache.commons.io.input.MessageDigestCalculatingInputStream.MessageDigestMaintainingObserver.data(int),1,1,1
org.apache.commons.io.input.MessageDigestCalculatingInputStream.getMessageDigest(),1,1,1
org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest.generateRandomByteStream(int),1,1,1
org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest.test(),1,2,2
org.apache.commons.io.input.NullInputStream.NullInputStream(long),1,1,1
"org.apache.commons.io.input.NullInputStream.NullInputStream(long,boolean,boolean)",1,1,1
org.apache.commons.io.input.NullInputStream.available(),3,1,3
org.apache.commons.io.input.NullInputStream.close(),1,1,1
org.apache.commons.io.input.NullInputStream.doEndOfFile(),2,1,2
org.apache.commons.io.input.NullInputStream.getPosition(),1,1,1
org.apache.commons.io.input.NullInputStream.getSize(),1,1,1
org.apache.commons.io.input.NullInputStream.mark(int),2,1,2
org.apache.commons.io.input.NullInputStream.markSupported(),1,1,1
org.apache.commons.io.input.NullInputStream.processByte(),1,1,1
"org.apache.commons.io.input.NullInputStream.processBytes(byte[],int,int)",1,1,1
org.apache.commons.io.input.NullInputStream.read(),3,2,3
org.apache.commons.io.input.NullInputStream.read(byte[]),1,1,1
"org.apache.commons.io.input.NullInputStream.read(byte[],int,int)",3,2,4
org.apache.commons.io.input.NullInputStream.reset(),4,1,4
org.apache.commons.io.input.NullInputStream.skip(long),3,2,4
org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(int),1,1,1
"org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(int,boolean,boolean)",1,1,1
org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processByte(),1,1,1
"org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processBytes(byte[],int,int)",1,1,2
org.apache.commons.io.input.NullInputStreamTest.testEOFException(),1,1,2
org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(),1,6,6
org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(),1,3,3
org.apache.commons.io.input.NullInputStreamTest.testRead(),1,3,3
org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(),1,5,5
org.apache.commons.io.input.NullInputStreamTest.testSkip(),1,2,2
org.apache.commons.io.input.NullReader.NullReader(long),1,1,1
"org.apache.commons.io.input.NullReader.NullReader(long,boolean,boolean)",1,1,1
org.apache.commons.io.input.NullReader.close(),1,1,1
org.apache.commons.io.input.NullReader.doEndOfFile(),2,1,2
org.apache.commons.io.input.NullReader.getPosition(),1,1,1
org.apache.commons.io.input.NullReader.getSize(),1,1,1
org.apache.commons.io.input.NullReader.mark(int),2,1,2
org.apache.commons.io.input.NullReader.markSupported(),1,1,1
org.apache.commons.io.input.NullReader.processChar(),1,1,1
"org.apache.commons.io.input.NullReader.processChars(char[],int,int)",1,1,1
org.apache.commons.io.input.NullReader.read(),3,2,3
org.apache.commons.io.input.NullReader.read(char[]),1,1,1
"org.apache.commons.io.input.NullReader.read(char[],int,int)",3,2,4
org.apache.commons.io.input.NullReader.reset(),4,1,4
org.apache.commons.io.input.NullReader.skip(long),3,2,4
org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(int),1,1,1
"org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(int,boolean,boolean)",1,1,1
org.apache.commons.io.input.NullReaderTest.TestNullReader.processChar(),1,1,1
"org.apache.commons.io.input.NullReaderTest.TestNullReader.processChars(char[],int,int)",1,1,2
org.apache.commons.io.input.NullReaderTest.testEOFException(),1,1,2
org.apache.commons.io.input.NullReaderTest.testMarkAndReset(),1,6,6
org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(),1,3,3
org.apache.commons.io.input.NullReaderTest.testRead(),1,3,3
org.apache.commons.io.input.NullReaderTest.testReadCharArray(),1,5,5
org.apache.commons.io.input.NullReaderTest.testSkip(),1,2,2
org.apache.commons.io.input.ObservableInputStream.ObservableInputStream(InputStream),1,1,1
org.apache.commons.io.input.ObservableInputStream.Observer.closed(),1,1,1
"org.apache.commons.io.input.ObservableInputStream.Observer.data(byte[],int,int)",1,1,1
org.apache.commons.io.input.ObservableInputStream.Observer.data(int),1,1,1
org.apache.commons.io.input.ObservableInputStream.Observer.error(IOException),1,1,1
org.apache.commons.io.input.ObservableInputStream.Observer.finished(),1,1,1
org.apache.commons.io.input.ObservableInputStream.add(Observer),1,1,1
org.apache.commons.io.input.ObservableInputStream.close(),1,2,3
org.apache.commons.io.input.ObservableInputStream.consume(),3,2,3
org.apache.commons.io.input.ObservableInputStream.getObservers(),1,1,1
org.apache.commons.io.input.ObservableInputStream.noteClosed(),1,2,2
org.apache.commons.io.input.ObservableInputStream.noteDataByte(int),1,2,2
"org.apache.commons.io.input.ObservableInputStream.noteDataBytes(byte[],int,int)",1,2,2
org.apache.commons.io.input.ObservableInputStream.noteError(IOException),1,2,2
org.apache.commons.io.input.ObservableInputStream.noteFinished(),1,2,2
org.apache.commons.io.input.ObservableInputStream.read(),1,3,4
org.apache.commons.io.input.ObservableInputStream.read(byte[]),1,4,5
"org.apache.commons.io.input.ObservableInputStream.read(byte[],int,int)",1,4,5
org.apache.commons.io.input.ObservableInputStream.remove(Observer),1,1,1
org.apache.commons.io.input.ObservableInputStream.removeAllObservers(),1,1,1
org.apache.commons.io.input.ObservableInputStreamTest.LastByteKeepingObserver.closed(),1,1,1
org.apache.commons.io.input.ObservableInputStreamTest.LastByteKeepingObserver.data(int),1,1,1
org.apache.commons.io.input.ObservableInputStreamTest.LastByteKeepingObserver.finished(),1,1,1
"org.apache.commons.io.input.ObservableInputStreamTest.LastBytesKeepingObserver.data(byte[],int,int)",1,1,1
org.apache.commons.io.input.ObservableInputStreamTest.testDataByteCalled(),1,2,2
org.apache.commons.io.input.ObservableInputStreamTest.testDataBytesCalled(),5,5,5
org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(InputStream),1,1,1
org.apache.commons.io.input.ProxyInputStream.afterRead(int),1,1,1
org.apache.commons.io.input.ProxyInputStream.available(),1,2,2
org.apache.commons.io.input.ProxyInputStream.beforeRead(int),1,1,1
org.apache.commons.io.input.ProxyInputStream.close(),1,2,2
org.apache.commons.io.input.ProxyInputStream.handleIOException(IOException),1,1,1
org.apache.commons.io.input.ProxyInputStream.mark(int),1,1,1
org.apache.commons.io.input.ProxyInputStream.markSupported(),1,1,1
org.apache.commons.io.input.ProxyInputStream.read(),1,2,3
org.apache.commons.io.input.ProxyInputStream.read(byte[]),1,2,3
"org.apache.commons.io.input.ProxyInputStream.read(byte[],int,int)",1,2,2
org.apache.commons.io.input.ProxyInputStream.reset(),1,2,2
org.apache.commons.io.input.ProxyInputStream.skip(long),1,2,2
org.apache.commons.io.input.ProxyReader.ProxyReader(Reader),1,1,1
org.apache.commons.io.input.ProxyReader.afterRead(int),1,1,1
org.apache.commons.io.input.ProxyReader.beforeRead(int),1,1,1
org.apache.commons.io.input.ProxyReader.close(),1,2,2
org.apache.commons.io.input.ProxyReader.handleIOException(IOException),1,1,1
org.apache.commons.io.input.ProxyReader.mark(int),1,2,2
org.apache.commons.io.input.ProxyReader.markSupported(),1,1,1
org.apache.commons.io.input.ProxyReader.read(),1,2,3
org.apache.commons.io.input.ProxyReader.read(CharBuffer),1,3,3
org.apache.commons.io.input.ProxyReader.read(char[]),1,2,3
"org.apache.commons.io.input.ProxyReader.read(char[],int,int)",1,2,2
org.apache.commons.io.input.ProxyReader.ready(),1,2,2
org.apache.commons.io.input.ProxyReader.reset(),1,2,2
org.apache.commons.io.input.ProxyReader.skip(long),1,2,2
org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.CustomNullReader(int),1,1,1
org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.read(CharBuffer),1,2,2
org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.read(char[]),1,2,2
org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl.ProxyReaderImpl(Reader),1,1,1
org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(),1,1,1
org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(),1,1,1
org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader),1,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,Charset)",1,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,Charset,int)",1,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,CharsetEncoder)",1,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,CharsetEncoder,int)",1,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,String)",1,1,1
"org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(Reader,String,int)",1,1,1
org.apache.commons.io.input.ReaderInputStream.close(),1,1,1
org.apache.commons.io.input.ReaderInputStream.fillBuffer(),1,5,5
org.apache.commons.io.input.ReaderInputStream.read(),4,4,5
org.apache.commons.io.input.ReaderInputStream.read(byte[]),1,1,1
"org.apache.commons.io.input.ReaderInputStream.read(byte[],int,int)",7,4,12
org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop(),1,1,2
org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead(),1,1,1
org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead(),1,1,1
org.apache.commons.io.input.ReaderInputStreamTest.testReadZero(),1,1,1
org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(),1,1,1
org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(),1,1,1
org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(),1,1,1
org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(),1,1,1
"org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(String,String)",3,4,4
"org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(String,String)",1,2,2
"org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(long,int,byte[])",3,3,5
org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver(),1,2,2
"org.apache.commons.io.input.ReversedLinesFileReader.FilePart.getNewLineMatchByteCount(byte[],int)",3,1,5
org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(),6,5,9
org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(),4,1,4
org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(File),1,1,1
"org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(File,Charset)",1,1,1
"org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(File,int,Charset)",6,7,13
"org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(File,int,String)",1,1,1
org.apache.commons.io.input.ReversedLinesFileReader.close(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReader.readLine(),3,5,5
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.ReversedLinesFileReaderTestParamBlockSize(Integer),1,1,1
"org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(String,String)",1,1,1
"org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(String,String,String)",1,2,2
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(ReversedLinesFileReader),1,2,2
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.blockSizes(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader(),1,1,2
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testGBK(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(),1,3,3
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testWindows31jFile(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testxWindows949File(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testxWindows950File(),1,1,1
"org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.ReversedLinesFileReaderTestParamFile(String,String,Integer)",1,1,2
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.blockSizes(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader(),1,1,3
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(),1,3,3
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader(),1,1,2
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5(),1,1,1
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(InputStream),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readBoolean(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readByte(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readChar(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readDouble(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readFloat(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[]),1,1,1
"org.apache.commons.io.input.SwappedDataInputStream.readFully(byte[],int,int)",3,2,3
org.apache.commons.io.input.SwappedDataInputStream.readInt(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readLine(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readLong(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readShort(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readUTF(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort(),1,1,1
org.apache.commons.io.input.SwappedDataInputStream.skipBytes(int),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.setUp(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(),1,2,2
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(),1,1,1
org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(),1,1,1
org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(InputStream),1,1,1
org.apache.commons.io.input.TaggedInputStream.handleIOException(IOException),1,1,1
org.apache.commons.io.input.TaggedInputStream.isCauseOf(Throwable),1,1,1
org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(Throwable),1,1,1
org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(),1,7,7
org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(),1,1,1
org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream(),1,1,1
org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(),1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,Charset,TailerListener,long,boolean,boolean,int)",1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener)",1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener,long)",1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener,long,boolean)",1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener,long,boolean,boolean)",1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener,long,boolean,boolean,int)",1,1,1
"org.apache.commons.io.input.Tailer.Tailer(File,TailerListener,long,boolean,int)",1,1,1
"org.apache.commons.io.input.Tailer.create(File,Charset,TailerListener,long,boolean,boolean,int)",1,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener)",1,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener,long)",1,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener,long,boolean)",1,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener,long,boolean,boolean)",1,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener,long,boolean,boolean,int)",1,1,1
"org.apache.commons.io.input.Tailer.create(File,TailerListener,long,boolean,int)",1,1,1
org.apache.commons.io.input.Tailer.getDelay(),1,1,1
org.apache.commons.io.input.Tailer.getFile(),1,1,1
org.apache.commons.io.input.Tailer.getRun(),1,1,1
org.apache.commons.io.input.Tailer.readLines(RandomAccessFile),2,8,10
org.apache.commons.io.input.Tailer.run(),3,19,20
org.apache.commons.io.input.Tailer.stop(),1,1,1
org.apache.commons.io.input.TailerListenerAdapter.endOfFileReached(),1,1,1
org.apache.commons.io.input.TailerListenerAdapter.fileNotFound(),1,1,1
org.apache.commons.io.input.TailerListenerAdapter.fileRotated(),1,1,1
org.apache.commons.io.input.TailerListenerAdapter.handle(Exception),1,1,1
org.apache.commons.io.input.TailerListenerAdapter.handle(String),1,1,1
org.apache.commons.io.input.TailerListenerAdapter.init(Tailer),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.clear(),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.endOfFileReached(),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.fileNotFound(),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.fileRotated(),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.getLines(),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.handle(Exception),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.handle(String),1,1,1
org.apache.commons.io.input.TailerTest.TestTailerListener.init(Tailer),1,1,1
"org.apache.commons.io.input.TailerTest.createFile(File,long)",2,2,5
org.apache.commons.io.input.TailerTest.getTestDirectory(),1,1,1
org.apache.commons.io.input.TailerTest.tearDown(),1,2,2
org.apache.commons.io.input.TailerTest.testBufferBreak(),1,3,3
org.apache.commons.io.input.TailerTest.testIO335(),1,1,1
org.apache.commons.io.input.TailerTest.testInterrupt(),1,1,1
org.apache.commons.io.input.TailerTest.testLongFile(),1,4,4
org.apache.commons.io.input.TailerTest.testMultiByteBreak(),1,4,4
org.apache.commons.io.input.TailerTest.testStopWithNoFile(),1,1,1
org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(),1,1,1
org.apache.commons.io.input.TailerTest.testTailer(),1,1,1
org.apache.commons.io.input.TailerTest.testTailerEndOfFileReached(),1,1,1
org.apache.commons.io.input.TailerTest.testTailerEof(),1,1,1
"org.apache.commons.io.input.TailerTest.write(File,String...)",1,2,2
"org.apache.commons.io.input.TailerTest.writeString(File,String...)",1,2,2
"org.apache.commons.io.input.TeeInputStream.TeeInputStream(InputStream,OutputStream)",1,1,1
"org.apache.commons.io.input.TeeInputStream.TeeInputStream(InputStream,OutputStream,boolean)",1,1,1
org.apache.commons.io.input.TeeInputStream.close(),1,2,2
org.apache.commons.io.input.TeeInputStream.read(),1,2,2
org.apache.commons.io.input.TeeInputStream.read(byte[]),1,2,2
"org.apache.commons.io.input.TeeInputStream.read(byte[],int,int)",1,2,2
org.apache.commons.io.input.TeeInputStreamTest.setUp(),1,1,1
org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(),1,1,1
org.apache.commons.io.input.TeeInputStreamTest.testReadEverything(),1,1,1
org.apache.commons.io.input.TeeInputStreamTest.testReadNothing(),1,1,1
org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte(),1,1,1
org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(),1,1,1
org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(),1,1,1
org.apache.commons.io.input.TeeInputStreamTest.testSkip(),1,1,1
"org.apache.commons.io.input.UnixLineEndingInputStream.UnixLineEndingInputStream(InputStream,boolean)",1,1,1
org.apache.commons.io.input.UnixLineEndingInputStream.close(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStream.eofGame(boolean),3,1,4
org.apache.commons.io.input.UnixLineEndingInputStream.mark(int),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStream.read(),5,4,6
org.apache.commons.io.input.UnixLineEndingInputStream.readWithUpdate(),2,1,2
org.apache.commons.io.input.UnixLineEndingInputStreamTest.crAtEnd(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.crOnlyEnsureAtEof(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.crOnlyNotAtEof(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.inTheMiddleOfTheLine(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.multipleBlankLines(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.retainLineFeed(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(String),1,1,1
"org.apache.commons.io.input.UnixLineEndingInputStreamTest.roundtrip(String,boolean)",1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.simpleString(),1,1,1
org.apache.commons.io.input.UnixLineEndingInputStreamTest.twoLinesAtEnd(),1,1,1
"org.apache.commons.io.input.WindowsLineEndingInputStream.WindowsLineEndingInputStream(InputStream,boolean)",1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStream.close(),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStream.eofGame(),4,1,5
org.apache.commons.io.input.WindowsLineEndingInputStream.mark(int),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStream.read(),6,4,6
org.apache.commons.io.input.WindowsLineEndingInputStream.readWithUpdate(),2,1,2
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.inTheMiddleOfTheLine(),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.linuxLinefeeds(),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.malformed(),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.multipleBlankLines(),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.retainLineFeed(),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(String),1,1,1
"org.apache.commons.io.input.WindowsLineEndingInputStreamTest.roundtrip(String,boolean)",1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.simpleString(),1,1,1
org.apache.commons.io.input.WindowsLineEndingInputStreamTest.twoLinesAtEnd(),1,1,1
org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(File),1,1,1
org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream),1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,String,boolean)",1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,String,boolean,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,boolean)",1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(InputStream,boolean,String)",1,1,1
org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(URL),1,1,1
"org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(URLConnection,String)",1,2,3
"org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(String,String,String,String,boolean)",13,14,20
"org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(String,String,String)",13,23,27
org.apache.commons.io.input.XmlStreamReader.close(),1,1,1
"org.apache.commons.io.input.XmlStreamReader.doHttpStream(BOMInputStream,BOMInputStream,String,boolean)",2,3,3
"org.apache.commons.io.input.XmlStreamReader.doLenientDetection(String,XmlStreamReaderException)",2,4,7
"org.apache.commons.io.input.XmlStreamReader.doRawStream(BOMInputStream,BOMInputStream,boolean)",2,3,3
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(String),1,5,5
org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(String),1,3,3
org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding(),1,1,1
org.apache.commons.io.input.XmlStreamReader.getEncoding(),1,1,1
"org.apache.commons.io.input.XmlStreamReader.getXmlProlog(InputStream,String)",4,6,10
org.apache.commons.io.input.XmlStreamReader.isAppXml(String),1,6,6
org.apache.commons.io.input.XmlStreamReader.isTextXml(String),1,5,5
"org.apache.commons.io.input.XmlStreamReader.read(char[],int,int)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(String,String,String,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(String,String,String,String,String,String)",1,1,1
org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(),1,1,1
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding(),1,1,1
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime(),1,1,1
org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(),1,1,1
org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(),1,1,1
"org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(String,String,String,String,String)",1,2,4
"org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(String,String,String,String)",1,2,3
"org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(String,String,String,String,String)",1,1,2
"org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(String,String,String,String)",1,2,3
"org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(String,String,String)",1,3,3
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(String),1,3,3
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(String),1,2,2
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(String),1,1,1
"org.apache.commons.io.input.XmlStreamReaderTest.getXML(String,String,String,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(String,String,String,String)",1,3,4
org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testHttp(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf16(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf32(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawBomUtf8(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomCp1047(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomIso8859_1(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUsAscii(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16BE(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf16LE(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32BE(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf32LE(),1,1,1
org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBomUtf8(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.MockXmlStreamReader(String),1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(String,String,String,String,boolean,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(String,String,String,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(boolean,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(String,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(String,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(String,boolean,String,String,String,String,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(String,boolean,String,String,String,String,String)",1,3,3
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(String,String,String,String,String)",1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(String,String,String,String,String)",1,3,3
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(boolean,String)",1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncodingUtf32(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF16(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalUTF32(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(),1,1,1
"org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(String,String,String)",1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandardUtf32(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime(),1,1,1
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml(),1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(File),1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(InputStream),1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(InputStream,String)",1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(InputStream,String,boolean)",1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(InputStream,String,boolean,String)",2,3,4
"org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(InputStream,boolean)",2,3,3
org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(URL),1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(URLConnection),1,6,6
"org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(String,String,String,String,String,InputStream,boolean)",10,17,19
"org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(String,String,String,InputStream)",11,27,30
org.apache.commons.io.input.compatibility.XmlStreamReader.close(),1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(InputStream,String,boolean)",1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(String,XmlStreamReaderException)",1,5,8
org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(InputStream),1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(BufferedInputStream),1,4,8
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(String),1,5,5
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(String),1,3,3
org.apache.commons.io.input.compatibility.XmlStreamReader.getDefaultEncoding(),1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReader.getEncoding(),1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(BufferedInputStream),1,1,17
"org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(BufferedInputStream,String)",4,6,10
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(String),1,6,6
org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(String),1,5,5
"org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(InputStream,String)",1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReader.read(char[],int,int)",1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReader.setDefaultEncoding(String),1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(String,String,String,String,InputStream)",1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(String,String,String,String,String,String,InputStream)",1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream(),1,1,1
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.MockXmlStreamReader(String),1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(String,String,String,String,boolean,String)",1,1,1
"org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(String,String,String,String)",1,1,1
"org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(String,int,int,int,int,int,int)",1,1,1
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(String),1,1,1
"org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(File,FileFilter)",1,2,2
org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(),1,2,2
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(File),1,4,4
org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(boolean),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.clear(),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories(),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories(),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories(),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.onDirectoryChange(File),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.onDirectoryCreate(File),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.onDirectoryDelete(File),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.onFileChange(File),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.onFileCreate(File),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.onFileDelete(File),1,1,1
org.apache.commons.io.monitor.CollectionFileListener.onStart(FileAlterationObserver),1,2,2
org.apache.commons.io.monitor.CollectionFileListener.onStop(FileAlterationObserver),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryChange(File),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryCreate(File),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryDelete(File),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileChange(File),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileCreate(File),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileDelete(File),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStart(FileAlterationObserver),1,1,1
org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStop(FileAlterationObserver),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(long),1,1,1
"org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(long,FileAlterationObserver...)",1,3,3
org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(FileAlterationObserver),1,2,2
org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitor.getObservers(),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(FileAlterationObserver),1,2,3
org.apache.commons.io.monitor.FileAlterationMonitor.run(),3,3,5
org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(ThreadFactory),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitor.start(),2,3,4
org.apache.commons.io.monitor.FileAlterationMonitor.stop(),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitor.stop(long),2,3,4
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.FileAlterationMonitorTestCase(),1,1,1
"org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(String,File,Collection<File>)",3,2,3
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(),1,1,1
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(),1,1,3
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(File),1,1,1
"org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(File,FileFilter)",1,1,1
"org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(File,FileFilter,IOCase)",1,1,1
"org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(FileEntry,FileFilter,IOCase)",3,3,6
org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(String),1,1,1
"org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(String,FileFilter)",1,1,1
"org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(String,FileFilter,IOCase)",1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.addListener(FileAlterationListener),1,2,2
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(),1,5,5
"org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(FileEntry,FileEntry[],File[])",1,7,8
"org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(FileEntry,File)",1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.destroy(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.doCreate(FileEntry),1,4,4
org.apache.commons.io.monitor.FileAlterationObserver.doDelete(FileEntry),1,3,3
"org.apache.commons.io.monitor.FileAlterationObserver.doListFiles(File,FileEntry)",1,2,3
"org.apache.commons.io.monitor.FileAlterationObserver.doMatch(FileEntry,File)",1,4,4
org.apache.commons.io.monitor.FileAlterationObserver.getDirectory(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.getListeners(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.initialize(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserver.listFiles(File),1,4,6
org.apache.commons.io.monitor.FileAlterationObserver.removeListener(FileAlterationListener),1,2,3
org.apache.commons.io.monitor.FileAlterationObserver.toString(),1,2,2
org.apache.commons.io.monitor.FileAlterationObserverTestCase.FileAlterationObserverTestCase(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(),1,1,1
org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(),1,1,1
org.apache.commons.io.monitor.FileEntry.FileEntry(File),1,1,1
"org.apache.commons.io.monitor.FileEntry.FileEntry(FileEntry,File)",2,1,2
org.apache.commons.io.monitor.FileEntry.getChildren(),1,1,2
org.apache.commons.io.monitor.FileEntry.getFile(),1,1,1
org.apache.commons.io.monitor.FileEntry.getLastModified(),1,1,1
org.apache.commons.io.monitor.FileEntry.getLength(),1,1,1
org.apache.commons.io.monitor.FileEntry.getLevel(),1,2,2
org.apache.commons.io.monitor.FileEntry.getName(),1,1,1
org.apache.commons.io.monitor.FileEntry.getParent(),1,1,1
org.apache.commons.io.monitor.FileEntry.isDirectory(),1,1,1
org.apache.commons.io.monitor.FileEntry.isExists(),1,1,1
org.apache.commons.io.monitor.FileEntry.newChildInstance(File),1,1,1
org.apache.commons.io.monitor.FileEntry.refresh(File),1,4,8
org.apache.commons.io.monitor.FileEntry.setChildren(FileEntry[]),1,1,1
org.apache.commons.io.monitor.FileEntry.setDirectory(boolean),1,1,1
org.apache.commons.io.monitor.FileEntry.setExists(boolean),1,1,1
org.apache.commons.io.monitor.FileEntry.setLastModified(long),1,1,1
org.apache.commons.io.monitor.FileEntry.setLength(long),1,1,1
org.apache.commons.io.monitor.FileEntry.setName(String),1,1,1
org.apache.commons.io.output.AppendableOutputStream.AppendableOutputStream(T),1,1,1
org.apache.commons.io.output.AppendableOutputStream.getAppendable(),1,1,1
org.apache.commons.io.output.AppendableOutputStream.write(int),1,1,1
org.apache.commons.io.output.AppendableOutputStreamTest.setUp(),1,1,1
org.apache.commons.io.output.AppendableOutputStreamTest.testWriteInt(),1,1,1
org.apache.commons.io.output.AppendableOutputStreamTest.testWriteStringBuilder(),1,1,1
org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(),1,1,1
org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(IOException),1,1,1
org.apache.commons.io.output.BrokenOutputStream.close(),1,1,1
org.apache.commons.io.output.BrokenOutputStream.flush(),1,1,1
org.apache.commons.io.output.BrokenOutputStream.write(int),1,1,1
org.apache.commons.io.output.BrokenOutputStreamTest.setUp(),1,1,1
org.apache.commons.io.output.BrokenOutputStreamTest.testClose(),1,2,2
org.apache.commons.io.output.BrokenOutputStreamTest.testFlush(),1,2,2
org.apache.commons.io.output.BrokenOutputStreamTest.testWrite(),1,4,4
org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(),1,1,1
org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(int),2,1,2
org.apache.commons.io.output.ByteArrayOutputStream.close(),1,1,1
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(int),1,3,3
org.apache.commons.io.output.ByteArrayOutputStream.reset(),1,2,2
org.apache.commons.io.output.ByteArrayOutputStream.size(),1,1,1
org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(InputStream),1,1,1
"org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(InputStream,int)",1,1,1
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(),4,2,4
org.apache.commons.io.output.ByteArrayOutputStream.toInputStream(),4,2,4
org.apache.commons.io.output.ByteArrayOutputStream.toString(),1,1,1
org.apache.commons.io.output.ByteArrayOutputStream.toString(Charset),1,1,1
org.apache.commons.io.output.ByteArrayOutputStream.toString(String),1,1,1
org.apache.commons.io.output.ByteArrayOutputStream.write(InputStream),1,3,3
"org.apache.commons.io.output.ByteArrayOutputStream.write(byte[],int,int)",3,3,9
org.apache.commons.io.output.ByteArrayOutputStream.write(int),1,2,2
org.apache.commons.io.output.ByteArrayOutputStream.writeTo(OutputStream),3,2,3
"org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp(byte[],byte[])",3,1,3
"org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(byte[],byte[])",1,3,3
"org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(ByteArrayOutputStream,ByteArrayOutputStream)",1,1,1
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(),1,1,1
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStream(),1,2,2
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testToInputStreamWithReset(),1,2,2
"org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(ByteArrayOutputStream,ByteArrayOutputStream,int)",3,2,3
"org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(ByteArrayOutputStream,ByteArrayOutputStream,int[])",1,2,2
org.apache.commons.io.output.ChunkedOutputStream.ChunkedOutputStream(OutputStream),1,1,1
"org.apache.commons.io.output.ChunkedOutputStream.ChunkedOutputStream(OutputStream,int)",2,1,2
"org.apache.commons.io.output.ChunkedOutputStream.write(byte[],int,int)",1,2,2
org.apache.commons.io.output.ChunkedOutputStreamTest.defaultConstructor(),1,1,1
org.apache.commons.io.output.ChunkedOutputStreamTest.getByteArrayOutputStream(AtomicInteger),1,1,1
org.apache.commons.io.output.ChunkedOutputStreamTest.negative_chunksize_not_permitted(),1,1,1
org.apache.commons.io.output.ChunkedOutputStreamTest.write_four_chunks(),1,1,1
org.apache.commons.io.output.ChunkedWriter.ChunkedWriter(Writer),1,1,1
"org.apache.commons.io.output.ChunkedWriter.ChunkedWriter(Writer,int)",2,1,2
"org.apache.commons.io.output.ChunkedWriter.write(char[],int,int)",1,2,2
org.apache.commons.io.output.ChunkedWriterTest.getOutputStreamWriter(AtomicInteger),1,1,1
org.apache.commons.io.output.ChunkedWriterTest.negative_chunksize_not_permitted(),1,1,1
org.apache.commons.io.output.ChunkedWriterTest.write_four_chunks(),1,1,1
org.apache.commons.io.output.ChunkedWriterTest.write_two_chunks_default_constructor(),1,1,1
org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(OutputStream),1,1,1
org.apache.commons.io.output.CloseShieldOutputStream.close(),1,1,1
org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(),1,1,1
org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(),1,1,2
org.apache.commons.io.output.ClosedOutputStream.write(int),1,1,1
org.apache.commons.io.output.ClosedOutputStreamTest.testRead(),1,1,2
org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(OutputStream),1,1,1
org.apache.commons.io.output.CountingOutputStream.beforeWrite(int),1,1,1
org.apache.commons.io.output.CountingOutputStream.getByteCount(),1,1,1
org.apache.commons.io.output.CountingOutputStream.getCount(),2,1,2
org.apache.commons.io.output.CountingOutputStream.resetByteCount(),1,1,1
org.apache.commons.io.output.CountingOutputStream.resetCount(),2,1,2
"org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(String,byte[],int,int)",1,2,2
org.apache.commons.io.output.CountingOutputStreamTest.testCounting(),1,3,5
org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(),1,1,3
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,File)",1,1,1
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,File,String,String,File,int)",1,1,1
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,String,String,File)",2,1,2
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,int,File)",2,1,2
"org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(int,int,String,String,File)",3,1,3
org.apache.commons.io.output.DeferredFileOutputStream.close(),1,1,1
org.apache.commons.io.output.DeferredFileOutputStream.getData(),2,2,2
org.apache.commons.io.output.DeferredFileOutputStream.getFile(),1,1,1
org.apache.commons.io.output.DeferredFileOutputStream.getStream(),1,1,1
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(),1,1,1
org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(),1,3,3
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(OutputStream),2,2,3
org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(int),1,1,1
org.apache.commons.io.output.DeferredFileOutputStreamTest.data(),1,1,1
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(),1,2,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(),1,2,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(),1,2,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(),1,2,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(),1,2,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(),1,2,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(),1,1,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(),1,2,2
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(),1,2,3
org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(),1,2,3
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(File),1,3,4
org.apache.commons.io.output.DemuxOutputStream.bindStream(OutputStream),1,1,1
org.apache.commons.io.output.DemuxOutputStream.close(),1,2,2
org.apache.commons.io.output.DemuxOutputStream.flush(),1,2,2
org.apache.commons.io.output.DemuxOutputStream.write(int),1,2,2
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,Charset)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,Charset,boolean)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,CharsetEncoder)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,CharsetEncoder,boolean)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,String)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(File,String,boolean)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,Charset)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,Charset,boolean)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,CharsetEncoder)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,CharsetEncoder,boolean)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,String)",1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(String,String,boolean)",1,1,1
org.apache.commons.io.output.FileWriterWithEncoding.close(),1,1,1
org.apache.commons.io.output.FileWriterWithEncoding.flush(),1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.initWriter(File,Object,boolean)",5,5,9
org.apache.commons.io.output.FileWriterWithEncoding.write(String),1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.write(String,int,int)",1,1,1
org.apache.commons.io.output.FileWriterWithEncoding.write(char[]),1,1,1
"org.apache.commons.io.output.FileWriterWithEncoding.write(char[],int,int)",1,1,1
org.apache.commons.io.output.FileWriterWithEncoding.write(int),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_File_directory(),1,2,2
org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_File_encoding_badEncoding(),1,2,2
org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_File_nullFile(),1,2,2
org.apache.commons.io.output.FileWriterWithEncodingTest.constructor_fileName_nullFile(),1,2,2
org.apache.commons.io.output.FileWriterWithEncodingTest.getTestDirectory(),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_CharsetEncoder_constructor(),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_Charset_constructor(),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_null_Charset_constructor(),1,1,2
org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_CharsetEncoder_constructor(),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_Charset_constructor(),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_constructor(),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.sameEncoding_string_string_constructor(),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(),1,1,2
org.apache.commons.io.output.FileWriterWithEncodingTest.succesfulRun(FileWriterWithEncoding),1,1,1
org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(),1,3,5
"org.apache.commons.io.output.FileWriterWithEncodingTest.writeTestPayload(FileWriter,FileWriterWithEncoding)",1,1,1
org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File),1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,Charset)",1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,Charset,boolean,String)",2,3,4
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,String)",1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,String,boolean,String)",1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,boolean)",1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(File,boolean,String)",1,1,1
org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(String),1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(String,boolean)",1,1,1
"org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(String,boolean,String)",1,1,1
org.apache.commons.io.output.LockableFileWriter.close(),1,1,1
org.apache.commons.io.output.LockableFileWriter.createLock(),2,2,2
org.apache.commons.io.output.LockableFileWriter.flush(),1,1,1
"org.apache.commons.io.output.LockableFileWriter.initWriter(File,Charset,boolean)",1,3,3
org.apache.commons.io.output.LockableFileWriter.testLockDir(File),3,3,3
org.apache.commons.io.output.LockableFileWriter.write(String),1,1,1
"org.apache.commons.io.output.LockableFileWriter.write(String,int,int)",1,1,1
org.apache.commons.io.output.LockableFileWriter.write(char[]),1,1,1
"org.apache.commons.io.output.LockableFileWriter.write(char[],int,int)",1,1,1
org.apache.commons.io.output.LockableFileWriter.write(int),1,1,1
org.apache.commons.io.output.LockableFileWriterTest.getTestDirectory(),1,1,1
org.apache.commons.io.output.LockableFileWriterTest.setUp(),1,1,1
org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(),1,2,2
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(),1,2,2
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(),1,2,2
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(),1,2,2
org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(),1,2,2
org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(),1,3,3
org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(),1,1,1
org.apache.commons.io.output.NullOutputStream.write(byte[]),1,1,1
"org.apache.commons.io.output.NullOutputStream.write(byte[],int,int)",1,1,1
org.apache.commons.io.output.NullOutputStream.write(int),1,1,1
org.apache.commons.io.output.NullOutputStreamTest.testNull(),1,1,1
org.apache.commons.io.output.NullWriter.NullWriter(),1,1,1
org.apache.commons.io.output.NullWriter.append(CharSequence),1,1,1
"org.apache.commons.io.output.NullWriter.append(CharSequence,int,int)",1,1,1
org.apache.commons.io.output.NullWriter.append(char),1,1,1
org.apache.commons.io.output.NullWriter.close(),1,1,1
org.apache.commons.io.output.NullWriter.flush(),1,1,1
org.apache.commons.io.output.NullWriter.write(String),1,1,1
"org.apache.commons.io.output.NullWriter.write(String,int,int)",1,1,1
org.apache.commons.io.output.NullWriter.write(char[]),1,1,1
"org.apache.commons.io.output.NullWriter.write(char[],int,int)",1,1,1
org.apache.commons.io.output.NullWriter.write(int),1,1,1
org.apache.commons.io.output.NullWriterTest.testNull(),1,1,1
org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(OutputStream),1,1,1
org.apache.commons.io.output.ProxyOutputStream.afterWrite(int),1,1,1
org.apache.commons.io.output.ProxyOutputStream.beforeWrite(int),1,1,1
org.apache.commons.io.output.ProxyOutputStream.close(),1,2,2
org.apache.commons.io.output.ProxyOutputStream.flush(),1,2,2
org.apache.commons.io.output.ProxyOutputStream.handleIOException(IOException),1,1,1
org.apache.commons.io.output.ProxyOutputStream.write(byte[]),1,2,3
"org.apache.commons.io.output.ProxyOutputStream.write(byte[],int,int)",1,2,2
org.apache.commons.io.output.ProxyOutputStream.write(int),1,2,2
org.apache.commons.io.output.ProxyOutputStreamTest.setUp(),1,2,2
org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(),1,1,1
org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(),1,1,1
org.apache.commons.io.output.ProxyWriter.ProxyWriter(Writer),1,1,1
org.apache.commons.io.output.ProxyWriter.afterWrite(int),1,1,1
org.apache.commons.io.output.ProxyWriter.append(CharSequence),1,3,3
"org.apache.commons.io.output.ProxyWriter.append(CharSequence,int,int)",1,2,2
org.apache.commons.io.output.ProxyWriter.append(char),1,2,2
org.apache.commons.io.output.ProxyWriter.beforeWrite(int),1,1,1
org.apache.commons.io.output.ProxyWriter.close(),1,2,2
org.apache.commons.io.output.ProxyWriter.flush(),1,2,2
org.apache.commons.io.output.ProxyWriter.handleIOException(IOException),1,1,1
org.apache.commons.io.output.ProxyWriter.write(String),1,3,3
"org.apache.commons.io.output.ProxyWriter.write(String,int,int)",1,2,2
org.apache.commons.io.output.ProxyWriter.write(char[]),1,2,3
"org.apache.commons.io.output.ProxyWriter.write(char[],int,int)",1,2,2
org.apache.commons.io.output.ProxyWriter.write(int),1,2,2
org.apache.commons.io.output.ProxyWriterTest.appendChar(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.appendCharSequence(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.appendCharSequence_with_offset(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_append_char(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_append_charSequence(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_append_charSequence_offset(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_close(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_flush(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_char_array(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_int(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_offset_char_array(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_string(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.exceptions_in_write_string_offset(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.nullCharArray(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.nullCharSequencec(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.nullString(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.writeCharArray(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.writeCharArrayPartial(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.writeInt(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.writeString(),1,1,1
org.apache.commons.io.output.ProxyWriterTest.writeStringPartial(),1,1,1
org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(),1,1,1
org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(StringBuilder),1,1,2
org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(int),1,1,1
org.apache.commons.io.output.StringBuilderWriter.append(CharSequence),1,1,1
"org.apache.commons.io.output.StringBuilderWriter.append(CharSequence,int,int)",1,1,1
org.apache.commons.io.output.StringBuilderWriter.append(char),1,1,1
org.apache.commons.io.output.StringBuilderWriter.close(),1,1,1
org.apache.commons.io.output.StringBuilderWriter.flush(),1,1,1
org.apache.commons.io.output.StringBuilderWriter.getBuilder(),1,1,1
org.apache.commons.io.output.StringBuilderWriter.toString(),1,1,1
org.apache.commons.io.output.StringBuilderWriter.write(String),1,2,2
"org.apache.commons.io.output.StringBuilderWriter.write(char[],int,int)",1,2,2
org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testClose(),1,2,2
org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testWriteString(),1,1,1
org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion(),1,1,1
org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(OutputStream),1,1,1
org.apache.commons.io.output.TaggedOutputStream.handleIOException(IOException),1,1,1
org.apache.commons.io.output.TaggedOutputStream.isCauseOf(Exception),1,1,1
org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(Exception),1,1,1
org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(),1,7,7
org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(),1,2,2
org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(),1,3,3
"org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(OutputStream,OutputStream)",1,1,1
org.apache.commons.io.output.TeeOutputStream.close(),1,1,1
org.apache.commons.io.output.TeeOutputStream.flush(),1,1,1
org.apache.commons.io.output.TeeOutputStream.write(byte[]),1,1,1
"org.apache.commons.io.output.TeeOutputStream.write(byte[],int,int)",1,1,1
org.apache.commons.io.output.TeeOutputStream.write(int),1,1,1
org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.close(),1,1,1
org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.close(),1,1,1
"org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(String,byte[],byte[])",1,2,2
org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(),1,2,2
org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(),1,2,2
org.apache.commons.io.output.TeeOutputStreamTest.testTee(),1,2,4
org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(int),1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(int),1,2,3
org.apache.commons.io.output.ThresholdingOutputStream.close(),1,1,2
org.apache.commons.io.output.ThresholdingOutputStream.flush(),1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.getByteCount(),1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.getThreshold(),1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded(),1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount(),1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.setByteCount(long),1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.write(byte[]),1,1,1
"org.apache.commons.io.output.ThresholdingOutputStream.write(byte[],int,int)",1,1,1
org.apache.commons.io.output.ThresholdingOutputStream.write(int),1,1,1
org.apache.commons.io.output.ThresholdingOutputStreamTest.testSetByteCount(),1,1,1
org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer),1,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,Charset)",1,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,Charset,int,boolean)",1,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,CharsetDecoder)",1,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,CharsetDecoder,int,boolean)",1,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,String)",1,1,1
"org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(Writer,String,int,boolean)",1,1,1
org.apache.commons.io.output.WriterOutputStream.checkIbmJdkWithBrokenUTF16(Charset),4,2,5
org.apache.commons.io.output.WriterOutputStream.close(),1,1,1
org.apache.commons.io.output.WriterOutputStream.flush(),1,1,1
org.apache.commons.io.output.WriterOutputStream.flushOutput(),1,2,2
org.apache.commons.io.output.WriterOutputStream.processInput(boolean),4,3,4
org.apache.commons.io.output.WriterOutputStream.write(byte[]),1,1,1
"org.apache.commons.io.output.WriterOutputStream.write(byte[],int,int)",1,3,3
org.apache.commons.io.output.WriterOutputStream.write(int),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testFlush(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithBufferedWrite(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithBufferedWrite(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithSingleByteWrite(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithBufferedWrite(),1,3,3
org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(),1,3,3
org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite(),1,1,1
org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite(),1,1,1
"org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(String,String)",1,2,2
"org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(String,String)",1,2,2
org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(),1,1,1
org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(File),1,1,1
"org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(File,String)",1,1,1
org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(OutputStream),1,1,1
"org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(OutputStream,String)",1,1,2
org.apache.commons.io.output.XmlStreamWriter.close(),1,2,2
"org.apache.commons.io.output.XmlStreamWriter.detectEncoding(char[],int,int)",1,8,9
org.apache.commons.io.output.XmlStreamWriter.flush(),1,2,2
org.apache.commons.io.output.XmlStreamWriter.getDefaultEncoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriter.getEncoding(),1,1,1
"org.apache.commons.io.output.XmlStreamWriter.write(char[],int,int)",1,2,2
"org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(String,String,String)",1,1,1
"org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(String,String)",1,1,1
"org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(String,String,String)",1,1,3
"org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(String,String)",1,1,2
org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(),1,1,1
org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(),1,1,1
org.apache.commons.io.serialization.ClosingBase.cleanup(),1,2,3
org.apache.commons.io.serialization.ClosingBase.setup(),1,1,1
org.apache.commons.io.serialization.ClosingBase.willClose(T),1,1,1
org.apache.commons.io.serialization.FullClassNameMatcher.FullClassNameMatcher(String...),1,1,1
org.apache.commons.io.serialization.FullClassNameMatcher.matches(String),1,1,1
org.apache.commons.io.serialization.FullClassNameMatcherTest.noNames(),1,1,1
org.apache.commons.io.serialization.FullClassNameMatcherTest.withNames(),1,1,1
org.apache.commons.io.serialization.MockSerializedClass.MockSerializedClass(String),1,1,1
org.apache.commons.io.serialization.MockSerializedClass.equals(Object),2,1,2
org.apache.commons.io.serialization.MockSerializedClass.hashCode(),1,1,1
org.apache.commons.io.serialization.MoreComplexObject.MoreComplexObject(),1,2,2
org.apache.commons.io.serialization.MoreComplexObject.toString(),1,1,1
org.apache.commons.io.serialization.MoreComplexObjectTest.assertSerialization(ObjectInputStream),1,1,1
org.apache.commons.io.serialization.MoreComplexObjectTest.setup(),1,1,1
org.apache.commons.io.serialization.MoreComplexObjectTest.trustJavaIncludingArrays(),1,1,1
org.apache.commons.io.serialization.MoreComplexObjectTest.trustJavaLang(),1,1,1
org.apache.commons.io.serialization.MoreComplexObjectTest.useBlacklist(),1,1,1
org.apache.commons.io.serialization.RegexpClassNameMatcher.RegexpClassNameMatcher(Pattern),2,1,2
org.apache.commons.io.serialization.RegexpClassNameMatcher.RegexpClassNameMatcher(String),1,1,1
org.apache.commons.io.serialization.RegexpClassNameMatcher.matches(String),1,1,1
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testNullPatternPattern(),1,1,1
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testNullStringPattern(),1,1,1
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testOrPattern(),1,1,1
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testSimplePatternFromPattern(),1,1,1
org.apache.commons.io.serialization.RegexpClassNameMatcherTest.testSimplePatternFromString(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.ValidatingObjectInputStream(InputStream),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept(Class<?>...),1,2,2
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept(ClassNameMatcher),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept(Pattern),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.accept(String...),1,2,2
org.apache.commons.io.serialization.ValidatingObjectInputStream.invalidClassNameFound(String),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject(Class<?>...),1,2,2
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject(ClassNameMatcher),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject(Pattern),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.reject(String...),1,2,2
org.apache.commons.io.serialization.ValidatingObjectInputStream.resolveClass(ObjectStreamClass),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStream.validateClassName(String),3,5,6
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptCustomMatcher(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptPattern(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.acceptWildcard(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.assertSerialization(ObjectInputStream),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.customInvalidMethod(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.exceptionIncludesClassName(),1,2,2
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.noAccept(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedFirst(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedFirstWildcard(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecond(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassAcceptedSecondWildcard(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassNotAccepted(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.ourTestClassOnlyAccepted(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.reject(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectCustomMatcher(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectOnly(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPattern(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectPrecedence(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.rejectWildcard(),1,1,1
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest.setup(),1,1,1
org.apache.commons.io.serialization.WildcardClassNameMatcher.WildcardClassNameMatcher(String),1,1,1
org.apache.commons.io.serialization.WildcardClassNameMatcher.matches(String),1,1,1
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.noPattern(),1,1,1
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.star(),1,1,1
org.apache.commons.io.serialization.WildcardClassNameMatcherTest.starAndQuestionMark(),1,1,1
org.apache.commons.io.testtools.TestUtils.TestUtils(),1,1,1
"org.apache.commons.io.testtools.TestUtils.assertEqualContent(File,File)",1,2,2
"org.apache.commons.io.testtools.TestUtils.assertEqualContent(byte[],File)",1,3,4
"org.apache.commons.io.testtools.TestUtils.assertEqualContent(char[],File)",1,3,4
"org.apache.commons.io.testtools.TestUtils.checkFile(File,File)",1,1,1
org.apache.commons.io.testtools.TestUtils.checkWrite(OutputStream),1,2,2
org.apache.commons.io.testtools.TestUtils.checkWrite(Writer),1,2,2
"org.apache.commons.io.testtools.TestUtils.createFile(File,long)",2,1,2
"org.apache.commons.io.testtools.TestUtils.createLineBasedFile(File,String[])",2,3,4
org.apache.commons.io.testtools.TestUtils.deleteFile(File),1,2,2
"org.apache.commons.io.testtools.TestUtils.generateTestData(OutputStream,long)",1,2,2
org.apache.commons.io.testtools.TestUtils.generateTestData(long),1,2,2
"org.apache.commons.io.testtools.TestUtils.newFile(File,String)",1,2,2
org.apache.commons.io.testtools.TestUtils.sleep(long),1,2,2
org.apache.commons.io.testtools.TestUtils.sleepQuietly(long),1,1,2
org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(InputStream),1,1,1
org.apache.commons.io.testtools.YellOnCloseInputStream.close(),1,1,1
"org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(OutputStream,boolean,boolean)",1,1,1
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close(),2,1,2
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(),2,1,2
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(),1,1,1
,,,
Class,OCavg,V,WMC
org.apache.commons.io.ByteOrderMark,2.25,"1,501",18
org.apache.commons.io.ByteOrderMarkTestCase,1,"1,877",9
org.apache.commons.io.ByteOrderUtils,2,312,4
org.apache.commons.io.ByteOrderUtilsTest,1,145,3
org.apache.commons.io.Charsets,1.67,370,5
org.apache.commons.io.CharsetsTestCase,1,470,8
org.apache.commons.io.CopyUtils,1.15,"1,173",15
org.apache.commons.io.CopyUtilsTest,1,"2,009",11
org.apache.commons.io.DemuxTestCase,1.25,"2,165",10
org.apache.commons.io.DemuxTestCase.ReaderThread,1.33,311,4
org.apache.commons.io.DemuxTestCase.WriterThread,1.5,259,3
org.apache.commons.io.DirectoryWalker,1.69,"2,003",27
org.apache.commons.io.DirectoryWalker.CancelException,1,190,4
org.apache.commons.io.DirectoryWalkerTestCase,1.35,"8,140",27
org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker,1.6,408,8
org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder,1,76,2
org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder,1,264,5
org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString,1,171,3
org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker,1.5,477,9
org.apache.commons.io.DirectoryWalkerTestCaseJava4,1.33,"7,154",24
org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker,1.6,408,8
org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder,1,76,2
org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder,1,264,5
org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker,1.5,477,9
org.apache.commons.io.EndianUtils,1.06,"5,529",33
org.apache.commons.io.EndianUtilsTest,1.05,"5,205",23
org.apache.commons.io.FileCleaner,1,263,7
org.apache.commons.io.FileCleanerTestCase,1,19,1
org.apache.commons.io.FileCleaningTracker,1.62,"1,152",13
org.apache.commons.io.FileCleaningTracker.Reaper,2,217,4
org.apache.commons.io.FileCleaningTracker.Tracker,1.33,169,4
org.apache.commons.io.FileCleaningTrackerTestCase,1.5,"4,151",24
org.apache.commons.io.FileDeleteStrategy,1.4,435,7
org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy,1,53,2
org.apache.commons.io.FileDeleteStrategyTestCase,1.5,"1,259",9
org.apache.commons.io.FileExistsException,1,89,3
org.apache.commons.io.FileSystemUtils,3.85,"5,329",50
org.apache.commons.io.FileSystemUtilsTestCase,1.2,"7,090",36
org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils,1.11,343,10
org.apache.commons.io.FileUtils,2.58,"27,159",304
org.apache.commons.io.FileUtilsCleanDirectoryTestCase,1.43,"1,124",10
org.apache.commons.io.FileUtilsCleanSymlinksTestCase,1.8,"2,822",18
org.apache.commons.io.FileUtilsDirectoryContainsTestCase,1,"1,476",12
org.apache.commons.io.FileUtilsFileNewerTestCase,1.5,"1,182",12
org.apache.commons.io.FileUtilsListFilesTestCase,1.29,"2,338",9
org.apache.commons.io.FileUtilsTestCase,1.35,"57,403",205
org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker,1.25,171,5
org.apache.commons.io.FileUtilsTestCase.ShorterFile,1,82,2
org.apache.commons.io.FileUtilsWaitForTestCase,1,237,3
org.apache.commons.io.FilenameUtils,3.85,"11,875",154
org.apache.commons.io.FilenameUtilsTestCase,1.13,"32,919",43
org.apache.commons.io.FilenameUtilsWildcardTestCase,1.25,"4,867",10
org.apache.commons.io.HexDump,3.5,"1,527",14
org.apache.commons.io.HexDumpTest,7.67,"4,894",23
org.apache.commons.io.IOCase,1.75,"1,186",21
org.apache.commons.io.IOCaseTestCase,1.06,"6,655",19
org.apache.commons.io.IOExceptionWithCause,1,74,2
org.apache.commons.io.IOExceptionWithCauseTestCase,1,191,3
org.apache.commons.io.IOUtils,1.8,"18,940",234
org.apache.commons.io.IOUtilsCopyTestCase,1,"4,235",24
org.apache.commons.io.IOUtilsTestCase,1.03,"23,780",137
org.apache.commons.io.IOUtilsWriteTestCase,1,"9,142",53
org.apache.commons.io.LineIterator,2.25,718,18
org.apache.commons.io.LineIteratorTestCase,1.31,"4,297",34
org.apache.commons.io.SelectorAdapter,1,144,9
org.apache.commons.io.TaggedIOException,1.2,290,6
org.apache.commons.io.TaggedIOExceptionTest,1,120,1
org.apache.commons.io.ThreadMonitor,1.5,506,9
org.apache.commons.io.ThreadMonitorTestCase,1,311,3
org.apache.commons.io.comparator.AbstractFileComparator,1.67,113,5
org.apache.commons.io.comparator.ComparatorAbstractTestCase,1,841,8
org.apache.commons.io.comparator.CompositeFileComparator,2.75,695,11
org.apache.commons.io.comparator.CompositeFileComparatorTest,2,"1,086",8
org.apache.commons.io.comparator.DefaultFileComparator,1,104,1
org.apache.commons.io.comparator.DefaultFileComparatorTest,1,89,1
org.apache.commons.io.comparator.DirectoryFileComparator,1.5,176,3
org.apache.commons.io.comparator.DirectoryFileComparatorTest,1,142,3
org.apache.commons.io.comparator.ExtensionFileComparator,1.25,391,5
org.apache.commons.io.comparator.ExtensionFileComparatorTest,1,458,2
org.apache.commons.io.comparator.LastModifiedFileComparator,3,213,3
org.apache.commons.io.comparator.LastModifiedFileComparatorTest,6,600,6
org.apache.commons.io.comparator.NameFileComparator,1.25,351,5
org.apache.commons.io.comparator.NameFileComparatorTest,1,454,2
org.apache.commons.io.comparator.PathFileComparator,1.25,351,5
org.apache.commons.io.comparator.PathFileComparatorTest,1,454,2
org.apache.commons.io.comparator.ReverseComparator,1.33,194,4
org.apache.commons.io.comparator.SizeFileComparator,2.5,587,10
org.apache.commons.io.comparator.SizeFileComparatorTest,2,850,6
org.apache.commons.io.filefilter.AbstractFileFilter,1,106,3
org.apache.commons.io.filefilter.AgeFileFilter,1.25,485,10
org.apache.commons.io.filefilter.AndFileFilter,2.2,"1,034",22
org.apache.commons.io.filefilter.AndFileFilterTestCase,1.09,"3,533",12
org.apache.commons.io.filefilter.CanReadFileFilter,1,126,2
org.apache.commons.io.filefilter.CanWriteFileFilter,1,100,2
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase,1.83,"2,559",11
org.apache.commons.io.filefilter.DelegateFileFilter,2,500,10
org.apache.commons.io.filefilter.DirectoryFileFilter,1,102,2
org.apache.commons.io.filefilter.EmptyFileFilter,1.5,202,3
org.apache.commons.io.filefilter.FalseFileFilter,1,106,3
org.apache.commons.io.filefilter.FileFileFilter,1,78,2
org.apache.commons.io.filefilter.FileFilterTestCase,1.53,"27,808",75
org.apache.commons.io.filefilter.FileFilterUtils,1.4,"2,958",60
org.apache.commons.io.filefilter.HiddenFileFilter,1,100,2
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase,2,"1,930",16
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter,1,208,5
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter,1,200,5
org.apache.commons.io.filefilter.MagicNumberFileFilter,2.33,"1,087",14
org.apache.commons.io.filefilter.NameFileFilter,2.44,"1,046",22
org.apache.commons.io.filefilter.NotFileFilter,1.25,240,5
org.apache.commons.io.filefilter.OrFileFilter,2,942,20
org.apache.commons.io.filefilter.OrFileFilterTestCase,1.09,"3,533",12
org.apache.commons.io.filefilter.PrefixFileFilter,2.44,"1,046",22
org.apache.commons.io.filefilter.RegexFileFilter,2,447,10
org.apache.commons.io.filefilter.RegexFileFilterTestCase,2,"1,032",4
org.apache.commons.io.filefilter.SizeFileFilter,1.75,364,7
org.apache.commons.io.filefilter.SuffixFileFilter,2.44,"1,062",22
org.apache.commons.io.filefilter.TrueFileFilter,1,106,3
org.apache.commons.io.filefilter.WildcardFileFilter,2.44,"1,051",22
org.apache.commons.io.filefilter.WildcardFilter,2.8,580,14
org.apache.commons.io.input.AutoCloseInputStream,1.25,131,5
org.apache.commons.io.input.AutoCloseInputStreamTest,1.83,"1,049",11
org.apache.commons.io.input.BOMInputStream,2.28,"2,532",41
org.apache.commons.io.input.BOMInputStreamTest,1.14,"14,806",64
org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream,1,82,3
org.apache.commons.io.input.BoundedInputStream,1.5,"1,156",21
org.apache.commons.io.input.BoundedInputStreamTest,2.33,"1,151",7
org.apache.commons.io.input.BoundedReader,1.83,711,11
org.apache.commons.io.input.BoundedReaderTest,1.15,"2,030",15
org.apache.commons.io.input.BrokenInputStream,1,175,7
org.apache.commons.io.input.BrokenInputStreamTest,1,479,6
org.apache.commons.io.input.CharSequenceInputStream,2.29,"2,683",32
org.apache.commons.io.input.CharSequenceInputStreamTest,1.48,"5,798",65
org.apache.commons.io.input.CharSequenceReader,2,"1,016",18
org.apache.commons.io.input.CharSequenceReaderTest,1.22,"1,810",11
org.apache.commons.io.input.ClassLoaderObjectInputStream,1.33,327,4
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest,1,"2,000",7
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.E,n/a,4,0
org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.Test,1.5,373,6
org.apache.commons.io.input.CloseShieldInputStream,1,38,2
org.apache.commons.io.input.CloseShieldInputStreamTest,1,225,3
org.apache.commons.io.input.ClosedInputStream,1,34,1
org.apache.commons.io.input.ClosedInputStreamTest,1,55,1
org.apache.commons.io.input.CountingInputStream,1.43,466,10
org.apache.commons.io.input.CountingInputStreamTest,1,"2,511",10
org.apache.commons.io.input.DemuxInputStream,1.67,196,5
org.apache.commons.io.input.InfiniteCircularInputStream,1,129,2
org.apache.commons.io.input.InfiniteCircularInputStreamTest,1.33,448,4
org.apache.commons.io.input.MessageDigestCalculatingInputStream,1,331,4
org.apache.commons.io.input.MessageDigestCalculatingInputStream.MessageDigestMaintainingObserver,1,129,3
org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest,1.5,300,3
org.apache.commons.io.input.NullInputStream,1.94,"1,619",31
org.apache.commons.io.input.NullInputStreamTest,2.17,"3,245",13
org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream,1.25,284,5
org.apache.commons.io.input.NullReader,1.87,"1,453",28
org.apache.commons.io.input.NullReaderTest,2.17,"3,110",13
org.apache.commons.io.input.NullReaderTest.TestNullReader,1.25,284,5
org.apache.commons.io.input.ObservableInputStream,2.07,"1,643",31
org.apache.commons.io.input.ObservableInputStream.Observer,1,100,5
org.apache.commons.io.input.ObservableInputStreamTest,3.5,"1,598",7
org.apache.commons.io.input.ObservableInputStreamTest.LastByteKeepingObserver,1,142,3
org.apache.commons.io.input.ObservableInputStreamTest.LastBytesKeepingObserver,1,146,1
org.apache.commons.io.input.ProxyInputStream,1.15,955,15
org.apache.commons.io.input.ProxyReader,1.21,"1,162",17
org.apache.commons.io.input.ProxyReaderTest,1,355,2
org.apache.commons.io.input.ProxyReaderTest.CustomNullReader,1.67,146,5
org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl,1,24,1
org.apache.commons.io.input.ReaderInputStream,2,"1,785",24
org.apache.commons.io.input.ReaderInputStreamTest,1.6,"1,839",16
org.apache.commons.io.input.ReversedLinesFileReader,2.67,"3,734",16
org.apache.commons.io.input.ReversedLinesFileReader.FilePart,4.4,"1,848",22
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize,1.17,"3,441",27
org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile,1.75,891,7
org.apache.commons.io.input.ReversedLinesFileReaderTestSimple,1,346,4
org.apache.commons.io.input.SwappedDataInputStream,1.12,780,18
org.apache.commons.io.input.SwappedDataInputStreamTest,1.06,"1,157",17
org.apache.commons.io.input.TaggedInputStream,1,147,4
org.apache.commons.io.input.TaggedInputStreamTest,1,"1,039",4
org.apache.commons.io.input.Tailer,1.9,"3,902",38
org.apache.commons.io.input.TailerListenerAdapter,1,41,6
org.apache.commons.io.input.TailerTest,1.73,"7,846",26
org.apache.commons.io.input.TailerTest.TestTailerListener,1,264,8
org.apache.commons.io.input.TeeInputStream,1.67,582,10
org.apache.commons.io.input.TeeInputStreamTest,1,"1,126",8
org.apache.commons.io.input.UnixLineEndingInputStream,2.17,668,13
org.apache.commons.io.input.UnixLineEndingInputStreamTest,1,560,10
org.apache.commons.io.input.WindowsLineEndingInputStream,2.5,755,15
org.apache.commons.io.input.WindowsLineEndingInputStreamTest,1,532,9
org.apache.commons.io.input.XmlStreamReader,3,"8,603",69
org.apache.commons.io.input.XmlStreamReaderException,1,306,7
org.apache.commons.io.input.XmlStreamReaderTest,1.48,"8,871",37
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest,1,"7,929",22
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader,1,53,1
org.apache.commons.io.input.compatibility.XmlStreamReader,3.15,"9,638",82
org.apache.commons.io.input.compatibility.XmlStreamReaderException,1,209,3
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest,1,318,2
org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader,1,53,1
org.apache.commons.io.monitor.AbstractMonitorTestCase,1.6,"1,403",8
org.apache.commons.io.monitor.CollectionFileListener,1.06,532,17
org.apache.commons.io.monitor.FileAlterationListenerAdaptor,1,62,8
org.apache.commons.io.monitor.FileAlterationMonitor,2.08,926,25
org.apache.commons.io.monitor.FileAlterationMonitorTestCase,1.33,"1,543",8
org.apache.commons.io.monitor.FileAlterationObserver,2.35,"3,354",54
org.apache.commons.io.monitor.FileAlterationObserverTestCase,1,"6,673",9
org.apache.commons.io.monitor.FileEntry,1.26,"1,116",24
org.apache.commons.io.output.AppendableOutputStream,1,89,3
org.apache.commons.io.output.AppendableOutputStreamTest,1,141,3
org.apache.commons.io.output.BrokenOutputStream,1,125,5
org.apache.commons.io.output.BrokenOutputStreamTest,1,348,4
org.apache.commons.io.output.ByteArrayOutputStream,2.12,"2,978",36
org.apache.commons.io.output.ByteArrayOutputStreamTestCase,2.25,"2,726",18
org.apache.commons.io.output.ChunkedOutputStream,1.67,336,5
org.apache.commons.io.output.ChunkedOutputStreamTest,1,380,5
org.apache.commons.io.output.ChunkedWriter,1.67,336,5
org.apache.commons.io.output.ChunkedWriterTest,1,422,5
org.apache.commons.io.output.CloseShieldOutputStream,1,38,2
org.apache.commons.io.output.CloseShieldOutputStreamTest,1,228,3
org.apache.commons.io.output.ClosedOutputStream,1,62,1
org.apache.commons.io.output.ClosedOutputStreamTest,1,51,1
org.apache.commons.io.output.CountingOutputStream,1.33,343,8
org.apache.commons.io.output.CountingOutputStreamTest,2.67,"1,219",8
org.apache.commons.io.output.DeferredFileOutputStream,1.67,"1,246",20
org.apache.commons.io.output.DeferredFileOutputStreamTest,1,"3,942",13
org.apache.commons.io.output.DemuxOutputStream,1.75,257,7
org.apache.commons.io.output.FileWriterWithEncoding,1.3,"1,599",26
org.apache.commons.io.output.FileWriterWithEncodingTest,1.19,"2,326",19
org.apache.commons.io.output.LockableFileWriter,1.35,"1,857",27
org.apache.commons.io.output.LockableFileWriterTest,1,"1,427",9
org.apache.commons.io.output.NullOutputStream,1,79,3
org.apache.commons.io.output.NullOutputStreamTest,1,149,1
org.apache.commons.io.output.NullWriter,1,190,11
org.apache.commons.io.output.NullWriterTest,1,158,1
org.apache.commons.io.output.ProxyOutputStream,1.11,579,10
org.apache.commons.io.output.ProxyOutputStreamTest,1.25,226,5
org.apache.commons.io.output.ProxyWriter,1.21,"1,309",17
org.apache.commons.io.output.ProxyWriterTest,1,"2,262",31
org.apache.commons.io.output.StringBuilderWriter,1.25,494,15
org.apache.commons.io.output.StringBuilderWriterTest,1,"1,529",12
org.apache.commons.io.output.TaggedOutputStream,1,144,4
org.apache.commons.io.output.TaggedOutputStreamTest,1,922,3
org.apache.commons.io.output.TeeOutputStream,1,386,6
org.apache.commons.io.output.TeeOutputStreamTest,2,"1,113",8
org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream,1,28,1
org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream,1,43,1
org.apache.commons.io.output.ThresholdingOutputStream,1.08,710,13
org.apache.commons.io.output.ThresholdingOutputStreamTest,1,171,3
org.apache.commons.io.output.WriterOutputStream,1.6,"2,027",24
org.apache.commons.io.output.WriterOutputStreamTest,1.36,"1,452",19
org.apache.commons.io.output.XmlStreamWriter,2.2,"1,387",22
org.apache.commons.io.output.XmlStreamWriterTest,1.19,"1,331",19
org.apache.commons.io.serialization.ClosingBase,1.33,118,4
org.apache.commons.io.serialization.FullClassNameMatcher,1,72,2
org.apache.commons.io.serialization.FullClassNameMatcherTest,1,133,2
org.apache.commons.io.serialization.MockSerializedClass,1.33,147,4
org.apache.commons.io.serialization.MoreComplexObject,1.5,307,3
org.apache.commons.io.serialization.MoreComplexObjectTest,1,410,5
org.apache.commons.io.serialization.RegexpClassNameMatcher,1.33,138,4
org.apache.commons.io.serialization.RegexpClassNameMatcherTest,1,228,5
org.apache.commons.io.serialization.ValidatingObjectInputStream,1.75,754,21
org.apache.commons.io.serialization.ValidatingObjectInputStreamTest,1,"1,535",23
org.apache.commons.io.serialization.WildcardClassNameMatcher,1,60,2
org.apache.commons.io.serialization.WildcardClassNameMatcherTest,1,187,3
org.apache.commons.io.testtools.TestUtils,1.8,"2,712",27
org.apache.commons.io.testtools.YellOnCloseInputStream,1,50,2
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream,1.5,220,6
,,,
Package,v(G)avg,v(G)tot,
org.apache.commons.io,1.9,"2,162",
org.apache.commons.io.comparator,1.64,92,
org.apache.commons.io.filefilter,1.89,481,
org.apache.commons.io.input,1.79,"1,162",
org.apache.commons.io.input.compatibility,4.47,143,
org.apache.commons.io.monitor,1.71,168,
org.apache.commons.io.output,1.55,522,
org.apache.commons.io.serialization,1.24,78,
org.apache.commons.io.testtools,2,42,
,,,
Module,LOC,v(G)avg,v(G)tot
commons-io,"55,719",1.83,"4,850"
,,,
FileType,LOC,,
HTML,542,,
Java,"50,005",,
Text,"1,438",,
XML,"3,711",,
YAML,23,,
,,,
Project,LOC,v(G)avg,v(G)tot
project,"55,719",1.83,"4,850"
,,,
,,,
MI,65.84537563,,
