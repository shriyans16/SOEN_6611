Complexity metrics,Wed, 17 Apr 2019 18:56:46 EDT,
Method,ev(G),iv(G),v(G)
"null.compare(Phoneme,Phoneme)",5,2,5
"null.compare(Rule,Rule)",1,1,1
null.contains(String),1,1,1
null.getAny(),1,1,1
null.isEmpty(),1,1,1
null.isMatch(CharSequence),1,1,1
null.isSingleton(),1,1,1
null.merge(LanguageSet),1,1,1
null.restrictTo(LanguageSet),1,1,1
null.toString(),1,1,1
org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeEmpty(),1,1,1
org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull(),1,1,2
org.apache.commons.codec.CharEncodingTest.testConstructor(),1,1,1
org.apache.commons.codec.CharEncodingTest.testIso8859_1(),1,1,1
org.apache.commons.codec.CharEncodingTest.testUsAscii(),1,1,1
org.apache.commons.codec.CharEncodingTest.testUtf16(),1,1,1
org.apache.commons.codec.CharEncodingTest.testUtf16Be(),1,1,1
org.apache.commons.codec.CharEncodingTest.testUtf16Le(),1,1,1
org.apache.commons.codec.CharEncodingTest.testUtf8(),1,1,1
org.apache.commons.codec.Charsets.toCharset(Charset),1,2,2
org.apache.commons.codec.Charsets.toCharset(String),1,2,2
org.apache.commons.codec.CharsetsTest.testIso8859_1(),1,1,1
org.apache.commons.codec.CharsetsTest.testToCharset(),1,1,1
org.apache.commons.codec.CharsetsTest.testUsAscii(),1,1,1
org.apache.commons.codec.CharsetsTest.testUtf16(),1,1,1
org.apache.commons.codec.CharsetsTest.testUtf16Be(),1,1,1
org.apache.commons.codec.CharsetsTest.testUtf16Le(),1,1,1
org.apache.commons.codec.CharsetsTest.testUtf8(),1,1,1
org.apache.commons.codec.DecoderException.DecoderException(),1,1,1
org.apache.commons.codec.DecoderException.DecoderException(String),1,1,1
"org.apache.commons.codec.DecoderException.DecoderException(String,Throwable)",1,1,1
org.apache.commons.codec.DecoderException.DecoderException(Throwable),1,1,1
org.apache.commons.codec.DecoderExceptionTest.testConstructor0(),1,1,1
org.apache.commons.codec.DecoderExceptionTest.testConstructorString(),1,1,1
org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable(),1,1,1
org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable(),1,1,1
org.apache.commons.codec.EncoderException.EncoderException(),1,1,1
org.apache.commons.codec.EncoderException.EncoderException(String),1,1,1
"org.apache.commons.codec.EncoderException.EncoderException(String,Throwable)",1,1,1
org.apache.commons.codec.EncoderException.EncoderException(Throwable),1,1,1
org.apache.commons.codec.EncoderExceptionTest.testConstructor0(),1,1,1
org.apache.commons.codec.EncoderExceptionTest.testConstructorString(),1,1,1
org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable(),1,1,1
org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable(),1,1,1
org.apache.commons.codec.Resources.getInputStream(String),2,1,2
"org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding(String,String)",1,1,1
"org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations(String,String[])",1,2,2
org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings(String[][]),1,2,2
org.apache.commons.codec.StringEncoderAbstractTest.getStringEncoder(),1,1,1
org.apache.commons.codec.StringEncoderAbstractTest.testEncodeEmpty(),1,1,1
org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull(),1,1,2
org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject(),1,1,2
org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence(),1,5,5
org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator(),1,1,1
org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator(StringEncoder),1,1,1
"org.apache.commons.codec.StringEncoderComparator.compare(Object,Object)",1,1,2
org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone(),1,2,2
org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput(),1,1,1
org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex(),1,1,1
org.apache.commons.codec.binary.Base32.Base32(),1,1,1
org.apache.commons.codec.binary.Base32.Base32(boolean),1,1,1
"org.apache.commons.codec.binary.Base32.Base32(boolean,byte)",1,1,1
org.apache.commons.codec.binary.Base32.Base32(byte),1,1,1
org.apache.commons.codec.binary.Base32.Base32(int),1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int,byte[])",1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean)",1,1,1
"org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean,byte)",5,4,8
"org.apache.commons.codec.binary.Base32.decode(byte[],int,int,Context)",6,4,18
"org.apache.commons.codec.binary.Base32.encode(byte[],int,int,Context)",5,7,18
org.apache.commons.codec.binary.Base32.isInAlphabet(byte),1,1,3
org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream),1,1,1
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean,int,byte[])",1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream(int),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk(),1,2,2
org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte(),1,2,2
"org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk(byte[],byte[],int,byte[])",1,1,2
"org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte(byte[],byte[],int,byte[])",1,4,5
org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105(),1,2,2
org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull(),1,1,2
org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds(),1,1,5
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd(),1,1,1
org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument(),1,1,1
org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream),1,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean,int,byte[])",1,1,1
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream(int),1,1,1
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize(),1,1,1
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize(),1,1,1
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk(),1,2,2
org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte(),1,2,2
"org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk(byte[],byte[],int,byte[])",1,1,2
"org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte(byte[],byte[],int,byte[])",1,5,6
org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds(),1,1,5
org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage(),1,1,2
org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples(),1,2,3
org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(),1,2,2
org.apache.commons.codec.binary.Base32Test.testBase32Chunked(),1,2,2
org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(),1,2,2
org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(),1,2,2
org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverseLowercase(),1,2,2
org.apache.commons.codec.binary.Base32Test.testBase32Samples(),1,2,2
org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding(),1,2,2
org.apache.commons.codec.binary.Base32Test.testBase64AtBufferEnd(),1,1,1
org.apache.commons.codec.binary.Base32Test.testBase64AtBufferMiddle(),1,1,1
org.apache.commons.codec.binary.Base32Test.testBase64AtBufferStart(),1,1,1
"org.apache.commons.codec.binary.Base32Test.testBase64InBuffer(int,int)",1,2,2
org.apache.commons.codec.binary.Base32Test.testCodec200(),1,1,1
org.apache.commons.codec.binary.Base32Test.testRandomBytes(),1,2,2
org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(),1,2,2
org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(),1,2,2
org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding(),1,4,4
"org.apache.commons.codec.binary.Base32TestData.bytesContain(byte[],byte)",3,1,3
"org.apache.commons.codec.binary.Base32TestData.fill(byte[],int,InputStream)",1,2,5
"org.apache.commons.codec.binary.Base32TestData.randomData(BaseNCodec,int)",1,1,1
org.apache.commons.codec.binary.Base32TestData.resizeArray(byte[]),1,1,1
org.apache.commons.codec.binary.Base32TestData.streamToBytes(InputStream),1,1,1
"org.apache.commons.codec.binary.Base32TestData.streamToBytes(InputStream,byte[])",1,3,3
org.apache.commons.codec.binary.Base64.Base64(),1,1,1
org.apache.commons.codec.binary.Base64.Base64(boolean),1,1,1
org.apache.commons.codec.binary.Base64.Base64(int),1,1,1
"org.apache.commons.codec.binary.Base64.Base64(int,byte[])",1,1,1
"org.apache.commons.codec.binary.Base64.Base64(int,byte[],boolean)",3,4,6
"org.apache.commons.codec.binary.Base64.decode(byte[],int,int,Context)",6,4,15
org.apache.commons.codec.binary.Base64.decodeBase64(String),1,1,1
org.apache.commons.codec.binary.Base64.decodeBase64(byte[]),1,1,1
org.apache.commons.codec.binary.Base64.decodeInteger(byte[]),1,1,1
"org.apache.commons.codec.binary.Base64.encode(byte[],int,int,Context)",5,7,18
org.apache.commons.codec.binary.Base64.encodeBase64(byte[]),1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean)",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean)",1,1,1
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)",3,1,5
org.apache.commons.codec.binary.Base64.encodeBase64Chunked(byte[]),1,1,1
org.apache.commons.codec.binary.Base64.encodeBase64String(byte[]),1,1,1
org.apache.commons.codec.binary.Base64.encodeBase64URLSafe(byte[]),1,1,1
org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(byte[]),1,1,1
org.apache.commons.codec.binary.Base64.encodeInteger(BigInteger),2,1,2
org.apache.commons.codec.binary.Base64.isArrayByteBase64(byte[]),1,1,1
org.apache.commons.codec.binary.Base64.isBase64(String),1,1,1
org.apache.commons.codec.binary.Base64.isBase64(byte),1,1,4
org.apache.commons.codec.binary.Base64.isBase64(byte[]),3,3,4
org.apache.commons.codec.binary.Base64.isInAlphabet(byte),1,1,3
org.apache.commons.codec.binary.Base64.isUrlSafe(),1,1,1
org.apache.commons.codec.binary.Base64.toIntegerBytes(BigInteger),2,2,4
org.apache.commons.codec.binary.Base64Codec13Test.initBYTES(),1,1,1
org.apache.commons.codec.binary.Base64Codec13Test.initCHUNKED_STRINGS(),1,1,1
org.apache.commons.codec.binary.Base64Codec13Test.initSTRINGS(),1,1,1
org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.testDecoder(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.testEncoder(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked(),1,3,3
org.apache.commons.codec.binary.Base64Codec13Test.utf8(String),1,2,2
org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream),1,1,1
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean,int,byte[])",1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream(int),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk(),1,2,2
org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte(),1,2,2
"org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk(byte[],byte[],int,byte[])",1,1,2
"org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte(byte[],byte[],int,byte[])",1,4,5
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105(),1,2,2
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testRead0(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull(),1,1,2
org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds(),1,1,5
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd(),1,1,1
org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument(),1,1,1
org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream),1,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean)",1,1,1
"org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean,int,byte[])",1,1,1
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream(int),1,1,1
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize(),1,1,1
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize(),1,1,1
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk(),1,2,2
org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte(),1,2,2
"org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk(byte[],byte[],int,byte[])",1,1,2
"org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte(byte[],byte[],int,byte[])",1,5,6
org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(),1,1,1
org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds(),1,1,5
org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage(),1,1,2
org.apache.commons.codec.binary.Base64Test.getRandom(),1,1,1
org.apache.commons.codec.binary.Base64Test.testBase64(),1,1,1
org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(),1,1,1
org.apache.commons.codec.binary.Base64Test.testBase64AtBufferMiddle(),1,1,1
org.apache.commons.codec.binary.Base64Test.testBase64AtBufferStart(),1,1,1
"org.apache.commons.codec.binary.Base64Test.testBase64InBuffer(int,int)",1,1,1
org.apache.commons.codec.binary.Base64Test.testByteToStringVariations(),1,1,1
org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76(),1,1,1
org.apache.commons.codec.binary.Base64Test.testCodeInteger1(),1,1,1
org.apache.commons.codec.binary.Base64Test.testCodeInteger2(),1,1,1
org.apache.commons.codec.binary.Base64Test.testCodeInteger3(),1,1,1
org.apache.commons.codec.binary.Base64Test.testCodeInteger4(),1,1,1
org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases(),1,1,1
org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull(),1,2,3
org.apache.commons.codec.binary.Base64Test.testCodec112(),1,1,1
org.apache.commons.codec.binary.Base64Test.testCodec68(),1,1,1
org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(),1,1,1
org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe(),1,1,1
org.apache.commons.codec.binary.Base64Test.testConstructors(),1,1,5
org.apache.commons.codec.binary.Base64Test.testDecodeEncode(String),1,1,1
org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2(),1,1,1
org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3(),1,1,1
org.apache.commons.codec.binary.Base64Test.testDecodePadOnly(),1,1,1
org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked(),1,1,1
org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(),1,1,1
org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace(),1,1,1
org.apache.commons.codec.binary.Base64Test.testEmptyBase64(),1,1,1
org.apache.commons.codec.binary.Base64Test.testEncodeDecode(String),1,1,1
org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom(),1,2,2
org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall(),1,2,2
org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize(),1,1,1
org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize(int),1,1,2
org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator(),1,1,1
org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode(),1,1,1
org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(),1,1,1
org.apache.commons.codec.binary.Base64Test.testIsStringBase64(),1,2,2
org.apache.commons.codec.binary.Base64Test.testIsUrlSafe(),1,1,1
org.apache.commons.codec.binary.Base64Test.testKnownDecodings(),1,1,1
org.apache.commons.codec.binary.Base64Test.testKnownEncodings(),1,1,1
org.apache.commons.codec.binary.Base64Test.testNonBase64Test(),1,2,2
org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter(),1,1,2
org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter(),1,1,1
org.apache.commons.codec.binary.Base64Test.testObjectEncode(),1,1,1
org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter(),1,1,2
org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter(),1,1,1
org.apache.commons.codec.binary.Base64Test.testPairs(),1,2,2
org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition(),1,1,1
org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition(),1,1,1
org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition(),1,1,1
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode(),1,1,1
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode(),1,1,1
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf(),1,1,1
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(),1,1,1
org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode(),1,1,1
org.apache.commons.codec.binary.Base64Test.testSingletons(),1,2,2
org.apache.commons.codec.binary.Base64Test.testSingletonsChunked(),1,1,1
org.apache.commons.codec.binary.Base64Test.testStringToByteVariations(),1,1,1
org.apache.commons.codec.binary.Base64Test.testTriplets(),1,1,1
org.apache.commons.codec.binary.Base64Test.testTripletsChunked(),1,1,1
org.apache.commons.codec.binary.Base64Test.testUUID(),1,2,2
org.apache.commons.codec.binary.Base64Test.testUrlSafe(),1,2,2
org.apache.commons.codec.binary.Base64Test.toString(byte[]),1,3,3
"org.apache.commons.codec.binary.Base64TestData.bytesContain(byte[],byte)",3,1,3
"org.apache.commons.codec.binary.Base64TestData.fill(byte[],int,InputStream)",1,2,5
"org.apache.commons.codec.binary.Base64TestData.randomData(int,boolean)",1,2,2
org.apache.commons.codec.binary.Base64TestData.resizeArray(byte[]),1,1,1
org.apache.commons.codec.binary.Base64TestData.streamToBytes(InputStream),1,1,1
"org.apache.commons.codec.binary.Base64TestData.streamToBytes(InputStream,byte[])",1,3,3
"org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int)",1,1,1
"org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int,byte)",1,1,3
org.apache.commons.codec.binary.BaseNCodec.Context.Context(),1,1,1
org.apache.commons.codec.binary.BaseNCodec.Context.toString(),1,1,1
org.apache.commons.codec.binary.BaseNCodec.available(Context),1,1,2
org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[]),4,3,5
org.apache.commons.codec.binary.BaseNCodec.decode(Object),3,3,3
org.apache.commons.codec.binary.BaseNCodec.decode(String),1,1,1
org.apache.commons.codec.binary.BaseNCodec.decode(byte[]),2,1,3
org.apache.commons.codec.binary.BaseNCodec.encode(Object),2,1,2
org.apache.commons.codec.binary.BaseNCodec.encode(byte[]),2,1,3
"org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int)",2,1,3
org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[]),1,1,1
org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[]),1,1,1
"org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,Context)",2,2,3
org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize(),1,1,1
org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[]),1,1,2
org.apache.commons.codec.binary.BaseNCodec.hasData(Context),1,1,1
org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(String),1,1,1
"org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)",3,5,6
org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte),3,2,3
"org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,Context)",2,2,4
org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(Context),1,2,2
"org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream(InputStream,BaseNCodec,boolean)",1,1,1
org.apache.commons.codec.binary.BaseNCodecInputStream.available(),1,1,2
org.apache.commons.codec.binary.BaseNCodecInputStream.mark(int),1,1,1
org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported(),1,1,1
org.apache.commons.codec.binary.BaseNCodecInputStream.read(),2,2,4
"org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)",5,8,11
org.apache.commons.codec.binary.BaseNCodecInputStream.reset(),1,1,1
org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long),4,2,4
"org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream(OutputStream,BaseNCodec,boolean)",1,1,1
org.apache.commons.codec.binary.BaseNCodecOutputStream.close(),1,1,1
org.apache.commons.codec.binary.BaseNCodecOutputStream.eof(),1,2,2
org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(),1,1,1
org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean),1,4,4
"org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)",4,6,8
org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int),1,1,1
org.apache.commons.codec.binary.BaseNCodecTest.setUp(),1,1,2
org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec(),1,1,1
org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad(),1,1,1
org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte(),1,1,1
org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean(),1,1,1
org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString(),1,1,1
org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace(),1,1,1
org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte(),1,1,2
org.apache.commons.codec.binary.BinaryCodec.decode(Object),5,4,5
org.apache.commons.codec.binary.BinaryCodec.decode(byte[]),1,1,1
org.apache.commons.codec.binary.BinaryCodec.encode(Object),2,1,2
org.apache.commons.codec.binary.BinaryCodec.encode(byte[]),1,1,1
org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[]),2,1,5
org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[]),2,1,6
org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[]),1,1,2
org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[]),2,1,5
org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[]),2,1,5
org.apache.commons.codec.binary.BinaryCodec.toAsciiString(byte[]),1,1,1
org.apache.commons.codec.binary.BinaryCodec.toByteArray(String),2,1,2
"org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject(byte[],String)",1,3,3
org.apache.commons.codec.binary.BinaryCodecTest.setUp(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.tearDown(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException(),1,1,2
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException(),1,1,2
org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString(),1,1,1
org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString(),1,1,1
"org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)",6,4,8
org.apache.commons.codec.binary.Codec105ErrorInputStream.read(),2,1,2
"org.apache.commons.codec.binary.Codec105ErrorInputStream.read(byte[],int,int)",2,1,2
org.apache.commons.codec.binary.Hex.Hex(),1,1,1
org.apache.commons.codec.binary.Hex.Hex(Charset),1,1,1
org.apache.commons.codec.binary.Hex.Hex(String),1,1,1
org.apache.commons.codec.binary.Hex.decode(ByteBuffer),1,1,1
org.apache.commons.codec.binary.Hex.decode(Object),4,5,5
org.apache.commons.codec.binary.Hex.decode(byte[]),1,1,1
org.apache.commons.codec.binary.Hex.decodeHex(String),1,1,1
org.apache.commons.codec.binary.Hex.decodeHex(char[]),2,2,3
org.apache.commons.codec.binary.Hex.encode(ByteBuffer),1,1,1
org.apache.commons.codec.binary.Hex.encode(Object),3,4,4
org.apache.commons.codec.binary.Hex.encode(byte[]),1,1,1
org.apache.commons.codec.binary.Hex.encodeHex(ByteBuffer),1,1,1
"org.apache.commons.codec.binary.Hex.encodeHex(ByteBuffer,boolean)",1,1,2
"org.apache.commons.codec.binary.Hex.encodeHex(ByteBuffer,char[])",1,1,1
org.apache.commons.codec.binary.Hex.encodeHex(byte[]),1,1,1
"org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean)",1,1,2
"org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])",1,1,2
org.apache.commons.codec.binary.Hex.encodeHexString(ByteBuffer),1,1,1
"org.apache.commons.codec.binary.Hex.encodeHexString(ByteBuffer,boolean)",1,1,1
org.apache.commons.codec.binary.Hex.encodeHexString(byte[]),1,1,1
"org.apache.commons.codec.binary.Hex.encodeHexString(byte[],boolean)",1,1,1
org.apache.commons.codec.binary.Hex.getCharset(),1,1,1
org.apache.commons.codec.binary.Hex.getCharsetName(),1,1,1
"org.apache.commons.codec.binary.Hex.toDigit(char,int)",2,1,2
org.apache.commons.codec.binary.Hex.toString(),1,1,1
org.apache.commons.codec.binary.HexTest.charsetSanityCheck(String),1,6,6
org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters(String),1,1,2
org.apache.commons.codec.binary.HexTest.checkDecodeHexCharArrayOddCharacters(char[]),1,1,2
org.apache.commons.codec.binary.HexTest.log(String),1,2,2
org.apache.commons.codec.binary.HexTest.log(Throwable),1,2,2
org.apache.commons.codec.binary.HexTest.testCustomCharset(),1,2,2
"org.apache.commons.codec.binary.HexTest.testCustomCharset(String,String)",2,1,2
org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName(),1,1,1
org.apache.commons.codec.binary.HexTest.testCustomCharsetToString(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0(),1,1,2
org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1(),1,1,2
org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeByteArrayOddCharacters(),1,1,2
org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeByteBufferOddCharacters(),1,1,2
org.apache.commons.codec.binary.HexTest.testDecodeClassCastException(),1,1,2
org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters1(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters3(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeHexCharArrayOddCharacters5(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters(),1,1,2
org.apache.commons.codec.binary.HexTest.testDecodeHexStringOddCharacters1(),1,1,1
org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeByteBufferObjectEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeClassCastException(),1,1,2
org.apache.commons.codec.binary.HexTest.testEncodeDecodeHexCharArrayRandom(),1,2,2
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldUpperCaseHex(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayZeroes(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldUpperCaseHex(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToUpperCase(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayOfZeroes(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToUpperCase(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferOfZeroes(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeHex_ByteBufferOfZeroes(),1,1,1
org.apache.commons.codec.binary.HexTest.testEncodeStringEmpty(),1,1,1
org.apache.commons.codec.binary.HexTest.testGetCharset(),1,1,1
org.apache.commons.codec.binary.HexTest.testGetCharsetName(),1,1,1
org.apache.commons.codec.binary.HexTest.testRequiredCharset(),1,1,1
"org.apache.commons.codec.binary.StringUtils.equals(CharSequence,CharSequence)",4,3,7
"org.apache.commons.codec.binary.StringUtils.getByteBuffer(String,Charset)",2,1,2
org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8(String),1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytes(String,Charset)",2,1,2
org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(String),1,1,1
"org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String,String)",2,2,3
org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(String),1,1,1
org.apache.commons.codec.binary.StringUtils.getBytesUtf16(String),1,1,1
org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(String),1,1,1
org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(String),1,1,1
org.apache.commons.codec.binary.StringUtils.getBytesUtf8(String),1,1,1
"org.apache.commons.codec.binary.StringUtils.newIllegalStateException(String,UnsupportedEncodingException)",1,1,1
"org.apache.commons.codec.binary.StringUtils.newString(byte[],Charset)",1,1,2
"org.apache.commons.codec.binary.StringUtils.newString(byte[],String)",2,2,3
org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[]),1,1,1
org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[]),1,1,1
org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[]),1,1,1
org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[]),1,1,1
org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[]),1,1,1
org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[]),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testConstructor(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testEqualsString(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked(String),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName(),1,1,2
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewString(String),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc(),1,1,2
org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le(),1,1,1
org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8(),1,1,1
org.apache.commons.codec.cli.Digest.Digest(String[]),3,3,4
org.apache.commons.codec.cli.Digest.main(String[]),1,1,1
"org.apache.commons.codec.cli.Digest.println(String,byte[])",1,1,1
"org.apache.commons.codec.cli.Digest.println(String,byte[],String)",1,1,2
org.apache.commons.codec.cli.Digest.run(),2,4,4
"org.apache.commons.codec.cli.Digest.run(String,MessageDigest)",2,6,6
"org.apache.commons.codec.cli.Digest.run(String,MessageDigest,File[])",1,3,3
"org.apache.commons.codec.cli.Digest.run(String,String)",1,1,1
org.apache.commons.codec.cli.Digest.run(String[]),1,3,3
org.apache.commons.codec.cli.Digest.toString(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytesWithThreadLocalRandom(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt(),1,1,1
org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt(),1,1,1
"org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,StringBuilder)",1,2,2
org.apache.commons.codec.digest.B64.getRandomSalt(int),1,1,1
"org.apache.commons.codec.digest.B64.getRandomSalt(int,Random)",1,2,2
org.apache.commons.codec.digest.B64Test.testB64T(),1,1,1
org.apache.commons.codec.digest.B64Test.testB64from24bit(),1,1,1
org.apache.commons.codec.digest.Crypt.crypt(String),1,1,1
"org.apache.commons.codec.digest.Crypt.crypt(String,String)",1,1,1
org.apache.commons.codec.digest.Crypt.crypt(byte[]),1,1,1
"org.apache.commons.codec.digest.Crypt.crypt(byte[],String)",5,5,5
org.apache.commons.codec.digest.CryptTest.testCrypt(),1,1,1
org.apache.commons.codec.digest.CryptTest.testCryptWithBytes(),1,1,1
org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt(),1,1,1
org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant(),1,1,1
org.apache.commons.codec.digest.DigestUtils.DigestUtils(),1,1,1
org.apache.commons.codec.digest.DigestUtils.DigestUtils(MessageDigest),1,1,1
org.apache.commons.codec.digest.DigestUtils.DigestUtils(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.digest(ByteBuffer),1,1,1
org.apache.commons.codec.digest.DigestUtils.digest(File),1,1,1
org.apache.commons.codec.digest.DigestUtils.digest(InputStream),1,1,1
"org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,ByteBuffer)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,File)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,InputStream)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,byte[])",1,1,1
org.apache.commons.codec.digest.DigestUtils.digest(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.digest(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.digestAsHex(ByteBuffer),1,1,1
org.apache.commons.codec.digest.DigestUtils.digestAsHex(File),1,1,1
org.apache.commons.codec.digest.DigestUtils.digestAsHex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.digestAsHex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.digestAsHex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.getDigest(String),1,1,2
"org.apache.commons.codec.digest.DigestUtils.getDigest(String,MessageDigest)",1,1,2
org.apache.commons.codec.digest.DigestUtils.getMd2Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getMd5Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getMessageDigest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha1Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha256Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha384Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha3_224Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha3_256Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha3_384Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha3_512Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getSha512Digest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.getShaDigest(),1,1,1
org.apache.commons.codec.digest.DigestUtils.isAvailable(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.md2(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.md2(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.md2(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.md2Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.md2Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.md2Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.md5(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.md5(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.md5(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.md5Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.md5Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha1(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha1(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha1(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha1Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha1Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha256(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha256(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha256(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha256Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha256Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha256Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha384(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha384(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha384(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha384Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha384Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha384Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_224(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_224(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_224(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_224Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_224Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_224Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_256(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_256(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_256(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_256Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_256Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_256Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_384(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_384(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_384(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_384Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_384Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_384Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_512(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_512(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_512(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_512Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_512Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha3_512Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha512(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha512(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha512(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha512Hex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha512Hex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.sha512Hex(byte[]),1,1,1
org.apache.commons.codec.digest.DigestUtils.shaHex(InputStream),1,1,1
org.apache.commons.codec.digest.DigestUtils.shaHex(String),1,1,1
org.apache.commons.codec.digest.DigestUtils.shaHex(byte[]),1,1,1
"org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,ByteBuffer)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,File)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,InputStream)",1,2,2
"org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,String)",1,1,1
"org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,byte[])",1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.assumeJava8(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.assumeJava9(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.getTestData(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.getTestFile(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.setUp(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.tearDown(),1,2,2
org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha224(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha256(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha384(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_224HexInputStream(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_256HexInputStream(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_384HexInputStream(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha3_512HexInputStream(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha512(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray(),1,1,1
org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithms.HmacAlgorithms(String),1,1,1
org.apache.commons.codec.digest.HmacAlgorithms.getName(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithms.toString(),1,1,1
"org.apache.commons.codec.digest.HmacAlgorithmsTest.HmacAlgorithmsTest(HmacAlgorithms,byte[],String)",1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.data(),1,2,2
org.apache.commons.codec.digest.HmacAlgorithmsTest.setUp(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.tearDown(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacEmptyKey(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testGetHmacNullKey(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailByteArray(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailInputStream(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacFailString(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailByteArray(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailInputStream(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testHmacHexFailString(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testInitializedMac(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacByteArary(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexByteArray(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexInputStream(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacHexString(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacInputStream(),1,1,1
org.apache.commons.codec.digest.HmacAlgorithmsTest.testMacString(),1,1,1
org.apache.commons.codec.digest.HmacUtils.HmacUtils(),1,1,1
"org.apache.commons.codec.digest.HmacUtils.HmacUtils(HmacAlgorithms,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.HmacUtils(HmacAlgorithms,byte[])",1,1,1
org.apache.commons.codec.digest.HmacUtils.HmacUtils(Mac),1,1,1
"org.apache.commons.codec.digest.HmacUtils.HmacUtils(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.HmacUtils(String,byte[])",1,1,1
org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[]),1,1,1
org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[]),1,1,1
org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[]),1,1,1
org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[]),1,1,1
org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[]),1,1,1
"org.apache.commons.codec.digest.HmacUtils.getInitializedMac(HmacAlgorithms,byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.getInitializedMac(String,byte[])",2,1,4
org.apache.commons.codec.digest.HmacUtils.hmac(ByteBuffer),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmac(File),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmac(InputStream),1,2,2
org.apache.commons.codec.digest.HmacUtils.hmac(String),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmac(byte[]),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmacHex(ByteBuffer),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmacHex(File),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmacHex(InputStream),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmacHex(String),1,1,1
org.apache.commons.codec.digest.HmacUtils.hmacHex(byte[]),1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacMd5(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha1(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha256(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha384(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha512(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],byte[])",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(String,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],InputStream)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],byte[])",1,1,1
org.apache.commons.codec.digest.HmacUtils.isAvailable(HmacAlgorithms),1,1,2
org.apache.commons.codec.digest.HmacUtils.isAvailable(String),1,1,2
"org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,InputStream)",1,2,2
"org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,String)",1,1,1
"org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,byte[])",1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testNullKey(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac(),1,1,1
org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail(),1,1,1
org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String),1,1,1
"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String,String)",1,1,1
org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[]),1,1,1
"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],Random)",1,1,1
"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],String)",1,2,3
org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[]),1,1,1
"org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],Random)",1,1,1
"org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],String)",1,1,1
"org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],String,String)",1,1,1
"org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],String,String,Random)",3,10,12
org.apache.commons.codec.digest.Md5CryptTest.testCtor(),1,1,1
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes(),1,1,1
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall(),1,1,1
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom(),1,1,1
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(),1,1,1
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData(),1,1,1
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings(),1,1,1
org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithms.MessageDigestAlgorithms(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithms.values(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.MessageDigestAlgorithmsTest(String),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.checkValues(),1,8,8
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.contains(String),3,2,3
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.data(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.digestTestData(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.getTestData(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.getTestFile(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.setUp(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.tearDown(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteArray(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestInputStream(),1,1,1
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testGetMessageDigest(),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32.PureJavaCrc32(),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32._reset(),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32.getValue(),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32.reset(),1,1,1
"org.apache.commons.codec.digest.PureJavaCrc32.update(byte[],int,int)",2,2,10
org.apache.commons.codec.digest.PureJavaCrc32.update(int),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32C.PureJavaCrc32C(),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32C.getValue(),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32C.reset(),1,1,1
"org.apache.commons.codec.digest.PureJavaCrc32C.update(byte[],int,int)",2,2,10
org.apache.commons.codec.digest.PureJavaCrc32C.update(int),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32CTest.check(int),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(),1,1,2
org.apache.commons.codec.digest.PureJavaCrc32CTest.testIncreasing(),1,1,2
org.apache.commons.codec.digest.PureJavaCrc32CTest.testOnes(),1,1,2
org.apache.commons.codec.digest.PureJavaCrc32CTest.testZeros(),1,1,2
"org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.BenchResult.BenchResult(long,double)",1,1,1
"org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.doBench(Class<? extends Checksum>,int,byte[],int)",3,7,7
"org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.doBench(List<Class<? extends Checksum>>,PrintStream)",1,3,3
"org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.doBench(List<Class<? extends Checksum>>,byte[],int,PrintStream)",6,8,9
org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.main(String[]),1,1,1
"org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.printCell(String,int,PrintStream)",1,2,2
org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.printSystemProperties(PrintStream),1,2,2
"org.apache.commons.codec.digest.PureJavaCrc32Test.Table.Table(int,int,long)",1,1,7
org.apache.commons.codec.digest.PureJavaCrc32Test.Table.main(String[]),1,2,2
org.apache.commons.codec.digest.PureJavaCrc32Test.Table.toString(),1,3,3
org.apache.commons.codec.digest.PureJavaCrc32Test.Table.toStrings(String),1,4,4
"org.apache.commons.codec.digest.PureJavaCrc32Test.checkOnBytes(byte[],boolean)",1,5,5
org.apache.commons.codec.digest.PureJavaCrc32Test.checkSame(),1,1,1
org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(),1,2,2
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes(),1,1,1
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall(),1,1,1
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData(),1,1,1
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings(),1,1,1
org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt(),1,1,1
org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize(),1,1,1
org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds(),1,1,1
org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(),1,1,1
org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[]),1,1,1
"org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],String)",1,2,2
"org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],String,Random)",1,2,2
"org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],String,String,int,String)",3,16,18
org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[]),1,1,1
"org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],String)",1,2,2
"org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],String,Random)",1,2,2
org.apache.commons.codec.digest.Sha2CryptTest.testCtor(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullSalt(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings(),1,1,1
org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt(),1,1,1
"org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)",1,3,3
org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte),1,1,2
org.apache.commons.codec.digest.UnixCrypt.crypt(String),1,1,1
"org.apache.commons.codec.digest.UnixCrypt.crypt(String,String)",1,1,1
org.apache.commons.codec.digest.UnixCrypt.crypt(byte[]),1,1,1
"org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],String)",3,4,10
"org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])",1,1,1
org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[]),1,1,3
"org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(byte[],int)",1,1,1
"org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)",1,1,1
"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(int,byte[],int)",1,1,1
"org.apache.commons.codec.digest.UnixCrypt.permOp(int,int,int,int,int[])",1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testCtor(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt(),1,1,1
org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt(),1,1,1
org.apache.commons.codec.digest.XXHash32.XXHash32(),1,1,1
org.apache.commons.codec.digest.XXHash32.XXHash32(int),1,1,1
"org.apache.commons.codec.digest.XXHash32.fromLittleEndian(byte[],int,int)",2,1,3
"org.apache.commons.codec.digest.XXHash32.getInt(byte[],int)",1,1,1
org.apache.commons.codec.digest.XXHash32.getValue(),1,4,4
org.apache.commons.codec.digest.XXHash32.initializeState(),1,1,1
"org.apache.commons.codec.digest.XXHash32.process(byte[],int)",1,1,1
org.apache.commons.codec.digest.XXHash32.reset(),1,1,1
"org.apache.commons.codec.digest.XXHash32.update(byte[],int,int)",3,5,6
org.apache.commons.codec.digest.XXHash32.update(int),1,1,1
"org.apache.commons.codec.digest.XXHash32Test.XXHash32Test(String,String)",2,1,3
"org.apache.commons.codec.digest.XXHash32Test.copy(InputStream,OutputStream,int)",1,2,2
org.apache.commons.codec.digest.XXHash32Test.factory(),1,1,1
org.apache.commons.codec.digest.XXHash32Test.toByteArray(InputStream),1,1,1
org.apache.commons.codec.digest.XXHash32Test.verifyChecksum(),1,1,1
org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone(),1,1,1
org.apache.commons.codec.language.AbstractCaverphone.encode(Object),2,1,2
"org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(String,String)",1,1,1
org.apache.commons.codec.language.Caverphone.Caverphone(),1,1,1
org.apache.commons.codec.language.Caverphone.caverphone(String),1,1,1
org.apache.commons.codec.language.Caverphone.encode(Object),2,1,2
org.apache.commons.codec.language.Caverphone.encode(String),1,1,1
"org.apache.commons.codec.language.Caverphone.isCaverphoneEqual(String,String)",1,1,1
org.apache.commons.codec.language.Caverphone1.encode(String),2,2,3
org.apache.commons.codec.language.Caverphone1Test.createStringEncoder(),1,1,1
org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111(),1,1,1
org.apache.commons.codec.language.Caverphone1Test.testEndMb(),1,1,1
org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals(),1,1,1
org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples(),1,1,1
org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples(),1,1,1
org.apache.commons.codec.language.Caverphone2.encode(String),2,2,3
org.apache.commons.codec.language.Caverphone2Test.createStringEncoder(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testEndMb(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals(),1,1,1
org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples(),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(char[]),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(int),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.length(),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.toString(),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.CologneInputBuffer(char[]),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft(char),1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.copyData(int,int)",1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar(),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextPos(),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext(),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.CologneOutputBuffer(int),1,1,1
org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char),1,1,1
"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.copyData(int,int)",1,1,1
"org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)",3,1,3
org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(String),4,16,36
org.apache.commons.codec.language.ColognePhonetic.encode(Object),2,2,2
org.apache.commons.codec.language.ColognePhonetic.encode(String),1,1,1
"org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual(String,String)",1,1,1
org.apache.commons.codec.language.ColognePhonetic.preprocess(String),2,2,6
"org.apache.commons.codec.language.ColognePhoneticTest.checkEncoding(String,String)",1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.createStringEncoder(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.finishTests(),1,3,3
org.apache.commons.codec.language.ColognePhoneticTest.hasTestCase(String),3,2,3
org.apache.commons.codec.language.ColognePhoneticTest.main(String[]),1,2,2
org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testAaclan(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testCanFail(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testExamples(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testHyphen(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals(),1,2,2
org.apache.commons.codec.language.ColognePhoneticTest.testSpecialCharsBetweenSameLetters(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella(),1,1,1
org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.Branch(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.createBranch(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.equals(Object),3,1,3
org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.finish(),1,2,2
org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.hashCode(),1,1,1
"org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.processNextReplacement(String,boolean)",1,6,6
org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.toString(),1,2,2
org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean),1,1,1
"org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.Rule(String,String,String,String)",1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getPatternLength(),1,1,1
"org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getReplacements(String,boolean)",3,2,4
org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.isVowel(char),1,1,5
org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.matches(String),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.toString(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(String),3,4,5
org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(Object),2,1,2
org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(String),2,1,2
"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(Scanner,String,Map<Character, List<Rule>>,Map<Character, Character>)",9,8,14
org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(String),1,3,3
"org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(String,boolean)",10,12,19
org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(String),1,3,3
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.createStringEncoder(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.encode(String),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.soundex(String),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3(),1,1,1
org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters(),1,1,1
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone(),1,1,1
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.DoubleMetaphoneResult(int),1,1,1
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String),1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String,String)",1,1,1
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char),1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char,char)",1,1,1
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(String),1,2,2
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(char),1,2,2
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(String),1,2,2
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(char),1,2,2
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getAlternate(),1,1,1
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getPrimary(),1,1,1
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.isComplete(),1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.charAt(String,int)",2,2,3
org.apache.commons.codec.language.DoubleMetaphone.cleanInput(String),3,1,3
"org.apache.commons.codec.language.DoubleMetaphone.conditionC0(String,int)",5,6,7
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(String,int)",4,4,5
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(String,int)",1,8,8
"org.apache.commons.codec.language.DoubleMetaphone.conditionL0(String,int)",3,5,6
"org.apache.commons.codec.language.DoubleMetaphone.conditionM0(String,int)",2,3,4
"org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String...)",4,4,5
org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String),1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String,boolean)",3,5,37
org.apache.commons.codec.language.DoubleMetaphone.encode(Object),2,1,2
org.apache.commons.codec.language.DoubleMetaphone.encode(String),1,1,1
org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen(),1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(DoubleMetaphoneResult,int)",1,2,2
"org.apache.commons.codec.language.DoubleMetaphone.handleC(String,DoubleMetaphoneResult,int)",7,16,17
"org.apache.commons.codec.language.DoubleMetaphone.handleCC(String,DoubleMetaphoneResult,int)",1,6,6
"org.apache.commons.codec.language.DoubleMetaphone.handleCH(String,DoubleMetaphoneResult,int)",4,7,7
"org.apache.commons.codec.language.DoubleMetaphone.handleD(String,DoubleMetaphoneResult,int)",1,4,4
"org.apache.commons.codec.language.DoubleMetaphone.handleG(String,DoubleMetaphoneResult,int,boolean)",1,26,26
"org.apache.commons.codec.language.DoubleMetaphone.handleGH(String,DoubleMetaphoneResult,int)",1,16,16
"org.apache.commons.codec.language.DoubleMetaphone.handleH(String,DoubleMetaphoneResult,int)",1,4,4
"org.apache.commons.codec.language.DoubleMetaphone.handleJ(String,DoubleMetaphoneResult,int,boolean)",1,16,17
"org.apache.commons.codec.language.DoubleMetaphone.handleL(String,DoubleMetaphoneResult,int)",1,3,3
"org.apache.commons.codec.language.DoubleMetaphone.handleP(String,DoubleMetaphoneResult,int)",1,2,3
"org.apache.commons.codec.language.DoubleMetaphone.handleR(String,DoubleMetaphoneResult,int,boolean)",1,5,6
"org.apache.commons.codec.language.DoubleMetaphone.handleS(String,DoubleMetaphoneResult,int,boolean)",1,15,17
"org.apache.commons.codec.language.DoubleMetaphone.handleSC(String,DoubleMetaphoneResult,int)",1,8,8
"org.apache.commons.codec.language.DoubleMetaphone.handleT(String,DoubleMetaphoneResult,int)",1,8,9
"org.apache.commons.codec.language.DoubleMetaphone.handleW(String,DoubleMetaphoneResult,int)",1,11,11
"org.apache.commons.codec.language.DoubleMetaphone.handleX(String,DoubleMetaphoneResult,int)",1,5,6
"org.apache.commons.codec.language.DoubleMetaphone.handleZ(String,DoubleMetaphoneResult,int,boolean)",1,6,7
"org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String)",1,1,1
"org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String,boolean)",1,1,1
org.apache.commons.codec.language.DoubleMetaphone.isSilentStart(String),3,2,3
org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(String),1,4,4
org.apache.commons.codec.language.DoubleMetaphone.isVowel(char),1,1,1
org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int),1,1,1
"org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone(int,boolean)",1,2,2
org.apache.commons.codec.language.DoubleMetaphone2Test.createStringEncoder(),1,1,1
org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(),1,1,1
org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(),1,1,1
"org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone(String,String)",1,2,2
"org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt(String,String)",1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.createStringEncoder(),1,1,1
"org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest(String[][],boolean)",1,3,3
org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest(boolean),1,2,2
org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended1(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3(),1,3,5
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(),1,3,4
org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(),1,1,1
org.apache.commons.codec.language.DoubleMetaphoneTest.validateFixture(String[][]),1,4,4
org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(String),1,2,2
org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Object),2,1,2
org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(String),2,4,5
org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(String),2,2,2
org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int),1,1,5
"org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(String,String)",6,9,11
org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(String),1,5,5
"org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(String,String)",4,3,6
org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(String),2,3,4
org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(String),1,3,3
org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(String),2,1,2
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.createStringEncoder(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(),1,1,1
org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0(),1,1,1
org.apache.commons.codec.language.Metaphone.Metaphone(),1,1,1
org.apache.commons.codec.language.Metaphone.encode(Object),2,1,2
org.apache.commons.codec.language.Metaphone.encode(String),1,1,1
org.apache.commons.codec.language.Metaphone.getMaxCodeLen(),1,1,1
"org.apache.commons.codec.language.Metaphone.isLastChar(int,int)",1,1,1
"org.apache.commons.codec.language.Metaphone.isMetaphoneEqual(String,String)",1,1,1
"org.apache.commons.codec.language.Metaphone.isNextChar(StringBuilder,int,char)",1,3,3
"org.apache.commons.codec.language.Metaphone.isPreviousChar(StringBuilder,int,char)",1,3,3
"org.apache.commons.codec.language.Metaphone.isVowel(StringBuilder,int)",1,1,1
org.apache.commons.codec.language.Metaphone.metaphone(String),5,51,81
"org.apache.commons.codec.language.Metaphone.regionMatch(StringBuilder,int,String)",1,3,3
org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int),1,1,1
"org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual(String,String[])",1,4,4
org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual(String[][]),1,2,2
org.apache.commons.codec.language.MetaphoneTest.createStringEncoder(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testExceedLength(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testMetaphone(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testPHTOF(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testTCH(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testWhy(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA(),1,1,1
org.apache.commons.codec.language.MetaphoneTest.validateFixture(String[][]),1,4,4
org.apache.commons.codec.language.Nysiis.Nysiis(),1,1,1
org.apache.commons.codec.language.Nysiis.Nysiis(boolean),1,1,1
org.apache.commons.codec.language.Nysiis.encode(Object),2,1,2
org.apache.commons.codec.language.Nysiis.encode(String),1,1,1
org.apache.commons.codec.language.Nysiis.isStrict(),1,1,1
org.apache.commons.codec.language.Nysiis.isVowel(char),1,1,5
org.apache.commons.codec.language.Nysiis.nysiis(String),3,9,14
"org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)",12,4,19
org.apache.commons.codec.language.NysiisTest.assertEncodings(String[]...),1,2,2
org.apache.commons.codec.language.NysiisTest.createStringEncoder(),1,1,1
"org.apache.commons.codec.language.NysiisTest.encodeAll(String[],String)",1,2,2
org.apache.commons.codec.language.NysiisTest.testBran(),1,1,1
org.apache.commons.codec.language.NysiisTest.testCap(),1,1,1
org.apache.commons.codec.language.NysiisTest.testDad(),1,1,1
org.apache.commons.codec.language.NysiisTest.testDan(),1,1,1
org.apache.commons.codec.language.NysiisTest.testDropBy(),1,1,1
org.apache.commons.codec.language.NysiisTest.testFal(),1,1,1
org.apache.commons.codec.language.NysiisTest.testOthers(),1,1,1
org.apache.commons.codec.language.NysiisTest.testRule1(),1,1,1
org.apache.commons.codec.language.NysiisTest.testRule2(),1,1,1
org.apache.commons.codec.language.NysiisTest.testRule4Dot1(),1,1,1
org.apache.commons.codec.language.NysiisTest.testRule4Dot2(),1,1,1
org.apache.commons.codec.language.NysiisTest.testRule5(),1,1,1
org.apache.commons.codec.language.NysiisTest.testRule6(),1,1,1
org.apache.commons.codec.language.NysiisTest.testRule7(),1,1,1
org.apache.commons.codec.language.NysiisTest.testSnad(),1,1,1
org.apache.commons.codec.language.NysiisTest.testSnat(),1,1,1
org.apache.commons.codec.language.NysiisTest.testSpecialBranches(),1,1,1
org.apache.commons.codec.language.NysiisTest.testTranan(),1,1,1
org.apache.commons.codec.language.NysiisTest.testTrueVariant(),1,1,1
org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(),1,1,1
org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(String),1,1,1
org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(char[]),1,1,1
"org.apache.commons.codec.language.RefinedSoundex.difference(String,String)",1,1,1
org.apache.commons.codec.language.RefinedSoundex.encode(Object),2,1,2
org.apache.commons.codec.language.RefinedSoundex.encode(String),1,1,1
org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char),2,1,2
org.apache.commons.codec.language.RefinedSoundex.soundex(String),5,4,6
org.apache.commons.codec.language.RefinedSoundexTest.createStringEncoder(),1,1,1
org.apache.commons.codec.language.RefinedSoundexTest.testDifference(),1,1,1
org.apache.commons.codec.language.RefinedSoundexTest.testEncode(),1,1,1
org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter(),1,1,1
org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance(),1,1,1
org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2(),1,1,1
org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3(),1,1,1
org.apache.commons.codec.language.Soundex.Soundex(),1,1,1
org.apache.commons.codec.language.Soundex.Soundex(String),1,1,1
"org.apache.commons.codec.language.Soundex.Soundex(String,boolean)",1,1,1
org.apache.commons.codec.language.Soundex.Soundex(char[]),1,1,1
"org.apache.commons.codec.language.Soundex.difference(String,String)",1,1,1
org.apache.commons.codec.language.Soundex.encode(Object),2,1,2
org.apache.commons.codec.language.Soundex.encode(String),1,1,1
org.apache.commons.codec.language.Soundex.getMaxLength(),1,1,1
org.apache.commons.codec.language.Soundex.hasMarker(char[]),3,1,3
org.apache.commons.codec.language.Soundex.map(char),2,1,3
org.apache.commons.codec.language.Soundex.setMaxLength(int),1,1,1
org.apache.commons.codec.language.Soundex.soundex(String),6,3,11
org.apache.commons.codec.language.SoundexTest.createStringEncoder(),1,1,1
org.apache.commons.codec.language.SoundexTest.testB650(),1,1,1
org.apache.commons.codec.language.SoundexTest.testBadCharacters(),1,1,1
org.apache.commons.codec.language.SoundexTest.testDifference(),1,1,1
org.apache.commons.codec.language.SoundexTest.testEncodeBasic(),1,1,1
org.apache.commons.codec.language.SoundexTest.testEncodeBatch2(),1,1,1
org.apache.commons.codec.language.SoundexTest.testEncodeBatch3(),1,1,1
org.apache.commons.codec.language.SoundexTest.testEncodeBatch4(),1,1,1
org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes(),1,1,1
org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens(),1,1,1
org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable(),1,1,1
org.apache.commons.codec.language.SoundexTest.testGenealogy(),1,1,1
org.apache.commons.codec.language.SoundexTest.testHWRuleEx1(),1,1,1
org.apache.commons.codec.language.SoundexTest.testHWRuleEx2(),1,1,1
org.apache.commons.codec.language.SoundexTest.testHWRuleEx3(),1,1,1
org.apache.commons.codec.language.SoundexTest.testMsSqlServer1(),1,1,1
org.apache.commons.codec.language.SoundexTest.testMsSqlServer2(),1,1,1
org.apache.commons.codec.language.SoundexTest.testMsSqlServer3(),1,1,1
org.apache.commons.codec.language.SoundexTest.testNewInstance(),1,1,1
org.apache.commons.codec.language.SoundexTest.testNewInstance2(),1,1,1
org.apache.commons.codec.language.SoundexTest.testNewInstance3(),1,1,1
org.apache.commons.codec.language.SoundexTest.testSimplifiedSoundex(),1,1,1
org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable(),1,1,1
org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour(),1,1,1
org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic(),1,1,1
org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute(),1,2,3
org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis(),1,2,3
org.apache.commons.codec.language.SoundexTest.testWikipediaAmericanSoundex(),1,1,1
org.apache.commons.codec.language.SoundexUtils.clean(String),3,5,6
"org.apache.commons.codec.language.SoundexUtils.difference(StringEncoder,String,String)",1,1,1
"org.apache.commons.codec.language.SoundexUtils.differenceEncoded(String,String)",2,2,5
org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(Object),2,1,2
org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(String),2,1,2
org.apache.commons.codec.language.bm.BeiderMorseEncoder.getNameType(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoder.getRuleType(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoder.isConcat(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat(boolean),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoder.setMaxPhonemes(int),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType(NameType),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType(RuleType),1,1,1
"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty(BeiderMorseEncoder,String)",1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createGenericApproxEncoder(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createStringEncoder(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(),1,2,2
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter(),1,2,2
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters(),1,3,3
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty(),1,2,2
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException(),1,1,1
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck(),1,2,3
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2(),1,2,2
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3(),1,2,2
org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.cacheSubSequence(CharSequence),2,2,3
org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test(),1,1,1
org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test(CharSequence),1,3,3
"org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test(CharSequence,int)",1,2,2
"org.apache.commons.codec.language.bm.Lang.Lang(List<LangRule>,Languages)",1,1,1
"org.apache.commons.codec.language.bm.Lang.LangRule.LangRule(Pattern,Set<String>,boolean)",1,1,1
org.apache.commons.codec.language.bm.Lang.LangRule.matches(String),1,1,1
org.apache.commons.codec.language.bm.Lang.guessLanguage(String),1,2,2
org.apache.commons.codec.language.bm.Lang.guessLanguages(String),1,4,5
org.apache.commons.codec.language.bm.Lang.instance(NameType),1,1,1
"org.apache.commons.codec.language.bm.Lang.loadFromResource(String,Languages)",6,5,8
"org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest(String,String)",1,1,1
org.apache.commons.codec.language.bm.LanguageGuessingTest.data(),1,1,1
org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing(),1,1,1
org.apache.commons.codec.language.bm.Languages.LanguageSet.from(Set<String>),1,1,2
org.apache.commons.codec.language.bm.Languages.Languages(Set<String>),1,1,1
org.apache.commons.codec.language.bm.Languages.SomeLanguages.SomeLanguages(Set<String>),1,1,1
org.apache.commons.codec.language.bm.Languages.SomeLanguages.contains(String),1,1,1
org.apache.commons.codec.language.bm.Languages.SomeLanguages.getAny(),1,1,1
org.apache.commons.codec.language.bm.Languages.SomeLanguages.getLanguages(),1,1,1
org.apache.commons.codec.language.bm.Languages.SomeLanguages.isEmpty(),1,1,1
org.apache.commons.codec.language.bm.Languages.SomeLanguages.isSingleton(),1,1,1
org.apache.commons.codec.language.bm.Languages.SomeLanguages.merge(LanguageSet),3,4,4
org.apache.commons.codec.language.bm.Languages.SomeLanguages.restrictTo(LanguageSet),3,5,5
org.apache.commons.codec.language.bm.Languages.SomeLanguages.toString(),1,1,1
org.apache.commons.codec.language.bm.Languages.getInstance(NameType),1,1,1
org.apache.commons.codec.language.bm.Languages.getInstance(String),1,5,6
org.apache.commons.codec.language.bm.Languages.getLanguages(),1,1,1
org.apache.commons.codec.language.bm.Languages.langResourceName(NameType),1,1,1
org.apache.commons.codec.language.bm.NameType.NameType(String),1,1,1
org.apache.commons.codec.language.bm.NameType.getName(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.PhonemeBuilder(Phoneme),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.PhonemeBuilder(Set<Phoneme>),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.append(CharSequence),1,2,2
"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(PhonemeExpr,int)",6,5,6
org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.empty(LanguageSet),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.getPhonemes(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.makeString(),1,3,3
"org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean)",1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean,int)",2,1,2
"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.RulesApplication(Map<String, List<Rule>>,CharSequence,PhonemeBuilder,int,int)",2,1,2
org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonemeBuilder(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.invoke(),4,4,5
org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound(),1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(PhonemeBuilder,Map<String, List<Rule>>)",3,6,8
org.apache.commons.codec.language.bm.PhoneticEngine.encode(String),1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.encode(String,LanguageSet)",8,12,15
org.apache.commons.codec.language.bm.PhoneticEngine.getLang(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.getNameType(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngine.isConcat(),1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngine.join(Iterable<String>,String)",1,3,3
org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest.test(),1,2,2
"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode(Map<String, String>,boolean,String)",2,6,6
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC(),1,1,1
"org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest(String,String,NameType,RuleType,boolean,int)",1,1,1
org.apache.commons.codec.language.bm.PhoneticEngineTest.data(),1,1,1
org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode(),1,3,3
"org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(CharSequence,LanguageSet)",1,1,1
"org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(Phoneme,Phoneme)",1,1,1
"org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(Phoneme,Phoneme,LanguageSet)",1,1,1
org.apache.commons.codec.language.bm.Rule.Phoneme.append(CharSequence),1,1,1
org.apache.commons.codec.language.bm.Rule.Phoneme.getLanguages(),1,1,1
org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemeText(),1,1,1
org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemes(),1,1,1
org.apache.commons.codec.language.bm.Rule.Phoneme.join(Phoneme),1,1,1
org.apache.commons.codec.language.bm.Rule.Phoneme.mergeWithLanguage(LanguageSet),1,1,1
org.apache.commons.codec.language.bm.Rule.Phoneme.toString(),1,1,1
org.apache.commons.codec.language.bm.Rule.PhonemeList.PhonemeList(List<Phoneme>),1,1,1
org.apache.commons.codec.language.bm.Rule.PhonemeList.getPhonemes(),1,1,1
"org.apache.commons.codec.language.bm.Rule.Rule(String,String,String,PhonemeExpr)",1,1,1
"org.apache.commons.codec.language.bm.Rule.contains(CharSequence,char)",3,2,3
"org.apache.commons.codec.language.bm.Rule.createResourceName(NameType,RuleType,String)",1,1,1
"org.apache.commons.codec.language.bm.Rule.createScanner(NameType,RuleType,String)",1,1,1
org.apache.commons.codec.language.bm.Rule.createScanner(String),1,1,1
"org.apache.commons.codec.language.bm.Rule.endsWith(CharSequence,CharSequence)",4,2,4
"org.apache.commons.codec.language.bm.Rule.getInstance(NameType,RuleType,LanguageSet)",1,2,2
"org.apache.commons.codec.language.bm.Rule.getInstance(NameType,RuleType,String)",1,1,1
"org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,LanguageSet)",1,2,2
"org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,String)",2,2,2
org.apache.commons.codec.language.bm.Rule.getLContext(),1,1,1
org.apache.commons.codec.language.bm.Rule.getPattern(),1,1,1
org.apache.commons.codec.language.bm.Rule.getPhoneme(),1,1,1
org.apache.commons.codec.language.bm.Rule.getRContext(),1,1,1
org.apache.commons.codec.language.bm.Rule.parsePhoneme(String),3,2,3
org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(String),3,5,6
"org.apache.commons.codec.language.bm.Rule.parseRules(Scanner,String)",8,7,12
org.apache.commons.codec.language.bm.Rule.pattern(String),12,18,23
"org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(CharSequence,int)",5,2,5
"org.apache.commons.codec.language.bm.Rule.startsWith(CharSequence,CharSequence)",4,2,4
org.apache.commons.codec.language.bm.Rule.stripQuotes(String),1,3,3
org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher.describeTo(Description),1,1,1
org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher.matches(Object),1,1,1
org.apache.commons.codec.language.bm.RuleTest.makePhonemes(),1,1,3
org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative(),1,4,4
org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero(),1,3,3
org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks(),1,1,1
org.apache.commons.codec.language.bm.RuleType.RuleType(String),1,1,1
org.apache.commons.codec.language.bm.RuleType.getName(),1,1,1
org.apache.commons.codec.net.BCodec.BCodec(),1,1,1
org.apache.commons.codec.net.BCodec.BCodec(Charset),1,1,1
org.apache.commons.codec.net.BCodec.BCodec(String),1,1,1
org.apache.commons.codec.net.BCodec.decode(Object),3,3,3
org.apache.commons.codec.net.BCodec.decode(String),2,2,3
org.apache.commons.codec.net.BCodec.doDecoding(byte[]),2,1,2
org.apache.commons.codec.net.BCodec.doEncoding(byte[]),2,1,2
org.apache.commons.codec.net.BCodec.encode(Object),3,3,3
org.apache.commons.codec.net.BCodec.encode(String),2,1,2
"org.apache.commons.codec.net.BCodec.encode(String,Charset)",2,1,2
"org.apache.commons.codec.net.BCodec.encode(String,String)",2,2,3
org.apache.commons.codec.net.BCodec.getCharset(),1,1,1
org.apache.commons.codec.net.BCodec.getDefaultCharset(),1,1,1
org.apache.commons.codec.net.BCodec.getEncoding(),1,1,1
org.apache.commons.codec.net.BCodecTest.constructString(int[]),1,3,3
org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode(),1,1,1
org.apache.commons.codec.net.BCodecTest.testDecodeObjects(),1,1,2
org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull(),1,1,1
org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull(),1,1,1
org.apache.commons.codec.net.BCodecTest.testEncodeObjects(),1,1,2
org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull(),1,1,1
org.apache.commons.codec.net.BCodecTest.testInvalidEncoding(),1,1,1
org.apache.commons.codec.net.BCodecTest.testNullInput(),1,1,1
org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip(),1,1,1
org.apache.commons.codec.net.PercentCodec.PercentCodec(),1,1,1
"org.apache.commons.codec.net.PercentCodec.PercentCodec(byte[],boolean)",1,1,1
org.apache.commons.codec.net.PercentCodec.canEncode(byte),1,3,3
org.apache.commons.codec.net.PercentCodec.containsSpace(byte[]),3,1,3
org.apache.commons.codec.net.PercentCodec.decode(Object),3,3,3
org.apache.commons.codec.net.PercentCodec.decode(byte[]),4,4,7
"org.apache.commons.codec.net.PercentCodec.doEncode(byte[],int,boolean)",1,5,7
org.apache.commons.codec.net.PercentCodec.encode(Object),3,3,3
org.apache.commons.codec.net.PercentCodec.encode(byte[]),3,4,5
org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes(byte[]),1,1,3
org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes(byte[]),1,2,3
org.apache.commons.codec.net.PercentCodec.inAlwaysEncodeCharsRange(byte),1,1,2
org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChar(byte),1,1,3
org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars(byte[]),1,3,3
org.apache.commons.codec.net.PercentCodec.isAsciiChar(byte),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testBasicSpace(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding(),1,3,3
org.apache.commons.codec.net.PercentCodecTest.testDecodeNullObject(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testDecodeUnsupportedObject(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testEncodeNullObject(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testEncodeUnsupportedObject(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject(),1,1,1
org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(),1,1,1
org.apache.commons.codec.net.QCodec.QCodec(),1,1,1
org.apache.commons.codec.net.QCodec.QCodec(Charset),1,1,1
org.apache.commons.codec.net.QCodec.QCodec(String),1,1,1
org.apache.commons.codec.net.QCodec.decode(Object),3,3,3
org.apache.commons.codec.net.QCodec.decode(String),2,2,3
org.apache.commons.codec.net.QCodec.doDecoding(byte[]),5,2,7
org.apache.commons.codec.net.QCodec.doEncoding(byte[]),2,1,5
org.apache.commons.codec.net.QCodec.encode(Object),3,3,3
org.apache.commons.codec.net.QCodec.encode(String),2,1,2
"org.apache.commons.codec.net.QCodec.encode(String,Charset)",2,1,2
"org.apache.commons.codec.net.QCodec.encode(String,String)",2,2,3
org.apache.commons.codec.net.QCodec.getCharset(),1,1,1
org.apache.commons.codec.net.QCodec.getDefaultCharset(),1,1,1
org.apache.commons.codec.net.QCodec.getEncoding(),1,1,1
org.apache.commons.codec.net.QCodec.isEncodeBlanks(),1,1,1
org.apache.commons.codec.net.QCodec.setEncodeBlanks(boolean),1,1,1
org.apache.commons.codec.net.QCodecTest.constructString(int[]),1,3,3
org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode(),1,1,1
org.apache.commons.codec.net.QCodecTest.testDecodeObjects(),1,1,2
org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull(),1,1,1
org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(),1,1,1
org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull(),1,1,1
org.apache.commons.codec.net.QCodecTest.testEncodeObjects(),1,1,2
org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull(),1,1,1
org.apache.commons.codec.net.QCodecTest.testInvalidEncoding(),1,1,1
org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy(),1,1,1
org.apache.commons.codec.net.QCodecTest.testNullInput(),1,1,1
org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip(),1,1,1
org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(Charset),1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(Charset,boolean)",1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(String),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(boolean),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.decode(Object),4,4,4
org.apache.commons.codec.net.QuotedPrintableCodec.decode(String),1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,Charset)",2,1,2
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,String)",2,1,2
org.apache.commons.codec.net.QuotedPrintableCodec.decode(byte[]),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[]),5,4,8
org.apache.commons.codec.net.QuotedPrintableCodec.encode(Object),4,4,4
org.apache.commons.codec.net.QuotedPrintableCodec.encode(String),1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,Charset)",2,1,2
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,String)",2,1,2
org.apache.commons.codec.net.QuotedPrintableCodec.encode(byte[]),1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int,boolean,ByteArrayOutputStream)",2,2,2
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[])",1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[],boolean)",2,13,16
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int,ByteArrayOutputStream)",1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.getCharset(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset(),1,1,1
"org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])",1,1,2
org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int),1,1,2
org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString(int[]),1,3,3
org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid(),1,1,4
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(),1,1,2
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(),1,1,2
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(),1,1,1
org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode(),1,1,1
org.apache.commons.codec.net.RFC1522Codec.decodeText(String),7,2,8
"org.apache.commons.codec.net.RFC1522Codec.encodeText(String,Charset)",2,1,2
"org.apache.commons.codec.net.RFC1522Codec.encodeText(String,String)",2,1,2
org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.doDecoding(byte[]),1,1,1
org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.doEncoding(byte[]),1,1,1
org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.getEncoding(),1,1,1
org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException(String),1,1,2
org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(),1,1,1
org.apache.commons.codec.net.RFC1522CodecTest.testNullInput(),1,1,1
org.apache.commons.codec.net.URLCodec.URLCodec(),1,1,1
org.apache.commons.codec.net.URLCodec.URLCodec(String),1,1,1
org.apache.commons.codec.net.URLCodec.decode(Object),4,4,4
org.apache.commons.codec.net.URLCodec.decode(String),2,2,3
"org.apache.commons.codec.net.URLCodec.decode(String,String)",2,1,2
org.apache.commons.codec.net.URLCodec.decode(byte[]),1,1,1
org.apache.commons.codec.net.URLCodec.decodeUrl(byte[]),5,4,6
org.apache.commons.codec.net.URLCodec.encode(Object),4,4,4
org.apache.commons.codec.net.URLCodec.encode(String),2,2,3
"org.apache.commons.codec.net.URLCodec.encode(String,String)",2,1,2
org.apache.commons.codec.net.URLCodec.encode(byte[]),1,1,1
"org.apache.commons.codec.net.URLCodec.encodeUrl(BitSet,byte[])",2,3,7
org.apache.commons.codec.net.URLCodec.getDefaultCharset(),1,1,1
org.apache.commons.codec.net.URLCodec.getEncoding(),1,1,1
org.apache.commons.codec.net.URLCodecTest.constructString(int[]),1,3,3
org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid(),1,1,5
org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent(),1,2,2
org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(),1,1,2
org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testEncodeNull(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(),1,1,2
org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding(),1,1,3
org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip(),1,1,1
org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode(),1,1,1
org.apache.commons.codec.net.URLCodecTest.validateState(URLCodec),1,1,1
org.apache.commons.codec.net.Utils.digit16(byte),2,1,2
org.apache.commons.codec.net.Utils.hexDigit(int),1,1,1
org.apache.commons.codec.net.UtilsTest.testConstructor(),1,1,1
,,,
Class,OCavg,V,WMC
org.apache.commons.codec.BinaryEncoderAbstractTest,1,116,2
org.apache.commons.codec.CharEncoding,n/a,86,0
org.apache.commons.codec.CharEncodingTest,1,143,7
org.apache.commons.codec.Charsets,2,203,4
org.apache.commons.codec.CharsetsTest,1,258,7
org.apache.commons.codec.DecoderException,1,109,4
org.apache.commons.codec.DecoderExceptionTest,1,249,4
org.apache.commons.codec.EncoderException,1,109,4
org.apache.commons.codec.EncoderExceptionTest,1,249,4
org.apache.commons.codec.Resources,2,84,2
org.apache.commons.codec.StringEncoderAbstractTest,1.62,"1,003",13
org.apache.commons.codec.StringEncoderComparator,1,194,3
org.apache.commons.codec.StringEncoderComparatorTest,1.33,431,4
org.apache.commons.codec.binary.Base32,4.18,"11,668",46
org.apache.commons.codec.binary.Base32InputStream,1,138,3
org.apache.commons.codec.binary.Base32InputStreamTest,1.42,"5,650",27
org.apache.commons.codec.binary.Base32OutputStream,1,141,3
org.apache.commons.codec.binary.Base32OutputStreamTest,1.89,"2,622",17
org.apache.commons.codec.binary.Base32Test,1.94,"3,283",33
org.apache.commons.codec.binary.Base32TestData,2.17,"1,275",13
org.apache.commons.codec.binary.Base64,2.5,"10,254",65
org.apache.commons.codec.binary.Base64Codec13Test,2.42,"157,161",29
org.apache.commons.codec.binary.Base64InputStream,1,138,3
org.apache.commons.codec.binary.Base64InputStreamTest,1.36,"6,952",30
org.apache.commons.codec.binary.Base64OutputStream,1,141,3
org.apache.commons.codec.binary.Base64OutputStreamTest,1.8,"3,546",18
org.apache.commons.codec.binary.Base64Test,1.13,"48,928",70
org.apache.commons.codec.binary.Base64TestData,2.33,"15,244",14
org.apache.commons.codec.binary.BaseNCodec,2,"4,074",42
org.apache.commons.codec.binary.BaseNCodec.Context,1,128,2
org.apache.commons.codec.binary.BaseNCodecInputStream,2.88,"1,414",23
org.apache.commons.codec.binary.BaseNCodecOutputStream,2.29,"1,027",16
org.apache.commons.codec.binary.BaseNCodecTest,1,"1,229",14
org.apache.commons.codec.binary.BinaryCodec,3,"2,562",33
org.apache.commons.codec.binary.BinaryCodecTest,1.12,"34,435",18
org.apache.commons.codec.binary.CharSequenceUtils,6,401,6
org.apache.commons.codec.binary.Codec105ErrorInputStream,2,210,4
org.apache.commons.codec.binary.Hex,1.44,"3,013",36
org.apache.commons.codec.binary.HexTest,1.16,"6,183",58
org.apache.commons.codec.binary.StringUtils,1.4,"1,361",28
org.apache.commons.codec.binary.StringUtilsTest,1,"2,581",23
org.apache.commons.codec.cli.Digest,2.5,"1,459",25
org.apache.commons.codec.digest.Apr1CryptTest,1,"1,014",9
org.apache.commons.codec.digest.B64,1.67,455,5
org.apache.commons.codec.digest.B64Test,1,169,2
org.apache.commons.codec.digest.Crypt,2,338,8
org.apache.commons.codec.digest.CryptTest,1,197,4
org.apache.commons.codec.digest.DigestUtils,1.01,"5,790",104
org.apache.commons.codec.digest.DigestUtilsTest,1.03,"4,447",36
org.apache.commons.codec.digest.HmacAlgorithms,1,82,3
org.apache.commons.codec.digest.HmacAlgorithmsTest,1.05,"4,883",21
org.apache.commons.codec.digest.HmacUtils,1.05,"4,133",61
org.apache.commons.codec.digest.HmacUtilsTest,1,"2,787",23
org.apache.commons.codec.digest.Md5Crypt,2.2,"2,660",22
org.apache.commons.codec.digest.Md5CryptTest,1,586,8
org.apache.commons.codec.digest.MessageDigestAlgorithms,1,301,2
org.apache.commons.codec.digest.MessageDigestAlgorithmsTest,1.47,"1,339",22
org.apache.commons.codec.digest.PureJavaCrc32,2.5,"26,062",15
org.apache.commons.codec.digest.PureJavaCrc32C,2.8,"26,470",14
org.apache.commons.codec.digest.PureJavaCrc32CTest,1.8,515,9
org.apache.commons.codec.digest.PureJavaCrc32Test,2.67,"7,110",8
org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest,3.57,"3,387",25
org.apache.commons.codec.digest.PureJavaCrc32Test.PerformanceTest.BenchResult,1,58,1
org.apache.commons.codec.digest.PureJavaCrc32Test.Table,4,"1,865",16
org.apache.commons.codec.digest.Sha256CryptTest,1,852,8
org.apache.commons.codec.digest.Sha2Crypt,4,"5,900",28
org.apache.commons.codec.digest.Sha2CryptTest,1,13,1
org.apache.commons.codec.digest.Sha512CryptTest,1,826,10
org.apache.commons.codec.digest.UnixCrypt,2.08,"20,763",25
org.apache.commons.codec.digest.UnixCryptTest,1,634,9
org.apache.commons.codec.digest.XXHash32,2,"2,823",20
org.apache.commons.codec.digest.XXHash32Test,1.4,744,7
org.apache.commons.codec.language.AbstractCaverphone,1.33,151,4
org.apache.commons.codec.language.Caverphone,1.2,225,6
org.apache.commons.codec.language.Caverphone1,2,"2,095",2
org.apache.commons.codec.language.Caverphone1Test,1,440,6
org.apache.commons.codec.language.Caverphone2,2,"2,198",2
org.apache.commons.codec.language.Caverphone2Test,1,"2,821",10
org.apache.commons.codec.language.ColognePhonetic,5.67,"4,161",34
org.apache.commons.codec.language.ColognePhonetic.CologneBuffer,1,195,4
org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer,1,310,6
org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer,1,164,3
org.apache.commons.codec.language.ColognePhoneticTest,1.38,"2,872",22
org.apache.commons.codec.language.DaitchMokotoffSoundex,4.5,"5,738",45
org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch,1.86,622,13
org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule,1.5,575,9
org.apache.commons.codec.language.DaitchMokotoffSoundexTest,1,"1,800",13
org.apache.commons.codec.language.DoubleMetaphone,4.66,"22,577",177
org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,1.33,860,16
org.apache.commons.codec.language.DoubleMetaphone2Test,1.25,"41,442",5
org.apache.commons.codec.language.DoubleMetaphoneTest,1.61,"25,648",29
org.apache.commons.codec.language.MatchRatingApproachEncoder,3.18,"4,255",35
org.apache.commons.codec.language.MatchRatingApproachEncoderTest,1,"6,030",93
org.apache.commons.codec.language.Metaphone,6,"5,611",72
org.apache.commons.codec.language.MetaphoneTest,1.21,"5,673",41
org.apache.commons.codec.language.Nysiis,4,"3,516",32
org.apache.commons.codec.language.NysiisTest,1.09,"2,905",24
org.apache.commons.codec.language.RefinedSoundex,1.88,871,15
org.apache.commons.codec.language.RefinedSoundexTest,1,"1,225",7
org.apache.commons.codec.language.Soundex,1.83,"1,747",22
org.apache.commons.codec.language.SoundexTest,1.07,"6,758",30
org.apache.commons.codec.language.SoundexUtils,3.33,604,10
org.apache.commons.codec.language.bm.BeiderMorseEncoder,1.22,595,11
org.apache.commons.codec.language.bm.BeiderMorseEncoderTest,1.43,"2,434",30
org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest,1.71,795,12
org.apache.commons.codec.language.bm.Lang,3.6,"1,567",18
org.apache.commons.codec.language.bm.Lang.LangRule,1,138,2
org.apache.commons.codec.language.bm.LanguageGuessingTest,1,498,3
org.apache.commons.codec.language.bm.Languages,1.32,"1,924",25
org.apache.commons.codec.language.bm.Languages.LanguageSet,2,93,2
org.apache.commons.codec.language.bm.Languages.SomeLanguages,1.78,635,16
org.apache.commons.codec.language.bm.NameType,1,51,2
org.apache.commons.codec.language.bm.PhoneticEngine,3.09,"5,626",34
org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder,2.14,638,15
org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication,2,648,10
org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest,2,208,2
org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest,1.8,"4,009",9
org.apache.commons.codec.language.bm.PhoneticEngineTest,1.67,997,5
org.apache.commons.codec.language.bm.ResourceConstants,n/a,36,0
org.apache.commons.codec.language.bm.Rule,2.65,"9,379",82
org.apache.commons.codec.language.bm.Rule.Phoneme,1.36,896,15
org.apache.commons.codec.language.bm.Rule.PhonemeList,1,53,2
org.apache.commons.codec.language.bm.RuleTest,2.75,"3,336",11
org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher,1,72,2
org.apache.commons.codec.language.bm.RuleType,1,51,2
org.apache.commons.codec.net.BCodec,1.71,999,24
org.apache.commons.codec.net.BCodecTest,1.2,"1,523",12
org.apache.commons.codec.net.PercentCodec,2.6,"2,593",39
org.apache.commons.codec.net.PercentCodecTest,1,"1,740",12
org.apache.commons.codec.net.QCodec,2.31,"2,774",37
org.apache.commons.codec.net.QCodecTest,1.15,"2,163",15
org.apache.commons.codec.net.QuotedPrintableCodec,2.21,"4,370",53
org.apache.commons.codec.net.QuotedPrintableCodecTest,1.09,"3,927",24
org.apache.commons.codec.net.RFC1522Codec,3.67,"1,188",11
org.apache.commons.codec.net.RFC1522CodecTest,1,393,3
org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec,1,57,3
org.apache.commons.codec.net.URLCodec,2.64,"2,561",37
org.apache.commons.codec.net.URLCodecTest,1.17,"3,605",21
org.apache.commons.codec.net.Utils,1.5,202,3
org.apache.commons.codec.net.UtilsTest,1,10,1
,,,
Package,v(G)avg,v(G)tot,
org.apache.commons.codec,1.29,63,
org.apache.commons.codec.binary,1.89,766,
org.apache.commons.codec.cli,2.6,26,
org.apache.commons.codec.digest,1.37,536,
org.apache.commons.codec.language,2.38,968,
org.apache.commons.codec.language.bm,2.03,304,
org.apache.commons.codec.net,1.95,332,
,,,
Module,LOC,v(G)avg,v(G)tot
commons-codec,"43,292",1.89,"2,995"
,,,
FileType,LOC,,
HTML,285,,
Java,"32,916",,
Text,"8,086",,
XML,"1,976",,
YAML,29,,
,,,
Project,LOC,v(G)avg,v(G)tot
project,"43,292",1.89,"2,995"
,,,
,,,
MI,65.42703334,,
